/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunksuperset"] = globalThis["webpackChunksuperset"] || []).push([["src_components_Datasource_DatasourceEditor_jsx"],{

/***/ "./src/components/Datasource/DatasourceEditor.jsx":
/*!********************************************************!*\
  !*** ./src/components/Datasource/DatasourceEditor.jsx ***!
  \********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime-corejs3/core-js-stable/instance/includes */ \"./node_modules/@babel/runtime-corejs3/core-js-stable/instance/includes.js\");\n/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rison */ \"./node_modules/rison/js/rison.js\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rison__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var src_components_Radio__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/Radio */ \"./src/components/Radio/index.tsx\");\n/* harmony import */ var src_components_Card__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/Card */ \"./src/components/Card/index.tsx\");\n/* harmony import */ var src_components_Alert__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/components/Alert */ \"./src/components/Alert/index.tsx\");\n/* harmony import */ var src_components_Badge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/components/Badge */ \"./src/components/Badge/index.tsx\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! shortid */ \"./node_modules/shortid/index.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(shortid__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/connection/SupersetClient.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @superset-ui/core */ \"./node_modules/@emotion/react/dist/emotion-element-99289b21.browser.esm.js\");\n/* harmony import */ var src_components__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/components */ \"./src/components/index.ts\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* harmony import */ var src_components_Button__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/components/Button */ \"./src/components/Button/index.tsx\");\n/* harmony import */ var src_components_Tabs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/components/Tabs */ \"./src/components/Tabs/index.ts\");\n/* harmony import */ var src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/components/CertifiedBadge */ \"./src/components/CertifiedBadge/index.tsx\");\n/* harmony import */ var src_components_WarningIconWithTooltip__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/components/WarningIconWithTooltip */ \"./src/components/WarningIconWithTooltip/index.tsx\");\n/* harmony import */ var src_components_DatabaseSelector__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/components/DatabaseSelector */ \"./src/components/DatabaseSelector/index.tsx\");\n/* harmony import */ var src_components_Label__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/components/Label */ \"./src/components/Label/index.tsx\");\n/* harmony import */ var src_components_Loading__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/components/Loading */ \"./src/components/Loading/index.tsx\");\n/* harmony import */ var src_components_TableSelector__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/components/TableSelector */ \"./src/components/TableSelector/index.tsx\");\n/* harmony import */ var src_components_EditableTitle__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/components/EditableTitle */ \"./src/components/EditableTitle/index.tsx\");\n/* harmony import */ var src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! src/utils/getClientErrorObject */ \"./src/utils/getClientErrorObject.ts\");\n/* harmony import */ var src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! src/explore/components/controls/CheckboxControl */ \"./src/explore/components/controls/CheckboxControl.jsx\");\n/* harmony import */ var src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! src/explore/components/controls/TextControl */ \"./src/explore/components/controls/TextControl/index.tsx\");\n/* harmony import */ var src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! src/explore/components/controls/TextAreaControl */ \"./src/explore/components/controls/TextAreaControl.jsx\");\n/* harmony import */ var src_explore_components_controls_SpatialControl__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! src/explore/components/controls/SpatialControl */ \"./src/explore/components/controls/SpatialControl.jsx\");\n/* harmony import */ var src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! src/components/MessageToasts/withToasts */ \"./src/components/MessageToasts/withToasts.tsx\");\n/* harmony import */ var src_featureFlags__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! src/featureFlags */ \"./src/featureFlags.ts\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var _CollectionTable__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./CollectionTable */ \"./src/components/Datasource/CollectionTable.tsx\");\n/* harmony import */ var _Fieldset__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./Fieldset */ \"./src/components/Datasource/Fieldset.tsx\");\n/* harmony import */ var _Field__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./Field */ \"./src/components/Datasource/Field.tsx\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst DatasourceContainer = _superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.styled.div`\n  .change-warning {\n    margin: 16px 10px 0;\n    color: ${(_ref) => {let { theme } = _ref;return theme.colors.warning.base;}};\n  }\n\n  .change-warning .bold {\n    font-weight: ${(_ref2) => {let { theme } = _ref2;return theme.typography.weights.bold;}};\n  }\n\n  .form-group.has-feedback > .help-block {\n    margin-top: 8px;\n  }\n\n  .form-group.form-group-md {\n    margin-bottom: 8px;\n  }\n`;\n\nconst FlexRowContainer = _superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.styled.div`\n  align-items: center;\n  display: flex;\n\n  svg {\n    margin-right: ${(_ref3) => {let { theme } = _ref3;return theme.gridUnit;}}px;\n  }\n`;\n\nconst StyledTableTabs = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.styled)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_12__[\"default\"])`\n  overflow: visible;\n  .ant-tabs-content-holder {\n    overflow: visible;\n  }\n`;\n\nconst StyledBadge = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.styled)(src_components_Badge__WEBPACK_IMPORTED_MODULE_7__[\"default\"])`\n  .ant-badge-count {\n    line-height: ${(_ref4) => {let { theme } = _ref4;return theme.gridUnit * 4;}}px;\n    height: ${(_ref5) => {let { theme } = _ref5;return theme.gridUnit * 4;}}px;\n    margin-left: ${(_ref6) => {let { theme } = _ref6;return theme.gridUnit;}}px;\n  }\n`;\n\nconst EditLockContainer = _superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.styled.div`\n  font-size: ${(_ref7) => {let { theme } = _ref7;return theme.typography.sizes.s;}}px;\n  display: flex;\n  align-items: center;\n  a {\n    padding: 0 10px;\n  }\n`;\n\nconst ColumnButtonWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.styled.div`\n  text-align: right;\n  ${(_ref8) => {let { theme } = _ref8;return `margin-bottom: ${theme.gridUnit * 2}px`;}}\n`;\n\nconst StyledLabelWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.styled.div`\n  display: flex;\n  align-items: center;\n  span {\n    margin-right: ${(_ref9) => {let { theme } = _ref9;return theme.gridUnit;}}px;\n  }\n`;\n\nconst StyledColumnsTabWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.styled.div`\n  .table > tbody > tr > td {\n    vertical-align: middle;\n  }\n\n  .ant-tag {\n    margin-top: ${(_ref10) => {let { theme } = _ref10;return theme.gridUnit;}}px;\n  }\n`;\n\nconst StyledButtonWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_31__.styled.span`\n  ${(_ref11) => {let { theme } = _ref11;return `\n    margin-top: ${theme.gridUnit * 3}px;\n    margin-left: ${theme.gridUnit * 3}px;\n  `;}}\n`;\n\nconst checkboxGenerator = (d, onChange) =>\n(0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], { value: d, onChange: onChange });\n\nconst DATA_TYPES = [\n{ value: 'STRING', label: 'STRING' },\n{ value: 'NUMERIC', label: 'NUMERIC' },\n{ value: 'DATETIME', label: 'DATETIME' },\n{ value: 'BOOLEAN', label: 'BOOLEAN' }];\n\n\nconst DATASOURCE_TYPES_ARR = [\n{ key: 'physical', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Physical (table or view)') },\n{ key: 'virtual', label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Virtual (SQL)') }];\n\nconst DATASOURCE_TYPES = {};\nDATASOURCE_TYPES_ARR.forEach((o) => {\n  DATASOURCE_TYPES[o.key] = o;\n});var _ref13 =  false ? 0 : { name: \"l0hchv-CollectionTabTitle\", styles: \"display:flex;align-items:center;label:CollectionTabTitle;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9hcHAvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvRGF0YXNvdXJjZS9EYXRhc291cmNlRWRpdG9yLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwSk0iLCJmaWxlIjoiL2FwcC9zdXBlcnNldC1mcm9udGVuZC9zcmMvY29tcG9uZW50cy9EYXRhc291cmNlL0RhdGFzb3VyY2VFZGl0b3IuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcclxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXHJcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXHJcbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcclxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxyXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcclxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXHJcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXHJcbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXHJcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxyXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXHJcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IHJpc29uIGZyb20gJ3Jpc29uJztcclxuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgeyBSYWRpbyB9IGZyb20gJ3NyYy9jb21wb25lbnRzL1JhZGlvJztcclxuaW1wb3J0IENhcmQgZnJvbSAnc3JjL2NvbXBvbmVudHMvQ2FyZCc7XHJcbmltcG9ydCBBbGVydCBmcm9tICdzcmMvY29tcG9uZW50cy9BbGVydCc7XHJcbmltcG9ydCBCYWRnZSBmcm9tICdzcmMvY29tcG9uZW50cy9CYWRnZSc7XHJcbmltcG9ydCBzaG9ydGlkIGZyb20gJ3Nob3J0aWQnO1xyXG5pbXBvcnQgeyBzdHlsZWQsIFN1cGVyc2V0Q2xpZW50LCB0LCB3aXRoVGhlbWUgfSBmcm9tICdAc3VwZXJzZXQtdWkvY29yZSc7XHJcbmltcG9ydCB7IFNlbGVjdCwgQXN5bmNTZWxlY3QsIFJvdywgQ29sIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMnO1xyXG5pbXBvcnQgeyBGb3JtTGFiZWwgfSBmcm9tICdzcmMvY29tcG9uZW50cy9Gb3JtJztcclxuaW1wb3J0IEJ1dHRvbiBmcm9tICdzcmMvY29tcG9uZW50cy9CdXR0b24nO1xyXG5pbXBvcnQgVGFicyBmcm9tICdzcmMvY29tcG9uZW50cy9UYWJzJztcclxuaW1wb3J0IENlcnRpZmllZEJhZGdlIGZyb20gJ3NyYy9jb21wb25lbnRzL0NlcnRpZmllZEJhZGdlJztcclxuaW1wb3J0IFdhcm5pbmdJY29uV2l0aFRvb2x0aXAgZnJvbSAnc3JjL2NvbXBvbmVudHMvV2FybmluZ0ljb25XaXRoVG9vbHRpcCc7XHJcbmltcG9ydCBEYXRhYmFzZVNlbGVjdG9yIGZyb20gJ3NyYy9jb21wb25lbnRzL0RhdGFiYXNlU2VsZWN0b3InO1xyXG5pbXBvcnQgTGFiZWwgZnJvbSAnc3JjL2NvbXBvbmVudHMvTGFiZWwnO1xyXG5pbXBvcnQgTG9hZGluZyBmcm9tICdzcmMvY29tcG9uZW50cy9Mb2FkaW5nJztcclxuaW1wb3J0IFRhYmxlU2VsZWN0b3IgZnJvbSAnc3JjL2NvbXBvbmVudHMvVGFibGVTZWxlY3Rvcic7XHJcbmltcG9ydCBFZGl0YWJsZVRpdGxlIGZyb20gJ3NyYy9jb21wb25lbnRzL0VkaXRhYmxlVGl0bGUnO1xyXG5pbXBvcnQgeyBnZXRDbGllbnRFcnJvck9iamVjdCB9IGZyb20gJ3NyYy91dGlscy9nZXRDbGllbnRFcnJvck9iamVjdCc7XHJcbmltcG9ydCBDaGVja2JveENvbnRyb2wgZnJvbSAnc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9DaGVja2JveENvbnRyb2wnO1xyXG5pbXBvcnQgVGV4dENvbnRyb2wgZnJvbSAnc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9UZXh0Q29udHJvbCc7XHJcbmltcG9ydCBUZXh0QXJlYUNvbnRyb2wgZnJvbSAnc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9UZXh0QXJlYUNvbnRyb2wnO1xyXG5pbXBvcnQgU3BhdGlhbENvbnRyb2wgZnJvbSAnc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9TcGF0aWFsQ29udHJvbCc7XHJcbmltcG9ydCB3aXRoVG9hc3RzIGZyb20gJ3NyYy9jb21wb25lbnRzL01lc3NhZ2VUb2FzdHMvd2l0aFRvYXN0cyc7XHJcbmltcG9ydCB7IEZlYXR1cmVGbGFnLCBpc0ZlYXR1cmVFbmFibGVkIH0gZnJvbSAnc3JjL2ZlYXR1cmVGbGFncyc7XHJcbmltcG9ydCBJY29ucyBmcm9tICdzcmMvY29tcG9uZW50cy9JY29ucyc7XHJcbmltcG9ydCBDb2xsZWN0aW9uVGFibGUgZnJvbSAnLi9Db2xsZWN0aW9uVGFibGUnO1xyXG5pbXBvcnQgRmllbGRzZXQgZnJvbSAnLi9GaWVsZHNldCc7XHJcbmltcG9ydCBGaWVsZCBmcm9tICcuL0ZpZWxkJztcclxuXHJcbmNvbnN0IERhdGFzb3VyY2VDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIC5jaGFuZ2Utd2FybmluZyB7XHJcbiAgICBtYXJnaW46IDE2cHggMTBweCAwO1xyXG4gICAgY29sb3I6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuY29sb3JzLndhcm5pbmcuYmFzZX07XHJcbiAgfVxyXG5cclxuICAuY2hhbmdlLXdhcm5pbmcgLmJvbGQge1xyXG4gICAgZm9udC13ZWlnaHQ6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUudHlwb2dyYXBoeS53ZWlnaHRzLmJvbGR9O1xyXG4gIH1cclxuXHJcbiAgLmZvcm0tZ3JvdXAuaGFzLWZlZWRiYWNrID4gLmhlbHAtYmxvY2sge1xyXG4gICAgbWFyZ2luLXRvcDogOHB4O1xyXG4gIH1cclxuXHJcbiAgLmZvcm0tZ3JvdXAuZm9ybS1ncm91cC1tZCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgRmxleFJvd0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICBzdmcge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0fXB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IFN0eWxlZFRhYmxlVGFicyA9IHN0eWxlZChUYWJzKWBcclxuICBvdmVyZmxvdzogdmlzaWJsZTtcclxuICAuYW50LXRhYnMtY29udGVudC1ob2xkZXIge1xyXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3R5bGVkQmFkZ2UgPSBzdHlsZWQoQmFkZ2UpYFxyXG4gIC5hbnQtYmFkZ2UtY291bnQge1xyXG4gICAgbGluZS1oZWlnaHQ6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuZ3JpZFVuaXQgKiA0fXB4O1xyXG4gICAgaGVpZ2h0OiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0ICogNH1weDtcclxuICAgIG1hcmdpbi1sZWZ0OiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0fXB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IEVkaXRMb2NrQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBmb250LXNpemU6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUudHlwb2dyYXBoeS5zaXplcy5zfXB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBhIHtcclxuICAgIHBhZGRpbmc6IDAgMTBweDtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBDb2x1bW5CdXR0b25XcmFwcGVyID0gc3R5bGVkLmRpdmBcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAkeyh7IHRoZW1lIH0pID0+IGBtYXJnaW4tYm90dG9tOiAke3RoZW1lLmdyaWRVbml0ICogMn1weGB9XHJcbmA7XHJcblxyXG5jb25zdCBTdHlsZWRMYWJlbFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBzcGFuIHtcclxuICAgIG1hcmdpbi1yaWdodDogJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5ncmlkVW5pdH1weDtcclxuICB9XHJcbmA7XHJcblxyXG5jb25zdCBTdHlsZWRDb2x1bW5zVGFiV3JhcHBlciA9IHN0eWxlZC5kaXZgXHJcbiAgLnRhYmxlID4gdGJvZHkgPiB0ciA+IHRkIHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgfVxyXG5cclxuICAuYW50LXRhZyB7XHJcbiAgICBtYXJnaW4tdG9wOiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0fXB4O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IFN0eWxlZEJ1dHRvbldyYXBwZXIgPSBzdHlsZWQuc3BhbmBcclxuICAkeyh7IHRoZW1lIH0pID0+IGBcclxuICAgIG1hcmdpbi10b3A6ICR7dGhlbWUuZ3JpZFVuaXQgKiAzfXB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6ICR7dGhlbWUuZ3JpZFVuaXQgKiAzfXB4O1xyXG4gIGB9XHJcbmA7XHJcblxyXG5jb25zdCBjaGVja2JveEdlbmVyYXRvciA9IChkLCBvbkNoYW5nZSkgPT4gKFxyXG4gIDxDaGVja2JveENvbnRyb2wgdmFsdWU9e2R9IG9uQ2hhbmdlPXtvbkNoYW5nZX0gLz5cclxuKTtcclxuY29uc3QgREFUQV9UWVBFUyA9IFtcclxuICB7IHZhbHVlOiAnU1RSSU5HJywgbGFiZWw6ICdTVFJJTkcnIH0sXHJcbiAgeyB2YWx1ZTogJ05VTUVSSUMnLCBsYWJlbDogJ05VTUVSSUMnIH0sXHJcbiAgeyB2YWx1ZTogJ0RBVEVUSU1FJywgbGFiZWw6ICdEQVRFVElNRScgfSxcclxuICB7IHZhbHVlOiAnQk9PTEVBTicsIGxhYmVsOiAnQk9PTEVBTicgfSxcclxuXTtcclxuXHJcbmNvbnN0IERBVEFTT1VSQ0VfVFlQRVNfQVJSID0gW1xyXG4gIHsga2V5OiAncGh5c2ljYWwnLCBsYWJlbDogdCgnUGh5c2ljYWwgKHRhYmxlIG9yIHZpZXcpJykgfSxcclxuICB7IGtleTogJ3ZpcnR1YWwnLCBsYWJlbDogdCgnVmlydHVhbCAoU1FMKScpIH0sXHJcbl07XHJcbmNvbnN0IERBVEFTT1VSQ0VfVFlQRVMgPSB7fTtcclxuREFUQVNPVVJDRV9UWVBFU19BUlIuZm9yRWFjaChvID0+IHtcclxuICBEQVRBU09VUkNFX1RZUEVTW28ua2V5XSA9IG87XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gQ29sbGVjdGlvblRhYlRpdGxlKHsgdGl0bGUsIGNvbGxlY3Rpb24gfSkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2XHJcbiAgICAgIGNzcz17eyBkaXNwbGF5OiAnZmxleCcsIGFsaWduSXRlbXM6ICdjZW50ZXInIH19XHJcbiAgICAgIGRhdGEtdGVzdD17YGNvbGxlY3Rpb24tdGFiLSR7dGl0bGV9YH1cclxuICAgID5cclxuICAgICAge3RpdGxlfXsnICd9XHJcbiAgICAgIDxTdHlsZWRCYWRnZSBjb3VudD17Y29sbGVjdGlvbiA/IGNvbGxlY3Rpb24ubGVuZ3RoIDogMH0gc2hvd1plcm8gLz5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn1cclxuXHJcbkNvbGxlY3Rpb25UYWJUaXRsZS5wcm9wVHlwZXMgPSB7XHJcbiAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgY29sbGVjdGlvbjogUHJvcFR5cGVzLmFycmF5LFxyXG59O1xyXG5cclxuZnVuY3Rpb24gQ29sdW1uQ29sbGVjdGlvblRhYmxlKHtcclxuICBjb2x1bW5zLFxyXG4gIGRhdGFzb3VyY2UsXHJcbiAgb25Db2x1bW5zQ2hhbmdlLFxyXG4gIG9uRGF0YXNvdXJjZUNoYW5nZSxcclxuICBlZGl0YWJsZUNvbHVtbk5hbWUsXHJcbiAgc2hvd0V4cHJlc3Npb24sXHJcbiAgYWxsb3dBZGRJdGVtLFxyXG4gIGFsbG93RWRpdERhdGFUeXBlLFxyXG4gIGl0ZW1HZW5lcmF0b3IsXHJcbn0pIHtcclxuICByZXR1cm4gKFxyXG4gICAgPENvbGxlY3Rpb25UYWJsZVxyXG4gICAgICBjb2xsZWN0aW9uPXtjb2x1bW5zfVxyXG4gICAgICB0YWJsZUNvbHVtbnM9e1xyXG4gICAgICAgIGlzRmVhdHVyZUVuYWJsZWQoRmVhdHVyZUZsYWcuRU5BQkxFX0FEVkFOQ0VEX0RBVEFfVFlQRVMpXHJcbiAgICAgICAgICA/IFtcclxuICAgICAgICAgICAgICAnY29sdW1uX25hbWUnLFxyXG4gICAgICAgICAgICAgICdhZHZhbmNlZF9kYXRhX3R5cGUnLFxyXG4gICAgICAgICAgICAgICd0eXBlJyxcclxuICAgICAgICAgICAgICAnaXNfZHR0bScsXHJcbiAgICAgICAgICAgICAgJ21haW5fZHR0bV9jb2wnLFxyXG4gICAgICAgICAgICAgICdmaWx0ZXJhYmxlJyxcclxuICAgICAgICAgICAgICAnZ3JvdXBieScsXHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICAgIDogW1xyXG4gICAgICAgICAgICAgICdjb2x1bW5fbmFtZScsXHJcbiAgICAgICAgICAgICAgJ3R5cGUnLFxyXG4gICAgICAgICAgICAgICdpc19kdHRtJyxcclxuICAgICAgICAgICAgICAnbWFpbl9kdHRtX2NvbCcsXHJcbiAgICAgICAgICAgICAgJ2ZpbHRlcmFibGUnLFxyXG4gICAgICAgICAgICAgICdncm91cGJ5JyxcclxuICAgICAgICAgICAgXVxyXG4gICAgICB9XHJcbiAgICAgIHNvcnRDb2x1bW5zPXtcclxuICAgICAgICBpc0ZlYXR1cmVFbmFibGVkKEZlYXR1cmVGbGFnLkVOQUJMRV9BRFZBTkNFRF9EQVRBX1RZUEVTKVxyXG4gICAgICAgICAgPyBbXHJcbiAgICAgICAgICAgICAgJ2NvbHVtbl9uYW1lJyxcclxuICAgICAgICAgICAgICAnYWR2YW5jZWRfZGF0YV90eXBlJyxcclxuICAgICAgICAgICAgICAndHlwZScsXHJcbiAgICAgICAgICAgICAgJ2lzX2R0dG0nLFxyXG4gICAgICAgICAgICAgICdtYWluX2R0dG1fY29sJyxcclxuICAgICAgICAgICAgICAnZmlsdGVyYWJsZScsXHJcbiAgICAgICAgICAgICAgJ2dyb3VwYnknLFxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgICA6IFtcclxuICAgICAgICAgICAgICAnY29sdW1uX25hbWUnLFxyXG4gICAgICAgICAgICAgICd0eXBlJyxcclxuICAgICAgICAgICAgICAnaXNfZHR0bScsXHJcbiAgICAgICAgICAgICAgJ21haW5fZHR0bV9jb2wnLFxyXG4gICAgICAgICAgICAgICdmaWx0ZXJhYmxlJyxcclxuICAgICAgICAgICAgICAnZ3JvdXBieScsXHJcbiAgICAgICAgICAgIF1cclxuICAgICAgfVxyXG4gICAgICBhbGxvd0RlbGV0ZXNcclxuICAgICAgYWxsb3dBZGRJdGVtPXthbGxvd0FkZEl0ZW19XHJcbiAgICAgIGl0ZW1HZW5lcmF0b3I9e2l0ZW1HZW5lcmF0b3J9XHJcbiAgICAgIHN0aWNreUhlYWRlclxyXG4gICAgICBleHBhbmRGaWVsZHNldD17XHJcbiAgICAgICAgPEZvcm1Db250YWluZXI+XHJcbiAgICAgICAgICA8RmllbGRzZXQgY29tcGFjdD5cclxuICAgICAgICAgICAge3Nob3dFeHByZXNzaW9uICYmIChcclxuICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgIGZpZWxkS2V5PVwiZXhwcmVzc2lvblwiXHJcbiAgICAgICAgICAgICAgICBsYWJlbD17dCgnU1FMIGV4cHJlc3Npb24nKX1cclxuICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgICAgICA8VGV4dEFyZWFDb250cm9sXHJcbiAgICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2U9XCJtYXJrZG93blwiXHJcbiAgICAgICAgICAgICAgICAgICAgb2ZmZXJFZGl0SW5Nb2RhbD17ZmFsc2V9XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzaXplPVwidmVydGljYWxcIlxyXG4gICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICAgIGZpZWxkS2V5PVwidmVyYm9zZV9uYW1lXCJcclxuICAgICAgICAgICAgICBsYWJlbD17dCgnTGFiZWwnKX1cclxuICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgIDxUZXh0Q29udHJvbFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJ2ZXJib3NlX25hbWVcIlxyXG4gICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnTGFiZWwnKX1cclxuICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICBmaWVsZEtleT1cImRlc2NyaXB0aW9uXCJcclxuICAgICAgICAgICAgICBsYWJlbD17dCgnRGVzY3JpcHRpb24nKX1cclxuICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgIDxUZXh0Q29udHJvbFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJkZXNjcmlwdGlvblwiXHJcbiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0KCdEZXNjcmlwdGlvbicpfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIHthbGxvd0VkaXREYXRhVHlwZSAmJiAoXHJcbiAgICAgICAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICAgICAgICBmaWVsZEtleT1cInR5cGVcIlxyXG4gICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0RhdGEgdHlwZScpfVxyXG4gICAgICAgICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgICAgICAgIDxTZWxlY3RcclxuICAgICAgICAgICAgICAgICAgICBhcmlhTGFiZWw9e3QoJ0RhdGEgdHlwZScpfVxyXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnM9e0RBVEFfVFlQRVN9XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZT1cInR5cGVcIlxyXG4gICAgICAgICAgICAgICAgICAgIGFsbG93TmV3T3B0aW9uc1xyXG4gICAgICAgICAgICAgICAgICAgIGFsbG93Q2xlYXJcclxuICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICB7aXNGZWF0dXJlRW5hYmxlZChGZWF0dXJlRmxhZy5FTkFCTEVfQURWQU5DRURfREFUQV9UWVBFUykgPyAoXHJcbiAgICAgICAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICAgICAgICBmaWVsZEtleT1cImFkdmFuY2VkX2RhdGFfdHlwZVwiXHJcbiAgICAgICAgICAgICAgICBsYWJlbD17dCgnQWR2YW5jZWQgZGF0YSB0eXBlJyl9XHJcbiAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiYWR2YW5jZWRfZGF0YV90eXBlXCJcclxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnQWR2YW5jZWQgRGF0YSB0eXBlJyl9XHJcbiAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgKSA6IChcclxuICAgICAgICAgICAgICA8PjwvPlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICBmaWVsZEtleT1cInB5dGhvbl9kYXRlX2Zvcm1hdFwiXHJcbiAgICAgICAgICAgICAgbGFiZWw9e3QoJ0RhdGV0aW1lIGZvcm1hdCcpfVxyXG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXtcclxuICAgICAgICAgICAgICAgIC8qIE5vdGUgdGhlIGZyYWdtZW50ZWQgdHJhbnNsYXRpb25zIG1heSBub3Qgd29yay4gKi9cclxuICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgIHt0KCdUaGUgcGF0dGVybiBvZiB0aW1lc3RhbXAgZm9ybWF0LiBGb3Igc3RyaW5ncyB1c2UgJyl9XHJcbiAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2RvY3MucHl0aG9uLm9yZy8yL2xpYnJhcnkvZGF0ZXRpbWUuaHRtbCNzdHJmdGltZS1zdHJwdGltZS1iZWhhdmlvclwiPlxyXG4gICAgICAgICAgICAgICAgICAgIHt0KCdQeXRob24gZGF0ZXRpbWUgc3RyaW5nIHBhdHRlcm4nKX1cclxuICAgICAgICAgICAgICAgICAgPC9hPlxyXG4gICAgICAgICAgICAgICAgICB7dCgnIGV4cHJlc3Npb24gd2hpY2ggbmVlZHMgdG8gYWRoZXJlIHRvIHRoZSAnKX1cclxuICAgICAgICAgICAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0lTT184NjAxXCI+XHJcbiAgICAgICAgICAgICAgICAgICAge3QoJ0lTTyA4NjAxJyl9XHJcbiAgICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgICAgICAge3QoYCBzdGFuZGFyZCB0byBlbnN1cmUgdGhhdCB0aGUgbGV4aWNvZ3JhcGhpY2FsIG9yZGVyaW5nXHJcbiAgICAgICAgICAgICAgICAgICAgICBjb2luY2lkZXMgd2l0aCB0aGUgY2hyb25vbG9naWNhbCBvcmRlcmluZy4gSWYgdGhlXHJcbiAgICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXAgZm9ybWF0IGRvZXMgbm90IGFkaGVyZSB0byB0aGUgSVNPIDg2MDEgc3RhbmRhcmRcclxuICAgICAgICAgICAgICAgICAgICAgIHlvdSB3aWxsIG5lZWQgdG8gZGVmaW5lIGFuIGV4cHJlc3Npb24gYW5kIHR5cGUgZm9yXHJcbiAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm1pbmcgdGhlIHN0cmluZyBpbnRvIGEgZGF0ZSBvciB0aW1lc3RhbXAuIE5vdGVcclxuICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRseSB0aW1lIHpvbmVzIGFyZSBub3Qgc3VwcG9ydGVkLiBJZiB0aW1lIGlzIHN0b3JlZFxyXG4gICAgICAgICAgICAgICAgICAgICAgaW4gZXBvY2ggZm9ybWF0LCBwdXQgXFxgZXBvY2hfc1xcYCBvciBcXGBlcG9jaF9tc1xcYC4gSWYgbm8gcGF0dGVyblxyXG4gICAgICAgICAgICAgICAgICAgICAgaXMgc3BlY2lmaWVkIHdlIGZhbGwgYmFjayB0byB1c2luZyB0aGUgb3B0aW9uYWwgZGVmYXVsdHMgb24gYSBwZXJcclxuICAgICAgICAgICAgICAgICAgICAgIGRhdGFiYXNlL2NvbHVtbiBuYW1lIGxldmVsIHZpYSB0aGUgZXh0cmEgcGFyYW1ldGVyLmApfVxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xJZD1cInB5dGhvbl9kYXRlX2Zvcm1hdFwiXHJcbiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiJVkvJW0vJWRcIlxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICAgIGZpZWxkS2V5PVwiY2VydGlmaWVkX2J5XCJcclxuICAgICAgICAgICAgICBsYWJlbD17dCgnQ2VydGlmaWVkIEJ5Jyl9XHJcbiAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoJ1BlcnNvbiBvciBncm91cCB0aGF0IGhhcyBjZXJ0aWZpZWQgdGhpcyBtZXRyaWMnKX1cclxuICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgIDxUZXh0Q29udHJvbFxyXG4gICAgICAgICAgICAgICAgICBjb250cm9sSWQ9XCJjZXJ0aWZpZWRcIlxyXG4gICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnQ2VydGlmaWVkIGJ5Jyl9XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICAgICAgZmllbGRLZXk9XCJjZXJ0aWZpY2F0aW9uX2RldGFpbHNcIlxyXG4gICAgICAgICAgICAgIGxhYmVsPXt0KCdDZXJ0aWZpY2F0aW9uIGRldGFpbHMnKX1cclxuICAgICAgICAgICAgICBkZXNjcmlwdGlvbj17dCgnRGV0YWlscyBvZiB0aGUgY2VydGlmaWNhdGlvbicpfVxyXG4gICAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2xJZD1cImNlcnRpZmljYXRpb25EZXRhaWxzXCJcclxuICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e3QoJ0NlcnRpZmljYXRpb24gZGV0YWlscycpfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8L0ZpZWxkc2V0PlxyXG4gICAgICAgIDwvRm9ybUNvbnRhaW5lcj5cclxuICAgICAgfVxyXG4gICAgICBjb2x1bW5MYWJlbHM9e1xyXG4gICAgICAgIGlzRmVhdHVyZUVuYWJsZWQoRmVhdHVyZUZsYWcuRU5BQkxFX0FEVkFOQ0VEX0RBVEFfVFlQRVMpXHJcbiAgICAgICAgICA/IHtcclxuICAgICAgICAgICAgICBjb2x1bW5fbmFtZTogdCgnQ29sdW1uJyksXHJcbiAgICAgICAgICAgICAgYWR2YW5jZWRfZGF0YV90eXBlOiB0KCdBZHZhbmNlZCBkYXRhIHR5cGUnKSxcclxuICAgICAgICAgICAgICB0eXBlOiB0KCdEYXRhIHR5cGUnKSxcclxuICAgICAgICAgICAgICBncm91cGJ5OiB0KCdJcyBkaW1lbnNpb24nKSxcclxuICAgICAgICAgICAgICBpc19kdHRtOiB0KCdJcyB0ZW1wb3JhbCcpLFxyXG4gICAgICAgICAgICAgIG1haW5fZHR0bV9jb2w6IHQoJ0RlZmF1bHQgZGF0ZXRpbWUnKSxcclxuICAgICAgICAgICAgICBmaWx0ZXJhYmxlOiB0KCdJcyBmaWx0ZXJhYmxlJyksXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIDoge1xyXG4gICAgICAgICAgICAgIGNvbHVtbl9uYW1lOiB0KCdDb2x1bW4nKSxcclxuICAgICAgICAgICAgICB0eXBlOiB0KCdEYXRhIHR5cGUnKSxcclxuICAgICAgICAgICAgICBncm91cGJ5OiB0KCdJcyBkaW1lbnNpb24nKSxcclxuICAgICAgICAgICAgICBpc19kdHRtOiB0KCdJcyB0ZW1wb3JhbCcpLFxyXG4gICAgICAgICAgICAgIG1haW5fZHR0bV9jb2w6IHQoJ0RlZmF1bHQgZGF0ZXRpbWUnKSxcclxuICAgICAgICAgICAgICBmaWx0ZXJhYmxlOiB0KCdJcyBmaWx0ZXJhYmxlJyksXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBvbkNoYW5nZT17b25Db2x1bW5zQ2hhbmdlfVxyXG4gICAgICBpdGVtUmVuZGVyZXJzPXtcclxuICAgICAgICBpc0ZlYXR1cmVFbmFibGVkKEZlYXR1cmVGbGFnLkVOQUJMRV9BRFZBTkNFRF9EQVRBX1RZUEVTKVxyXG4gICAgICAgICAgPyB7XHJcbiAgICAgICAgICAgICAgY29sdW1uX25hbWU6ICh2LCBvbkl0ZW1DaGFuZ2UsIF8sIHJlY29yZCkgPT5cclxuICAgICAgICAgICAgICAgIGVkaXRhYmxlQ29sdW1uTmFtZSA/IChcclxuICAgICAgICAgICAgICAgICAgPFN0eWxlZExhYmVsV3JhcHBlcj5cclxuICAgICAgICAgICAgICAgICAgICB7cmVjb3JkLmlzX2NlcnRpZmllZCAmJiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICA8Q2VydGlmaWVkQmFkZ2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2VydGlmaWVkQnk9e3JlY29yZC5jZXJ0aWZpZWRfYnl9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRldGFpbHM9e3JlY29yZC5jZXJ0aWZpY2F0aW9uX2RldGFpbHN9XHJcbiAgICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgICAgICAgPEVkaXRhYmxlVGl0bGVcclxuICAgICAgICAgICAgICAgICAgICAgIGNhbkVkaXRcclxuICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPXt2fVxyXG4gICAgICAgICAgICAgICAgICAgICAgb25TYXZlVGl0bGU9e29uSXRlbUNoYW5nZX1cclxuICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICA8L1N0eWxlZExhYmVsV3JhcHBlcj5cclxuICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgIDxTdHlsZWRMYWJlbFdyYXBwZXI+XHJcbiAgICAgICAgICAgICAgICAgICAge3JlY29yZC5pc19jZXJ0aWZpZWQgJiYgKFxyXG4gICAgICAgICAgICAgICAgICAgICAgPENlcnRpZmllZEJhZGdlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlcnRpZmllZEJ5PXtyZWNvcmQuY2VydGlmaWVkX2J5fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXRhaWxzPXtyZWNvcmQuY2VydGlmaWNhdGlvbl9kZXRhaWxzfVxyXG4gICAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgICAgICAgIHt2fVxyXG4gICAgICAgICAgICAgICAgICA8L1N0eWxlZExhYmVsV3JhcHBlcj5cclxuICAgICAgICAgICAgICAgICksXHJcbiAgICAgICAgICAgICAgbWFpbl9kdHRtX2NvbDogKHZhbHVlLCBfb25JdGVtQ2hhbmdlLCBfbGFiZWwsIHJlY29yZCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY2hlY2tlZCA9IGRhdGFzb3VyY2UubWFpbl9kdHRtX2NvbCA9PT0gcmVjb3JkLmNvbHVtbl9uYW1lO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZGlzYWJsZWQgPSAhY29sdW1ucy5maW5kKFxyXG4gICAgICAgICAgICAgICAgICBjb2x1bW4gPT4gY29sdW1uLmNvbHVtbl9uYW1lID09PSByZWNvcmQuY29sdW1uX25hbWUsXHJcbiAgICAgICAgICAgICAgICApLmlzX2R0dG07XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgICAgICA8UmFkaW9cclxuICAgICAgICAgICAgICAgICAgICBkYXRhLXRlc3Q9e2ByYWRpby1kZWZhdWx0LWR0dG0tJHtyZWNvcmQuY29sdW1uX25hbWV9YH1cclxuICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXtjaGVja2VkfVxyXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cclxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KCkgPT5cclxuICAgICAgICAgICAgICAgICAgICAgIG9uRGF0YXNvdXJjZUNoYW5nZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLmRhdGFzb3VyY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1haW5fZHR0bV9jb2w6IHJlY29yZC5jb2x1bW5fbmFtZSxcclxuICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgIHR5cGU6IGQgPT4gKGQgPyA8TGFiZWw+e2R9PC9MYWJlbD4gOiBudWxsKSxcclxuICAgICAgICAgICAgICBhZHZhbmNlZF9kYXRhX3R5cGU6IGQgPT4gKFxyXG4gICAgICAgICAgICAgICAgPExhYmVsIG9uQ2hhbmdlPXtvbkNvbHVtbnNDaGFuZ2V9PntkfTwvTGFiZWw+XHJcbiAgICAgICAgICAgICAgKSxcclxuICAgICAgICAgICAgICBpc19kdHRtOiBjaGVja2JveEdlbmVyYXRvcixcclxuICAgICAgICAgICAgICBmaWx0ZXJhYmxlOiBjaGVja2JveEdlbmVyYXRvcixcclxuICAgICAgICAgICAgICBncm91cGJ5OiBjaGVja2JveEdlbmVyYXRvcixcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgOiB7XHJcbiAgICAgICAgICAgICAgY29sdW1uX25hbWU6ICh2LCBvbkl0ZW1DaGFuZ2UsIF8sIHJlY29yZCkgPT5cclxuICAgICAgICAgICAgICAgIGVkaXRhYmxlQ29sdW1uTmFtZSA/IChcclxuICAgICAgICAgICAgICAgICAgPFN0eWxlZExhYmVsV3JhcHBlcj5cclxuICAgICAgICAgICAgICAgICAgICB7cmVjb3JkLmlzX2NlcnRpZmllZCAmJiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICA8Q2VydGlmaWVkQmFkZ2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2VydGlmaWVkQnk9e3JlY29yZC5jZXJ0aWZpZWRfYnl9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRldGFpbHM9e3JlY29yZC5jZXJ0aWZpY2F0aW9uX2RldGFpbHN9XHJcbiAgICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sIHZhbHVlPXt2fSBvbkNoYW5nZT17b25JdGVtQ2hhbmdlfSAvPlxyXG4gICAgICAgICAgICAgICAgICA8L1N0eWxlZExhYmVsV3JhcHBlcj5cclxuICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgIDxTdHlsZWRMYWJlbFdyYXBwZXI+XHJcbiAgICAgICAgICAgICAgICAgICAge3JlY29yZC5pc19jZXJ0aWZpZWQgJiYgKFxyXG4gICAgICAgICAgICAgICAgICAgICAgPENlcnRpZmllZEJhZGdlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNlcnRpZmllZEJ5PXtyZWNvcmQuY2VydGlmaWVkX2J5fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXRhaWxzPXtyZWNvcmQuY2VydGlmaWNhdGlvbl9kZXRhaWxzfVxyXG4gICAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgICAgICAgIHt2fVxyXG4gICAgICAgICAgICAgICAgICA8L1N0eWxlZExhYmVsV3JhcHBlcj5cclxuICAgICAgICAgICAgICAgICksXHJcbiAgICAgICAgICAgICAgbWFpbl9kdHRtX2NvbDogKHZhbHVlLCBfb25JdGVtQ2hhbmdlLCBfbGFiZWwsIHJlY29yZCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY2hlY2tlZCA9IGRhdGFzb3VyY2UubWFpbl9kdHRtX2NvbCA9PT0gcmVjb3JkLmNvbHVtbl9uYW1lO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgZGlzYWJsZWQgPSAhY29sdW1ucy5maW5kKFxyXG4gICAgICAgICAgICAgICAgICBjb2x1bW4gPT4gY29sdW1uLmNvbHVtbl9uYW1lID09PSByZWNvcmQuY29sdW1uX25hbWUsXHJcbiAgICAgICAgICAgICAgICApLmlzX2R0dG07XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICAgICAgICA8UmFkaW9cclxuICAgICAgICAgICAgICAgICAgICBkYXRhLXRlc3Q9e2ByYWRpby1kZWZhdWx0LWR0dG0tJHtyZWNvcmQuY29sdW1uX25hbWV9YH1cclxuICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXtjaGVja2VkfVxyXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cclxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KCkgPT5cclxuICAgICAgICAgICAgICAgICAgICAgIG9uRGF0YXNvdXJjZUNoYW5nZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLmRhdGFzb3VyY2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1haW5fZHR0bV9jb2w6IHJlY29yZC5jb2x1bW5fbmFtZSxcclxuICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgIHR5cGU6IGQgPT4gKGQgPyA8TGFiZWw+e2R9PC9MYWJlbD4gOiBudWxsKSxcclxuICAgICAgICAgICAgICBpc19kdHRtOiBjaGVja2JveEdlbmVyYXRvcixcclxuICAgICAgICAgICAgICBmaWx0ZXJhYmxlOiBjaGVja2JveEdlbmVyYXRvcixcclxuICAgICAgICAgICAgICBncm91cGJ5OiBjaGVja2JveEdlbmVyYXRvcixcclxuICAgICAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAvPlxyXG4gICk7XHJcbn1cclxuQ29sdW1uQ29sbGVjdGlvblRhYmxlLnByb3BUeXBlcyA9IHtcclxuICBjb2x1bW5zOiBQcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZCxcclxuICBkYXRhc291cmNlOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXHJcbiAgb25Db2x1bW5zQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxyXG4gIG9uRGF0YXNvdXJjZUNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcclxuICBlZGl0YWJsZUNvbHVtbk5hbWU6IFByb3BUeXBlcy5ib29sLFxyXG4gIHNob3dFeHByZXNzaW9uOiBQcm9wVHlwZXMuYm9vbCxcclxuICBhbGxvd0FkZEl0ZW06IFByb3BUeXBlcy5ib29sLFxyXG4gIGFsbG93RWRpdERhdGFUeXBlOiBQcm9wVHlwZXMuYm9vbCxcclxuICBpdGVtR2VuZXJhdG9yOiBQcm9wVHlwZXMuZnVuYyxcclxufTtcclxuQ29sdW1uQ29sbGVjdGlvblRhYmxlLmRlZmF1bHRQcm9wcyA9IHtcclxuICBlZGl0YWJsZUNvbHVtbk5hbWU6IGZhbHNlLFxyXG4gIHNob3dFeHByZXNzaW9uOiBmYWxzZSxcclxuICBhbGxvd0FkZEl0ZW06IGZhbHNlLFxyXG4gIGFsbG93RWRpdERhdGFUeXBlOiBmYWxzZSxcclxuICBpdGVtR2VuZXJhdG9yOiAoKSA9PiAoe1xyXG4gICAgY29sdW1uX25hbWU6ICc8bmV3IGNvbHVtbj4nLFxyXG4gICAgZmlsdGVyYWJsZTogdHJ1ZSxcclxuICAgIGdyb3VwYnk6IHRydWUsXHJcbiAgfSksXHJcbn07XHJcblxyXG5mdW5jdGlvbiBTdGFja2VkRmllbGQoeyBsYWJlbCwgZm9ybUVsZW1lbnQgfSkge1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIDxzdHJvbmc+e2xhYmVsfTwvc3Ryb25nPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdj57Zm9ybUVsZW1lbnR9PC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59XHJcblxyXG5TdGFja2VkRmllbGQucHJvcFR5cGVzID0ge1xyXG4gIGxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIGZvcm1FbGVtZW50OiBQcm9wVHlwZXMubm9kZSxcclxufTtcclxuXHJcbmZ1bmN0aW9uIEZvcm1Db250YWluZXIoeyBjaGlsZHJlbiB9KSB7XHJcbiAgcmV0dXJuIDxDYXJkIHBhZGRlZD57Y2hpbGRyZW59PC9DYXJkPjtcclxufVxyXG5cclxuRm9ybUNvbnRhaW5lci5wcm9wVHlwZXMgPSB7XHJcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxyXG59O1xyXG5cclxuY29uc3QgcHJvcFR5cGVzID0ge1xyXG4gIGRhdGFzb3VyY2U6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcclxuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgYWRkU3VjY2Vzc1RvYXN0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxyXG4gIGFkZERhbmdlclRvYXN0OiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxyXG4gIHNldElzRWRpdGluZzogUHJvcFR5cGVzLmZ1bmMsXHJcbn07XHJcblxyXG5jb25zdCBkZWZhdWx0UHJvcHMgPSB7XHJcbiAgb25DaGFuZ2U6ICgpID0+IHt9LFxyXG4gIHNldElzRWRpdGluZzogKCkgPT4ge30sXHJcbn07XHJcblxyXG5mdW5jdGlvbiBPd25lcnNTZWxlY3Rvcih7IGRhdGFzb3VyY2UsIG9uQ2hhbmdlIH0pIHtcclxuICBjb25zdCBsb2FkT3B0aW9ucyA9IHVzZUNhbGxiYWNrKChzZWFyY2ggPSAnJywgcGFnZSwgcGFnZVNpemUpID0+IHtcclxuICAgIGNvbnN0IHF1ZXJ5ID0gcmlzb24uZW5jb2RlKHsgZmlsdGVyOiBzZWFyY2gsIHBhZ2UsIHBhZ2Vfc2l6ZTogcGFnZVNpemUgfSk7XHJcbiAgICByZXR1cm4gU3VwZXJzZXRDbGllbnQuZ2V0KHtcclxuICAgICAgZW5kcG9pbnQ6IGAvYXBpL3YxL2RhdGFzZXQvcmVsYXRlZC9vd25lcnM/cT0ke3F1ZXJ5fWAsXHJcbiAgICB9KS50aGVuKHJlc3BvbnNlID0+ICh7XHJcbiAgICAgIGRhdGE6IHJlc3BvbnNlLmpzb24ucmVzdWx0XHJcbiAgICAgICAgLmZpbHRlcihpdGVtID0+IGl0ZW0uZXh0cmEuYWN0aXZlKVxyXG4gICAgICAgIC5tYXAoaXRlbSA9PiAoe1xyXG4gICAgICAgICAgdmFsdWU6IGl0ZW0udmFsdWUsXHJcbiAgICAgICAgICBsYWJlbDogaXRlbS50ZXh0LFxyXG4gICAgICAgIH0pKSxcclxuICAgICAgdG90YWxDb3VudDogcmVzcG9uc2UuanNvbi5jb3VudCxcclxuICAgIH0pKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8QXN5bmNTZWxlY3RcclxuICAgICAgYXJpYUxhYmVsPXt0KCdTZWxlY3Qgb3duZXJzJyl9XHJcbiAgICAgIG1vZGU9XCJtdWx0aXBsZVwiXHJcbiAgICAgIG5hbWU9XCJvd25lcnNcIlxyXG4gICAgICB2YWx1ZT17ZGF0YXNvdXJjZS5vd25lcnN9XHJcbiAgICAgIG9wdGlvbnM9e2xvYWRPcHRpb25zfVxyXG4gICAgICBvbkNoYW5nZT17b25DaGFuZ2V9XHJcbiAgICAgIGhlYWRlcj17PEZvcm1MYWJlbD57dCgnT3duZXJzJyl9PC9Gb3JtTGFiZWw+fVxyXG4gICAgICBhbGxvd0NsZWFyXHJcbiAgICAvPlxyXG4gICk7XHJcbn1cclxuXHJcbmNsYXNzIERhdGFzb3VyY2VFZGl0b3IgZXh0ZW5kcyBSZWFjdC5QdXJlQ29tcG9uZW50IHtcclxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgc3VwZXIocHJvcHMpO1xyXG4gICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgZGF0YXNvdXJjZToge1xyXG4gICAgICAgIC4uLnByb3BzLmRhdGFzb3VyY2UsXHJcbiAgICAgICAgb3duZXJzOiBwcm9wcy5kYXRhc291cmNlLm93bmVycy5tYXAob3duZXIgPT4gKHtcclxuICAgICAgICAgIHZhbHVlOiBvd25lci52YWx1ZSB8fCBvd25lci5pZCxcclxuICAgICAgICAgIGxhYmVsOiBvd25lci5sYWJlbCB8fCBgJHtvd25lci5maXJzdF9uYW1lfSAke293bmVyLmxhc3RfbmFtZX1gLFxyXG4gICAgICAgIH0pKSxcclxuICAgICAgICBtZXRyaWNzOiBwcm9wcy5kYXRhc291cmNlLm1ldHJpY3M/Lm1hcChtZXRyaWMgPT4ge1xyXG4gICAgICAgICAgY29uc3Qge1xyXG4gICAgICAgICAgICBjZXJ0aWZpZWRfYnk6IGNlcnRpZmllZEJ5TWV0cmljLFxyXG4gICAgICAgICAgICBjZXJ0aWZpY2F0aW9uX2RldGFpbHM6IGNlcnRpZmljYXRpb25EZXRhaWxzLFxyXG4gICAgICAgICAgfSA9IG1ldHJpYztcclxuICAgICAgICAgIGNvbnN0IHtcclxuICAgICAgICAgICAgY2VydGlmaWNhdGlvbjogeyBkZXRhaWxzLCBjZXJ0aWZpZWRfYnk6IGNlcnRpZmllZEJ5IH0gPSB7fSxcclxuICAgICAgICAgICAgd2FybmluZ19tYXJrZG93bjogd2FybmluZ01hcmtkb3duLFxyXG4gICAgICAgICAgfSA9IEpTT04ucGFyc2UobWV0cmljLmV4dHJhIHx8ICd7fScpIHx8IHt9O1xyXG4gICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgLi4ubWV0cmljLFxyXG4gICAgICAgICAgICBjZXJ0aWZpY2F0aW9uX2RldGFpbHM6IGNlcnRpZmljYXRpb25EZXRhaWxzIHx8IGRldGFpbHMsXHJcbiAgICAgICAgICAgIHdhcm5pbmdfbWFya2Rvd246IHdhcm5pbmdNYXJrZG93biB8fCAnJyxcclxuICAgICAgICAgICAgY2VydGlmaWVkX2J5OiBjZXJ0aWZpZWRCeSB8fCBjZXJ0aWZpZWRCeU1ldHJpYyxcclxuICAgICAgICAgIH07XHJcbiAgICAgICAgfSksXHJcbiAgICAgIH0sXHJcbiAgICAgIGVycm9yczogW10sXHJcbiAgICAgIGlzU3FsYTpcclxuICAgICAgICBwcm9wcy5kYXRhc291cmNlLmRhdGFzb3VyY2VfdHlwZSA9PT0gJ3RhYmxlJyB8fFxyXG4gICAgICAgIHByb3BzLmRhdGFzb3VyY2UudHlwZSA9PT0gJ3RhYmxlJyxcclxuICAgICAgaXNFZGl0TW9kZTogZmFsc2UsXHJcbiAgICAgIGRhdGFiYXNlQ29sdW1uczogcHJvcHMuZGF0YXNvdXJjZS5jb2x1bW5zLmZpbHRlcihjb2wgPT4gIWNvbC5leHByZXNzaW9uKSxcclxuICAgICAgY2FsY3VsYXRlZENvbHVtbnM6IHByb3BzLmRhdGFzb3VyY2UuY29sdW1ucy5maWx0ZXIoXHJcbiAgICAgICAgY29sID0+ICEhY29sLmV4cHJlc3Npb24sXHJcbiAgICAgICksXHJcbiAgICAgIG1ldGFkYXRhTG9hZGluZzogZmFsc2UsXHJcbiAgICAgIGFjdGl2ZVRhYktleTogMCxcclxuICAgICAgZGF0YXNvdXJjZVR5cGU6IHByb3BzLmRhdGFzb3VyY2Uuc3FsXHJcbiAgICAgICAgPyBEQVRBU09VUkNFX1RZUEVTLnZpcnR1YWwua2V5XHJcbiAgICAgICAgOiBEQVRBU09VUkNFX1RZUEVTLnBoeXNpY2FsLmtleSxcclxuICAgIH07XHJcblxyXG4gICAgdGhpcy5vbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTtcclxuICAgIHRoaXMub25DaGFuZ2VFZGl0TW9kZSA9IHRoaXMub25DaGFuZ2VFZGl0TW9kZS5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5vbkRhdGFzb3VyY2VQcm9wQ2hhbmdlID0gdGhpcy5vbkRhdGFzb3VyY2VQcm9wQ2hhbmdlLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLm9uRGF0YXNvdXJjZUNoYW5nZSA9IHRoaXMub25EYXRhc291cmNlQ2hhbmdlLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLnRhYmxlQ2hhbmdlQW5kU3luY01ldGFkYXRhID1cclxuICAgICAgdGhpcy50YWJsZUNoYW5nZUFuZFN5bmNNZXRhZGF0YS5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5zeW5jTWV0YWRhdGEgPSB0aGlzLnN5bmNNZXRhZGF0YS5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5zZXRDb2x1bW5zID0gdGhpcy5zZXRDb2x1bW5zLmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLnZhbGlkYXRlQW5kQ2hhbmdlID0gdGhpcy52YWxpZGF0ZUFuZENoYW5nZS5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5oYW5kbGVUYWJTZWxlY3QgPSB0aGlzLmhhbmRsZVRhYlNlbGVjdC5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5hbGxvd0VkaXRTb3VyY2UgPSAhaXNGZWF0dXJlRW5hYmxlZChcclxuICAgICAgRmVhdHVyZUZsYWcuRElTQUJMRV9EQVRBU0VUX1NPVVJDRV9FRElULFxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIG9uQ2hhbmdlKCkge1xyXG4gICAgLy8gRW1wdHlpbmcgU1FMIGlmIFwiUGh5c2ljYWxcIiByYWRpbyBidXR0b24gaXMgc2VsZWN0ZWRcclxuICAgIC8vIEN1cnJlbnRseSB0aGUgbG9naWMgdG8ga25vdyB3aGV0aGVyIHRoZSBzb3VyY2UgaXNcclxuICAgIC8vIHBoeXNpY2FsIG9yIHZpcnR1YWwgaXMgYmFzZWQgb24gd2hldGhlciBTUUwgaXMgZW1wdHkgb3Igbm90LlxyXG4gICAgY29uc3QgeyBkYXRhc291cmNlVHlwZSwgZGF0YXNvdXJjZSB9ID0gdGhpcy5zdGF0ZTtcclxuICAgIGNvbnN0IHNxbCA9XHJcbiAgICAgIGRhdGFzb3VyY2VUeXBlID09PSBEQVRBU09VUkNFX1RZUEVTLnBoeXNpY2FsLmtleSA/ICcnIDogZGF0YXNvdXJjZS5zcWw7XHJcbiAgICBjb25zdCBuZXdEYXRhc291cmNlID0ge1xyXG4gICAgICAuLi50aGlzLnN0YXRlLmRhdGFzb3VyY2UsXHJcbiAgICAgIHNxbCxcclxuICAgICAgY29sdW1uczogWy4uLnRoaXMuc3RhdGUuZGF0YWJhc2VDb2x1bW5zLCAuLi50aGlzLnN0YXRlLmNhbGN1bGF0ZWRDb2x1bW5zXSxcclxuICAgIH07XHJcbiAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKG5ld0RhdGFzb3VyY2UsIHRoaXMuc3RhdGUuZXJyb3JzKTtcclxuICB9XHJcblxyXG4gIG9uQ2hhbmdlRWRpdE1vZGUoKSB7XHJcbiAgICB0aGlzLnByb3BzLnNldElzRWRpdGluZyghdGhpcy5zdGF0ZS5pc0VkaXRNb2RlKTtcclxuICAgIHRoaXMuc2V0U3RhdGUocHJldlN0YXRlID0+ICh7IGlzRWRpdE1vZGU6ICFwcmV2U3RhdGUuaXNFZGl0TW9kZSB9KSk7XHJcbiAgfVxyXG5cclxuICBvbkRhdGFzb3VyY2VDaGFuZ2UoZGF0YXNvdXJjZSwgY2FsbGJhY2sgPSB0aGlzLnZhbGlkYXRlQW5kQ2hhbmdlKSB7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgZGF0YXNvdXJjZSB9LCBjYWxsYmFjayk7XHJcbiAgfVxyXG5cclxuICBvbkRhdGFzb3VyY2VQcm9wQ2hhbmdlKGF0dHIsIHZhbHVlKSB7XHJcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkgcmV0dXJuOyAvLyBpZiB2YWx1ZSBpcyB1bmRlZmluZWQgZG8gbm90IHVwZGF0ZSBzdGF0ZVxyXG4gICAgY29uc3QgZGF0YXNvdXJjZSA9IHsgLi4udGhpcy5zdGF0ZS5kYXRhc291cmNlLCBbYXR0cl06IHZhbHVlIH07XHJcbiAgICB0aGlzLnNldFN0YXRlKFxyXG4gICAgICBwcmV2U3RhdGUgPT4gKHtcclxuICAgICAgICBkYXRhc291cmNlOiB7IC4uLnByZXZTdGF0ZS5kYXRhc291cmNlLCBbYXR0cl06IHZhbHVlIH0sXHJcbiAgICAgIH0pLFxyXG4gICAgICBhdHRyID09PSAndGFibGVfbmFtZSdcclxuICAgICAgICA/IHRoaXMub25EYXRhc291cmNlQ2hhbmdlKGRhdGFzb3VyY2UsIHRoaXMudGFibGVDaGFuZ2VBbmRTeW5jTWV0YWRhdGEpXHJcbiAgICAgICAgOiB0aGlzLm9uRGF0YXNvdXJjZUNoYW5nZShkYXRhc291cmNlLCB0aGlzLnZhbGlkYXRlQW5kQ2hhbmdlKSxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBvbkRhdGFzb3VyY2VUeXBlQ2hhbmdlKGRhdGFzb3VyY2VUeXBlKSB7XHJcbiAgICB0aGlzLnNldFN0YXRlKHsgZGF0YXNvdXJjZVR5cGUgfSk7XHJcbiAgfVxyXG5cclxuICBzZXRDb2x1bW5zKG9iaikge1xyXG4gICAgLy8gdXBkYXRlIGNhbGN1bGF0ZWRDb2x1bW5zIG9yIGRhdGFiYXNlQ29sdW1uc1xyXG4gICAgdGhpcy5zZXRTdGF0ZShvYmosIHRoaXMudmFsaWRhdGVBbmRDaGFuZ2UpO1xyXG4gIH1cclxuXHJcbiAgdmFsaWRhdGVBbmRDaGFuZ2UoKSB7XHJcbiAgICB0aGlzLnZhbGlkYXRlKHRoaXMub25DaGFuZ2UpO1xyXG4gIH1cclxuXHJcbiAgdGFibGVDaGFuZ2VBbmRTeW5jTWV0YWRhdGEoKSB7XHJcbiAgICB0aGlzLnZhbGlkYXRlKCgpID0+IHtcclxuICAgICAgdGhpcy5zeW5jTWV0YWRhdGEoKTtcclxuICAgICAgdGhpcy5vbkNoYW5nZSgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVDb2x1bW5zKGNvbHMpIHtcclxuICAgIGNvbnN0IHsgZGF0YWJhc2VDb2x1bW5zIH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgY29uc3QgZGF0YWJhc2VDb2x1bW5OYW1lcyA9IGNvbHMubWFwKGNvbCA9PiBjb2wubmFtZSk7XHJcbiAgICBjb25zdCBjdXJyZW50Q29scyA9IGRhdGFiYXNlQ29sdW1ucy5yZWR1Y2UoXHJcbiAgICAgIChhZ2csIGNvbCkgPT4gKHtcclxuICAgICAgICAuLi5hZ2csXHJcbiAgICAgICAgW2NvbC5jb2x1bW5fbmFtZV06IGNvbCxcclxuICAgICAgfSksXHJcbiAgICAgIHt9LFxyXG4gICAgKTtcclxuICAgIGNvbnN0IGZpbmFsQ29sdW1ucyA9IFtdO1xyXG4gICAgY29uc3QgcmVzdWx0cyA9IHtcclxuICAgICAgYWRkZWQ6IFtdLFxyXG4gICAgICBtb2RpZmllZDogW10sXHJcbiAgICAgIHJlbW92ZWQ6IGRhdGFiYXNlQ29sdW1uc1xyXG4gICAgICAgIC5tYXAoY29sID0+IGNvbC5jb2x1bW5fbmFtZSlcclxuICAgICAgICAuZmlsdGVyKGNvbCA9PiAhZGF0YWJhc2VDb2x1bW5OYW1lcy5pbmNsdWRlcyhjb2wpKSxcclxuICAgIH07XHJcbiAgICBjb2xzLmZvckVhY2goY29sID0+IHtcclxuICAgICAgY29uc3QgY3VycmVudENvbCA9IGN1cnJlbnRDb2xzW2NvbC5uYW1lXTtcclxuICAgICAgaWYgKCFjdXJyZW50Q29sKSB7XHJcbiAgICAgICAgLy8gbmV3IGNvbHVtblxyXG4gICAgICAgIGZpbmFsQ29sdW1ucy5wdXNoKHtcclxuICAgICAgICAgIGlkOiBzaG9ydGlkLmdlbmVyYXRlKCksXHJcbiAgICAgICAgICBjb2x1bW5fbmFtZTogY29sLm5hbWUsXHJcbiAgICAgICAgICB0eXBlOiBjb2wudHlwZSxcclxuICAgICAgICAgIGdyb3VwYnk6IHRydWUsXHJcbiAgICAgICAgICBmaWx0ZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgaXNfZHR0bTogY29sLmlzX2R0dG0sXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmVzdWx0cy5hZGRlZC5wdXNoKGNvbC5uYW1lKTtcclxuICAgICAgfSBlbHNlIGlmIChcclxuICAgICAgICBjdXJyZW50Q29sLnR5cGUgIT09IGNvbC50eXBlIHx8XHJcbiAgICAgICAgKCFjdXJyZW50Q29sLmlzX2R0dG0gJiYgY29sLmlzX2R0dG0pXHJcbiAgICAgICkge1xyXG4gICAgICAgIC8vIG1vZGlmaWVkIGNvbHVtblxyXG4gICAgICAgIGZpbmFsQ29sdW1ucy5wdXNoKHtcclxuICAgICAgICAgIC4uLmN1cnJlbnRDb2wsXHJcbiAgICAgICAgICB0eXBlOiBjb2wudHlwZSxcclxuICAgICAgICAgIGlzX2R0dG06IGN1cnJlbnRDb2wuaXNfZHR0bSB8fCBjb2wuaXNfZHR0bSxcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXN1bHRzLm1vZGlmaWVkLnB1c2goY29sLm5hbWUpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIHVuY2hhbmdlZFxyXG4gICAgICAgIGZpbmFsQ29sdW1ucy5wdXNoKGN1cnJlbnRDb2wpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIGlmIChcclxuICAgICAgcmVzdWx0cy5hZGRlZC5sZW5ndGggfHxcclxuICAgICAgcmVzdWx0cy5tb2RpZmllZC5sZW5ndGggfHxcclxuICAgICAgcmVzdWx0cy5yZW1vdmVkLmxlbmd0aFxyXG4gICAgKSB7XHJcbiAgICAgIHRoaXMuc2V0Q29sdW1ucyh7IGRhdGFiYXNlQ29sdW1uczogZmluYWxDb2x1bW5zIH0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3VsdHM7XHJcbiAgfVxyXG5cclxuICBzeW5jTWV0YWRhdGEoKSB7XHJcbiAgICBjb25zdCB7IGRhdGFzb3VyY2UgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICBjb25zdCBwYXJhbXMgPSB7XHJcbiAgICAgIGRhdGFzb3VyY2VfdHlwZTogZGF0YXNvdXJjZS50eXBlIHx8IGRhdGFzb3VyY2UuZGF0YXNvdXJjZV90eXBlLFxyXG4gICAgICBkYXRhYmFzZV9uYW1lOlxyXG4gICAgICAgIGRhdGFzb3VyY2UuZGF0YWJhc2UuZGF0YWJhc2VfbmFtZSB8fCBkYXRhc291cmNlLmRhdGFiYXNlLm5hbWUsXHJcbiAgICAgIHNjaGVtYV9uYW1lOiBkYXRhc291cmNlLnNjaGVtYSxcclxuICAgICAgdGFibGVfbmFtZTogZGF0YXNvdXJjZS50YWJsZV9uYW1lXHJcbiAgICAgICAgPyBlbmNvZGVVUklDb21wb25lbnQoZGF0YXNvdXJjZS50YWJsZV9uYW1lKVxyXG4gICAgICAgIDogZGF0YXNvdXJjZS50YWJsZV9uYW1lLFxyXG4gICAgfTtcclxuICAgIE9iamVjdC5lbnRyaWVzKHBhcmFtcykuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XHJcbiAgICAgIC8vIHJpc29uIGNhbid0IGVuY29kZSB0aGUgdW5kZWZpbmVkIHZhbHVlXHJcbiAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgcGFyYW1zW2tleV0gPSBudWxsO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIGNvbnN0IGVuZHBvaW50ID0gYC9kYXRhc291cmNlL2V4dGVybmFsX21ldGFkYXRhX2J5X25hbWUvP3E9JHtyaXNvbi5lbmNvZGUoXHJcbiAgICAgIHBhcmFtcyxcclxuICAgICl9YDtcclxuICAgIHRoaXMuc2V0U3RhdGUoeyBtZXRhZGF0YUxvYWRpbmc6IHRydWUgfSk7XHJcblxyXG4gICAgU3VwZXJzZXRDbGllbnQuZ2V0KHsgZW5kcG9pbnQgfSlcclxuICAgICAgLnRoZW4oKHsganNvbiB9KSA9PiB7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IHRoaXMudXBkYXRlQ29sdW1ucyhqc29uKTtcclxuICAgICAgICBpZiAocmVzdWx0cy5tb2RpZmllZC5sZW5ndGgpIHtcclxuICAgICAgICAgIHRoaXMucHJvcHMuYWRkU3VjY2Vzc1RvYXN0KFxyXG4gICAgICAgICAgICB0KCdNb2RpZmllZCBjb2x1bW5zOiAlcycsIHJlc3VsdHMubW9kaWZpZWQuam9pbignLCAnKSksXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocmVzdWx0cy5yZW1vdmVkLmxlbmd0aCkge1xyXG4gICAgICAgICAgdGhpcy5wcm9wcy5hZGRTdWNjZXNzVG9hc3QoXHJcbiAgICAgICAgICAgIHQoJ1JlbW92ZWQgY29sdW1uczogJXMnLCByZXN1bHRzLnJlbW92ZWQuam9pbignLCAnKSksXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocmVzdWx0cy5hZGRlZC5sZW5ndGgpIHtcclxuICAgICAgICAgIHRoaXMucHJvcHMuYWRkU3VjY2Vzc1RvYXN0KFxyXG4gICAgICAgICAgICB0KCdOZXcgY29sdW1ucyBhZGRlZDogJXMnLCByZXN1bHRzLmFkZGVkLmpvaW4oJywgJykpLFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5wcm9wcy5hZGRTdWNjZXNzVG9hc3QodCgnTWV0YWRhdGEgaGFzIGJlZW4gc3luY2VkJykpO1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoeyBtZXRhZGF0YUxvYWRpbmc6IGZhbHNlIH0pO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2gocmVzcG9uc2UgPT5cclxuICAgICAgICBnZXRDbGllbnRFcnJvck9iamVjdChyZXNwb25zZSkudGhlbigoeyBlcnJvciwgc3RhdHVzVGV4dCB9KSA9PiB7XHJcbiAgICAgICAgICB0aGlzLnByb3BzLmFkZERhbmdlclRvYXN0KFxyXG4gICAgICAgICAgICBlcnJvciB8fCBzdGF0dXNUZXh0IHx8IHQoJ0FuIGVycm9yIGhhcyBvY2N1cnJlZCcpLFxyXG4gICAgICAgICAgKTtcclxuICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBtZXRhZGF0YUxvYWRpbmc6IGZhbHNlIH0pO1xyXG4gICAgICAgIH0pLFxyXG4gICAgICApO1xyXG4gIH1cclxuXHJcbiAgZmluZER1cGxpY2F0ZXMoYXJyLCBhY2Nlc3Nvcikge1xyXG4gICAgY29uc3Qgc2VlbiA9IHt9O1xyXG4gICAgY29uc3QgZHVwcyA9IFtdO1xyXG4gICAgYXJyLmZvckVhY2gob2JqID0+IHtcclxuICAgICAgY29uc3QgaXRlbSA9IGFjY2Vzc29yKG9iaik7XHJcbiAgICAgIGlmIChpdGVtIGluIHNlZW4pIHtcclxuICAgICAgICBkdXBzLnB1c2goaXRlbSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgc2VlbltpdGVtXSA9IG51bGw7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGR1cHM7XHJcbiAgfVxyXG5cclxuICB2YWxpZGF0ZShjYWxsYmFjaykge1xyXG4gICAgbGV0IGVycm9ycyA9IFtdO1xyXG4gICAgbGV0IGR1cHM7XHJcbiAgICBjb25zdCB7IGRhdGFzb3VyY2UgfSA9IHRoaXMuc3RhdGU7XHJcblxyXG4gICAgLy8gTG9va2luZyBmb3IgZHVwbGljYXRlIGNvbHVtbl9uYW1lXHJcbiAgICBkdXBzID0gdGhpcy5maW5kRHVwbGljYXRlcyhkYXRhc291cmNlLmNvbHVtbnMsIG9iaiA9PiBvYmouY29sdW1uX25hbWUpO1xyXG4gICAgZXJyb3JzID0gZXJyb3JzLmNvbmNhdChcclxuICAgICAgZHVwcy5tYXAobmFtZSA9PiB0KCdDb2x1bW4gbmFtZSBbJXNdIGlzIGR1cGxpY2F0ZWQnLCBuYW1lKSksXHJcbiAgICApO1xyXG5cclxuICAgIC8vIExvb2tpbmcgZm9yIGR1cGxpY2F0ZSBtZXRyaWNfbmFtZVxyXG4gICAgZHVwcyA9IHRoaXMuZmluZER1cGxpY2F0ZXMoZGF0YXNvdXJjZS5tZXRyaWNzLCBvYmogPT4gb2JqLm1ldHJpY19uYW1lKTtcclxuICAgIGVycm9ycyA9IGVycm9ycy5jb25jYXQoXHJcbiAgICAgIGR1cHMubWFwKG5hbWUgPT4gdCgnTWV0cmljIG5hbWUgWyVzXSBpcyBkdXBsaWNhdGVkJywgbmFtZSkpLFxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBNYWtpbmcgc3VyZSBjYWxjdWxhdGVkQ29sdW1ucyBoYXZlIGFuIGV4cHJlc3Npb24gZGVmaW5lZFxyXG4gICAgY29uc3Qgbm9GaWx0ZXJDYWxjQ29scyA9IHRoaXMuc3RhdGUuY2FsY3VsYXRlZENvbHVtbnMuZmlsdGVyKFxyXG4gICAgICBjb2wgPT4gIWNvbC5leHByZXNzaW9uICYmICFjb2wuanNvbixcclxuICAgICk7XHJcbiAgICBlcnJvcnMgPSBlcnJvcnMuY29uY2F0KFxyXG4gICAgICBub0ZpbHRlckNhbGNDb2xzLm1hcChjb2wgPT5cclxuICAgICAgICB0KCdDYWxjdWxhdGVkIGNvbHVtbiBbJXNdIHJlcXVpcmVzIGFuIGV4cHJlc3Npb24nLCBjb2wuY29sdW1uX25hbWUpLFxyXG4gICAgICApLFxyXG4gICAgKTtcclxuXHJcbiAgICB0aGlzLnNldFN0YXRlKHsgZXJyb3JzIH0sIGNhbGxiYWNrKTtcclxuICB9XHJcblxyXG4gIGhhbmRsZVRhYlNlbGVjdChhY3RpdmVUYWJLZXkpIHtcclxuICAgIHRoaXMuc2V0U3RhdGUoeyBhY3RpdmVUYWJLZXkgfSk7XHJcbiAgfVxyXG5cclxuICBzb3J0TWV0cmljcyhtZXRyaWNzKSB7XHJcbiAgICByZXR1cm4gbWV0cmljcy5zb3J0KCh7IGlkOiBhIH0sIHsgaWQ6IGIgfSkgPT4gYiAtIGEpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyU2V0dGluZ3NGaWVsZHNldCgpIHtcclxuICAgIGNvbnN0IHsgZGF0YXNvdXJjZSB9ID0gdGhpcy5zdGF0ZTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxGaWVsZHNldFxyXG4gICAgICAgIHRpdGxlPXt0KCdCYXNpYycpfVxyXG4gICAgICAgIGl0ZW09e2RhdGFzb3VyY2V9XHJcbiAgICAgICAgb25DaGFuZ2U9e3RoaXMub25EYXRhc291cmNlQ2hhbmdlfVxyXG4gICAgICA+XHJcbiAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICBmaWVsZEtleT1cImRlc2NyaXB0aW9uXCJcclxuICAgICAgICAgIGxhYmVsPXt0KCdEZXNjcmlwdGlvbicpfVxyXG4gICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgIDxUZXh0QXJlYUNvbnRyb2xcclxuICAgICAgICAgICAgICBsYW5ndWFnZT1cIm1hcmtkb3duXCJcclxuICAgICAgICAgICAgICBvZmZlckVkaXRJbk1vZGFsPXtmYWxzZX1cclxuICAgICAgICAgICAgICByZXNpemU9XCJ2ZXJ0aWNhbFwiXHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgLz5cclxuICAgICAgICA8RmllbGRcclxuICAgICAgICAgIGZpZWxkS2V5PVwiZGVmYXVsdF9lbmRwb2ludFwiXHJcbiAgICAgICAgICBsYWJlbD17dCgnRGVmYXVsdCBVUkwnKX1cclxuICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KFxyXG4gICAgICAgICAgICAnRGVmYXVsdCBVUkwgdG8gcmVkaXJlY3QgdG8gd2hlbiBhY2Nlc3NpbmcgZnJvbSB0aGUgZGF0YXNldCBsaXN0IHBhZ2UnLFxyXG4gICAgICAgICAgKX1cclxuICAgICAgICAgIGNvbnRyb2w9ezxUZXh0Q29udHJvbCBjb250cm9sSWQ9XCJkZWZhdWx0X2VuZHBvaW50XCIgLz59XHJcbiAgICAgICAgLz5cclxuICAgICAgICA8RmllbGRcclxuICAgICAgICAgIGlubGluZVxyXG4gICAgICAgICAgZmllbGRLZXk9XCJmaWx0ZXJfc2VsZWN0X2VuYWJsZWRcIlxyXG4gICAgICAgICAgbGFiZWw9e3QoJ0F1dG9jb21wbGV0ZSBmaWx0ZXJzJyl9XHJcbiAgICAgICAgICBkZXNjcmlwdGlvbj17dCgnV2hldGhlciB0byBwb3B1bGF0ZSBhdXRvY29tcGxldGUgZmlsdGVycyBvcHRpb25zJyl9XHJcbiAgICAgICAgICBjb250cm9sPXs8Q2hlY2tib3hDb250cm9sIC8+fVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAge3RoaXMuc3RhdGUuaXNTcWxhICYmIChcclxuICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICBmaWVsZEtleT1cImZldGNoX3ZhbHVlc19wcmVkaWNhdGVcIlxyXG4gICAgICAgICAgICBsYWJlbD17dCgnQXV0b2NvbXBsZXRlIHF1ZXJ5IHByZWRpY2F0ZScpfVxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbj17dChcclxuICAgICAgICAgICAgICAnV2hlbiB1c2luZyBcIkF1dG9jb21wbGV0ZSBmaWx0ZXJzXCIsIHRoaXMgY2FuIGJlIHVzZWQgdG8gaW1wcm92ZSBwZXJmb3JtYW5jZSAnICtcclxuICAgICAgICAgICAgICAgICdvZiB0aGUgcXVlcnkgZmV0Y2hpbmcgdGhlIHZhbHVlcy4gVXNlIHRoaXMgb3B0aW9uIHRvIGFwcGx5IGEgJyArXHJcbiAgICAgICAgICAgICAgICAncHJlZGljYXRlIChXSEVSRSBjbGF1c2UpIHRvIHRoZSBxdWVyeSBzZWxlY3RpbmcgdGhlIGRpc3RpbmN0ICcgK1xyXG4gICAgICAgICAgICAgICAgJ3ZhbHVlcyBmcm9tIHRoZSB0YWJsZS4gVHlwaWNhbGx5IHRoZSBpbnRlbnQgd291bGQgYmUgdG8gbGltaXQgdGhlIHNjYW4gJyArXHJcbiAgICAgICAgICAgICAgICAnYnkgYXBwbHlpbmcgYSByZWxhdGl2ZSB0aW1lIGZpbHRlciBvbiBhIHBhcnRpdGlvbmVkIG9yIGluZGV4ZWQgdGltZS1yZWxhdGVkIGZpZWxkLicsXHJcbiAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgIDxUZXh0QXJlYUNvbnRyb2xcclxuICAgICAgICAgICAgICAgIGxhbmd1YWdlPVwic3FsXCJcclxuICAgICAgICAgICAgICAgIGNvbnRyb2xJZD1cImZldGNoX3ZhbHVlc19wcmVkaWNhdGVcIlxyXG4gICAgICAgICAgICAgICAgbWluTGluZXM9ezV9XHJcbiAgICAgICAgICAgICAgICByZXNpemU9XCJ2ZXJ0aWNhbFwiXHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICApfVxyXG4gICAgICAgIHt0aGlzLnN0YXRlLmlzU3FsYSAmJiAoXHJcbiAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgZmllbGRLZXk9XCJleHRyYVwiXHJcbiAgICAgICAgICAgIGxhYmVsPXt0KCdFeHRyYScpfVxyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbj17dChcclxuICAgICAgICAgICAgICAnRXh0cmEgZGF0YSB0byBzcGVjaWZ5IHRhYmxlIG1ldGFkYXRhLiBDdXJyZW50bHkgc3VwcG9ydHMgJyArXHJcbiAgICAgICAgICAgICAgICAnbWV0YWRhdGEgb2YgdGhlIGZvcm1hdDogYHsgXCJjZXJ0aWZpY2F0aW9uXCI6IHsgXCJjZXJ0aWZpZWRfYnlcIjogJyArXHJcbiAgICAgICAgICAgICAgICAnXCJEYXRhIFBsYXRmb3JtIFRlYW1cIiwgXCJkZXRhaWxzXCI6IFwiVGhpcyB0YWJsZSBpcyB0aGUgc291cmNlIG9mIHRydXRoLlwiICcgK1xyXG4gICAgICAgICAgICAgICAgJ30sIFwid2FybmluZ19tYXJrZG93blwiOiBcIlRoaXMgaXMgYSB3YXJuaW5nLlwiIH1gLicsXHJcbiAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgIDxUZXh0QXJlYUNvbnRyb2xcclxuICAgICAgICAgICAgICAgIGNvbnRyb2xJZD1cImV4dHJhXCJcclxuICAgICAgICAgICAgICAgIGxhbmd1YWdlPVwianNvblwiXHJcbiAgICAgICAgICAgICAgICBvZmZlckVkaXRJbk1vZGFsPXtmYWxzZX1cclxuICAgICAgICAgICAgICAgIHJlc2l6ZT1cInZlcnRpY2FsXCJcclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICl9XHJcbiAgICAgICAgPE93bmVyc1NlbGVjdG9yXHJcbiAgICAgICAgICBkYXRhc291cmNlPXtkYXRhc291cmNlfVxyXG4gICAgICAgICAgb25DaGFuZ2U9e25ld093bmVycyA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMub25EYXRhc291cmNlQ2hhbmdlKHsgLi4uZGF0YXNvdXJjZSwgb3duZXJzOiBuZXdPd25lcnMgfSk7XHJcbiAgICAgICAgICB9fVxyXG4gICAgICAgIC8+XHJcbiAgICAgIDwvRmllbGRzZXQ+XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyQWR2YW5jZWRGaWVsZHNldCgpIHtcclxuICAgIGNvbnN0IHsgZGF0YXNvdXJjZSB9ID0gdGhpcy5zdGF0ZTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxGaWVsZHNldFxyXG4gICAgICAgIHRpdGxlPXt0KCdBZHZhbmNlZCcpfVxyXG4gICAgICAgIGl0ZW09e2RhdGFzb3VyY2V9XHJcbiAgICAgICAgb25DaGFuZ2U9e3RoaXMub25EYXRhc291cmNlQ2hhbmdlfVxyXG4gICAgICA+XHJcbiAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICBmaWVsZEtleT1cImNhY2hlX3RpbWVvdXRcIlxyXG4gICAgICAgICAgbGFiZWw9e3QoJ0NhY2hlIHRpbWVvdXQnKX1cclxuICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KFxyXG4gICAgICAgICAgICAnVGhlIGR1cmF0aW9uIG9mIHRpbWUgaW4gc2Vjb25kcyBiZWZvcmUgdGhlIGNhY2hlIGlzIGludmFsaWRhdGVkJyxcclxuICAgICAgICAgICl9XHJcbiAgICAgICAgICBjb250cm9sPXs8VGV4dENvbnRyb2wgY29udHJvbElkPVwiY2FjaGVfdGltZW91dFwiIC8+fVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICBmaWVsZEtleT1cIm9mZnNldFwiXHJcbiAgICAgICAgICBsYWJlbD17dCgnSG91cnMgb2Zmc2V0Jyl9XHJcbiAgICAgICAgICBjb250cm9sPXs8VGV4dENvbnRyb2wgY29udHJvbElkPVwib2Zmc2V0XCIgLz59XHJcbiAgICAgICAgICBkZXNjcmlwdGlvbj17dChcclxuICAgICAgICAgICAgJ1RoZSBudW1iZXIgb2YgaG91cnMsIG5lZ2F0aXZlIG9yIHBvc2l0aXZlLCB0byBzaGlmdCB0aGUgdGltZSBjb2x1bW4uIFRoaXMgY2FuIGJlIHVzZWQgdG8gbW92ZSBVVEMgdGltZSB0byBsb2NhbCB0aW1lLicsXHJcbiAgICAgICAgICApfVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAge3RoaXMuc3RhdGUuaXNTcWxhICYmIChcclxuICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICBmaWVsZEtleT1cInRlbXBsYXRlX3BhcmFtc1wiXHJcbiAgICAgICAgICAgIGxhYmVsPXt0KCdUZW1wbGF0ZSBwYXJhbWV0ZXJzJyl9XHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KFxyXG4gICAgICAgICAgICAgICdBIHNldCBvZiBwYXJhbWV0ZXJzIHRoYXQgYmVjb21lIGF2YWlsYWJsZSBpbiB0aGUgcXVlcnkgdXNpbmcgSmluamEgdGVtcGxhdGluZyBzeW50YXgnLFxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICBjb250cm9sPXs8VGV4dENvbnRyb2wgY29udHJvbElkPVwidGVtcGxhdGVfcGFyYW1zXCIgLz59XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICl9XHJcbiAgICAgIDwvRmllbGRzZXQ+XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyU3BhdGlhbFRhYigpIHtcclxuICAgIGNvbnN0IHsgZGF0YXNvdXJjZSB9ID0gdGhpcy5zdGF0ZTtcclxuICAgIGNvbnN0IHsgc3BhdGlhbHMsIGFsbF9jb2xzOiBhbGxDb2xzIH0gPSBkYXRhc291cmNlO1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPFRhYnMuVGFiUGFuZVxyXG4gICAgICAgIHRhYj17PENvbGxlY3Rpb25UYWJUaXRsZSBjb2xsZWN0aW9uPXtzcGF0aWFsc30gdGl0bGU9e3QoJ1NwYXRpYWwnKX0gLz59XHJcbiAgICAgICAga2V5PXs0fVxyXG4gICAgICA+XHJcbiAgICAgICAgPENvbGxlY3Rpb25UYWJsZVxyXG4gICAgICAgICAgdGFibGVDb2x1bW5zPXtbJ25hbWUnLCAnY29uZmlnJ119XHJcbiAgICAgICAgICBvbkNoYW5nZT17dGhpcy5vbkRhdGFzb3VyY2VQcm9wQ2hhbmdlLmJpbmQodGhpcywgJ3NwYXRpYWxzJyl9XHJcbiAgICAgICAgICBpdGVtR2VuZXJhdG9yPXsoKSA9PiAoe1xyXG4gICAgICAgICAgICBuYW1lOiAnPG5ldyBzcGF0aWFsPicsXHJcbiAgICAgICAgICAgIHR5cGU6ICc8bm8gdHlwZT4nLFxyXG4gICAgICAgICAgICBjb25maWc6IG51bGwsXHJcbiAgICAgICAgICB9KX1cclxuICAgICAgICAgIGNvbGxlY3Rpb249e3NwYXRpYWxzfVxyXG4gICAgICAgICAgYWxsb3dEZWxldGVzXHJcbiAgICAgICAgICBpdGVtUmVuZGVyZXJzPXt7XHJcbiAgICAgICAgICAgIG5hbWU6IChkLCBvbkNoYW5nZSkgPT4gKFxyXG4gICAgICAgICAgICAgIDxFZGl0YWJsZVRpdGxlIGNhbkVkaXQgdGl0bGU9e2R9IG9uU2F2ZVRpdGxlPXtvbkNoYW5nZX0gLz5cclxuICAgICAgICAgICAgKSxcclxuICAgICAgICAgICAgY29uZmlnOiAodiwgb25DaGFuZ2UpID0+IChcclxuICAgICAgICAgICAgICA8U3BhdGlhbENvbnRyb2wgdmFsdWU9e3Z9IG9uQ2hhbmdlPXtvbkNoYW5nZX0gY2hvaWNlcz17YWxsQ29sc30gLz5cclxuICAgICAgICAgICAgKSxcclxuICAgICAgICAgIH19XHJcbiAgICAgICAgLz5cclxuICAgICAgPC9UYWJzLlRhYlBhbmU+XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyU291cmNlRmllbGRzZXQodGhlbWUpIHtcclxuICAgIGNvbnN0IHsgZGF0YXNvdXJjZSB9ID0gdGhpcy5zdGF0ZTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXY+XHJcbiAgICAgICAge3RoaXMuYWxsb3dFZGl0U291cmNlICYmIChcclxuICAgICAgICAgIDxFZGl0TG9ja0NvbnRhaW5lcj5cclxuICAgICAgICAgICAgPHNwYW4gcm9sZT1cImJ1dHRvblwiIHRhYkluZGV4PXswfSBvbkNsaWNrPXt0aGlzLm9uQ2hhbmdlRWRpdE1vZGV9PlxyXG4gICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmlzRWRpdE1vZGUgPyAoXHJcbiAgICAgICAgICAgICAgICA8SWNvbnMuTG9ja1VubG9ja2VkIGljb25Db2xvcj17dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5iYXNlfSAvPlxyXG4gICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICA8SWNvbnMuTG9ja0xvY2tlZCBpY29uQ29sb3I9e3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUuYmFzZX0gLz5cclxuICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgICAgIHshdGhpcy5zdGF0ZS5pc0VkaXRNb2RlICYmIChcclxuICAgICAgICAgICAgICA8ZGl2Pnt0KCdDbGljayB0aGUgbG9jayB0byBtYWtlIGNoYW5nZXMuJyl9PC9kaXY+XHJcbiAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIHt0aGlzLnN0YXRlLmlzRWRpdE1vZGUgJiYgKFxyXG4gICAgICAgICAgICAgIDxkaXY+e3QoJ0NsaWNrIHRoZSBsb2NrIHRvIHByZXZlbnQgZnVydGhlciBjaGFuZ2VzLicpfTwvZGl2PlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgPC9FZGl0TG9ja0NvbnRhaW5lcj5cclxuICAgICAgICApfVxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibS1sLTEwIG0tdC0yMCBtLWItMTBcIj5cclxuICAgICAgICAgIHtEQVRBU09VUkNFX1RZUEVTX0FSUi5tYXAodHlwZSA9PiAoXHJcbiAgICAgICAgICAgIDxSYWRpb1xyXG4gICAgICAgICAgICAgIGtleT17dHlwZS5rZXl9XHJcbiAgICAgICAgICAgICAgdmFsdWU9e3R5cGUua2V5fVxyXG4gICAgICAgICAgICAgIGlubGluZVxyXG4gICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uRGF0YXNvdXJjZVR5cGVDaGFuZ2UuYmluZCh0aGlzLCB0eXBlLmtleSl9XHJcbiAgICAgICAgICAgICAgY2hlY2tlZD17dGhpcy5zdGF0ZS5kYXRhc291cmNlVHlwZSA9PT0gdHlwZS5rZXl9XHJcbiAgICAgICAgICAgICAgZGlzYWJsZWQ9eyF0aGlzLnN0YXRlLmlzRWRpdE1vZGV9XHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICB7dHlwZS5sYWJlbH1cclxuICAgICAgICAgICAgPC9SYWRpbz5cclxuICAgICAgICAgICkpfVxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxociAvPlxyXG4gICAgICAgIDxGaWVsZHNldCBpdGVtPXtkYXRhc291cmNlfSBvbkNoYW5nZT17dGhpcy5vbkRhdGFzb3VyY2VDaGFuZ2V9IGNvbXBhY3Q+XHJcbiAgICAgICAgICB7dGhpcy5zdGF0ZS5kYXRhc291cmNlVHlwZSA9PT0gREFUQVNPVVJDRV9UWVBFUy52aXJ0dWFsLmtleSAmJiAoXHJcbiAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAge3RoaXMuc3RhdGUuaXNTcWxhICYmIChcclxuICAgICAgICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgICAgICAgIDxDb2wgeHM9ezI0fSBtZD17MTJ9PlxyXG4gICAgICAgICAgICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICAgICAgICAgICAgZmllbGRLZXk9XCJkYXRhYmFzZVNlbGVjdG9yXCJcclxuICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXt0KCd2aXJ0dWFsJyl9XHJcbiAgICAgICAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjc3M9e3sgbWFyZ2luVG9wOiA4IH19PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxEYXRhYmFzZVNlbGVjdG9yXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYj17ZGF0YXNvdXJjZT8uZGF0YWJhc2V9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWE9e2RhdGFzb3VyY2Uuc2NoZW1hfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TY2hlbWFDaGFuZ2U9e3NjaGVtYSA9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLmlzRWRpdE1vZGUgJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkRhdGFzb3VyY2VQcm9wQ2hhbmdlKCdzY2hlbWEnLCBzY2hlbWEpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkRiQ2hhbmdlPXtkYXRhYmFzZSA9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLmlzRWRpdE1vZGUgJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vbkRhdGFzb3VyY2VQcm9wQ2hhbmdlKCdkYXRhYmFzZScsIGRhdGFiYXNlKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybU1vZGU9e2ZhbHNlfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlRXJyb3I9e3RoaXMucHJvcHMuYWRkRGFuZ2VyVG9hc3R9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seT17IXRoaXMuc3RhdGUuaXNFZGl0TW9kZX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY3NzPXt7IHdpZHRoOiAnY2FsYygxMDAlIC0gMzRweCknLCBtYXJnaW5Ub3A6IC0xNiB9fT5cclxuICAgICAgICAgICAgICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmaWVsZEtleT1cInRhYmxlX25hbWVcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17dCgnRGF0YXNldCBuYW1lJyl9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0Q29udHJvbFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwidGFibGVfbmFtZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGFibGUgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRGF0YXNvdXJjZVByb3BDaGFuZ2UoJ3RhYmxlX25hbWUnLCB0YWJsZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9e3QoJ0RhdGFzZXQgbmFtZScpfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9eyF0aGlzLnN0YXRlLmlzRWRpdE1vZGV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPC9Db2w+XHJcbiAgICAgICAgICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICAgICAgICAgIGZpZWxkS2V5PVwic3FsXCJcclxuICAgICAgICAgICAgICAgICAgICBsYWJlbD17dCgnU1FMJyl9XHJcbiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoXHJcbiAgICAgICAgICAgICAgICAgICAgICAnV2hlbiBzcGVjaWZ5aW5nIFNRTCwgdGhlIGRhdGFzb3VyY2UgYWN0cyBhcyBhIHZpZXcuICcgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnU3VwZXJzZXQgd2lsbCB1c2UgdGhpcyBzdGF0ZW1lbnQgYXMgYSBzdWJxdWVyeSB3aGlsZSBncm91cGluZyBhbmQgZmlsdGVyaW5nICcgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAnb24gdGhlIGdlbmVyYXRlZCBwYXJlbnQgcXVlcmllcy4nLFxyXG4gICAgICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbD17XHJcbiAgICAgICAgICAgICAgICAgICAgICA8VGV4dEFyZWFDb250cm9sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlPVwic3FsXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgb2ZmZXJFZGl0SW5Nb2RhbD17ZmFsc2V9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbkxpbmVzPXsyMH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgbWF4TGluZXM9ezIwfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZWFkT25seT17IXRoaXMuc3RhdGUuaXNFZGl0TW9kZX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzaXplPVwiYm90aFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIDwvPlxyXG4gICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgKX1cclxuICAgICAgICAgIHt0aGlzLnN0YXRlLmRhdGFzb3VyY2VUeXBlID09PSBEQVRBU09VUkNFX1RZUEVTLnBoeXNpY2FsLmtleSAmJiAoXHJcbiAgICAgICAgICAgIDxDb2wgeHM9ezI0fSBtZD17MTJ9PlxyXG4gICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmlzU3FsYSAmJiAoXHJcbiAgICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgICAgZmllbGRLZXk9XCJ0YWJsZVNlbGVjdG9yXCJcclxuICAgICAgICAgICAgICAgICAgbGFiZWw9e3QoJ1BoeXNpY2FsJyl9XHJcbiAgICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY3NzPXt7IG1hcmdpblRvcDogOCB9fT5cclxuICAgICAgICAgICAgICAgICAgICAgIDxUYWJsZVNlbGVjdG9yXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZT17ZmFsc2V9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFiYXNlPXt7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uZGF0YXNvdXJjZS5kYXRhYmFzZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhYmFzZV9uYW1lOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YXNvdXJjZS5kYXRhYmFzZT8uZGF0YWJhc2VfbmFtZSB8fFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YXNvdXJjZS5kYXRhYmFzZT8ubmFtZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZGJJZD17ZGF0YXNvdXJjZS5kYXRhYmFzZT8uaWR9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZUVycm9yPXt0aGlzLnByb3BzLmFkZERhbmdlclRvYXN0fVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWE9e2RhdGFzb3VyY2Uuc2NoZW1hfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzcWxMYWJNb2RlPXtmYWxzZX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgdGFibGVWYWx1ZT17ZGF0YXNvdXJjZS50YWJsZV9uYW1lfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvblNjaGVtYUNoYW5nZT17XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5pc0VkaXRNb2RlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHNjaGVtYSA9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMub25EYXRhc291cmNlUHJvcENoYW5nZSgnc2NoZW1hJywgc2NoZW1hKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkRiQ2hhbmdlPXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLmlzRWRpdE1vZGVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gZGF0YWJhc2UgPT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRGF0YXNvdXJjZVByb3BDaGFuZ2UoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGF0YWJhc2UnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvblRhYmxlU2VsZWN0Q2hhbmdlPXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLmlzRWRpdE1vZGVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gdGFibGUgPT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm9uRGF0YXNvdXJjZVByb3BDaGFuZ2UoJ3RhYmxlX25hbWUnLCB0YWJsZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVhZE9ubHk9eyF0aGlzLnN0YXRlLmlzRWRpdE1vZGV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KFxyXG4gICAgICAgICAgICAgICAgICAgICdUaGUgcG9pbnRlciB0byBhIHBoeXNpY2FsIHRhYmxlIChvciB2aWV3KS4gS2VlcCBpbiBtaW5kIHRoYXQgdGhlIGNoYXJ0IGlzICcgK1xyXG4gICAgICAgICAgICAgICAgICAgICAgJ2Fzc29jaWF0ZWQgdG8gdGhpcyBTdXBlcnNldCBsb2dpY2FsIHRhYmxlLCBhbmQgdGhpcyBsb2dpY2FsIHRhYmxlIHBvaW50cyAnICtcclxuICAgICAgICAgICAgICAgICAgICAgICd0aGUgcGh5c2ljYWwgdGFibGUgcmVmZXJlbmNlZCBoZXJlLicsXHJcbiAgICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIDwvQ29sPlxyXG4gICAgICAgICAgKX1cclxuICAgICAgICA8L0ZpZWxkc2V0PlxyXG4gICAgICA8L2Rpdj5cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICByZW5kZXJFcnJvcnMoKSB7XHJcbiAgICBpZiAodGhpcy5zdGF0ZS5lcnJvcnMubGVuZ3RoID4gMCkge1xyXG4gICAgICByZXR1cm4gKFxyXG4gICAgICAgIDxBbGVydFxyXG4gICAgICAgICAgY3NzPXt0aGVtZSA9PiAoeyBtYXJnaW5Cb3R0b206IHRoZW1lLmdyaWRVbml0ICogNCB9KX1cclxuICAgICAgICAgIHR5cGU9XCJlcnJvclwiXHJcbiAgICAgICAgICBtZXNzYWdlPXtcclxuICAgICAgICAgICAgPD5cclxuICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5lcnJvcnMubWFwKGVyciA9PiAoXHJcbiAgICAgICAgICAgICAgICA8ZGl2IGtleT17ZXJyfT57ZXJyfTwvZGl2PlxyXG4gICAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgICA8Lz5cclxuICAgICAgICAgIH1cclxuICAgICAgICAvPlxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG5cclxuICByZW5kZXJNZXRyaWNDb2xsZWN0aW9uKCkge1xyXG4gICAgY29uc3QgeyBkYXRhc291cmNlIH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgY29uc3QgeyBtZXRyaWNzIH0gPSBkYXRhc291cmNlO1xyXG4gICAgY29uc3Qgc29ydGVkTWV0cmljcyA9IG1ldHJpY3M/Lmxlbmd0aCA/IHRoaXMuc29ydE1ldHJpY3MobWV0cmljcykgOiBbXTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxDb2xsZWN0aW9uVGFibGVcclxuICAgICAgICB0YWJsZUNvbHVtbnM9e1snbWV0cmljX25hbWUnLCAndmVyYm9zZV9uYW1lJywgJ2V4cHJlc3Npb24nXX1cclxuICAgICAgICBzb3J0Q29sdW1ucz17WydtZXRyaWNfbmFtZScsICd2ZXJib3NlX25hbWUnLCAnZXhwcmVzc2lvbiddfVxyXG4gICAgICAgIGNvbHVtbkxhYmVscz17e1xyXG4gICAgICAgICAgbWV0cmljX25hbWU6IHQoJ01ldHJpYycpLFxyXG4gICAgICAgICAgdmVyYm9zZV9uYW1lOiB0KCdMYWJlbCcpLFxyXG4gICAgICAgICAgZXhwcmVzc2lvbjogdCgnU1FMIGV4cHJlc3Npb24nKSxcclxuICAgICAgICB9fVxyXG4gICAgICAgIGV4cGFuZEZpZWxkc2V0PXtcclxuICAgICAgICAgIDxGb3JtQ29udGFpbmVyPlxyXG4gICAgICAgICAgICA8RmllbGRzZXQgY29tcGFjdD5cclxuICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgIGZpZWxkS2V5PVwiZGVzY3JpcHRpb25cIlxyXG4gICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0Rlc2NyaXB0aW9uJyl9XHJcbiAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiZGVzY3JpcHRpb25cIlxyXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPXt0KCdEZXNjcmlwdGlvbicpfVxyXG4gICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgPEZpZWxkXHJcbiAgICAgICAgICAgICAgICBmaWVsZEtleT1cImQzZm9ybWF0XCJcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdEMyBmb3JtYXQnKX1cclxuICAgICAgICAgICAgICAgIGNvbnRyb2w9e1xyXG4gICAgICAgICAgICAgICAgICA8VGV4dENvbnRyb2wgY29udHJvbElkPVwiZDNmb3JtYXRcIiBwbGFjZWhvbGRlcj1cIiV5LyVtLyVkXCIgLz5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgIDxGaWVsZFxyXG4gICAgICAgICAgICAgICAgbGFiZWw9e3QoJ0NlcnRpZmllZCBieScpfVxyXG4gICAgICAgICAgICAgICAgZmllbGRLZXk9XCJjZXJ0aWZpZWRfYnlcIlxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoXHJcbiAgICAgICAgICAgICAgICAgICdQZXJzb24gb3IgZ3JvdXAgdGhhdCBoYXMgY2VydGlmaWVkIHRoaXMgbWV0cmljJyxcclxuICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiY2VydGlmaWVkX2J5XCJcclxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnQ2VydGlmaWVkIGJ5Jyl9XHJcbiAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdDZXJ0aWZpY2F0aW9uIGRldGFpbHMnKX1cclxuICAgICAgICAgICAgICAgIGZpZWxkS2V5PVwiY2VydGlmaWNhdGlvbl9kZXRhaWxzXCJcclxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXt0KCdEZXRhaWxzIG9mIHRoZSBjZXJ0aWZpY2F0aW9uJyl9XHJcbiAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgPFRleHRDb250cm9sXHJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbElkPVwiY2VydGlmaWNhdGlvbl9kZXRhaWxzXCJcclxuICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj17dCgnQ2VydGlmaWNhdGlvbiBkZXRhaWxzJyl9XHJcbiAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICA8RmllbGRcclxuICAgICAgICAgICAgICAgIGxhYmVsPXt0KCdXYXJuaW5nJyl9XHJcbiAgICAgICAgICAgICAgICBmaWVsZEtleT1cIndhcm5pbmdfbWFya2Rvd25cIlxyXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e3QoJ09wdGlvbmFsIHdhcm5pbmcgYWJvdXQgdXNlIG9mIHRoaXMgbWV0cmljJyl9XHJcbiAgICAgICAgICAgICAgICBjb250cm9sPXtcclxuICAgICAgICAgICAgICAgICAgPFRleHRBcmVhQ29udHJvbFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xJZD1cIndhcm5pbmdfbWFya2Rvd25cIlxyXG4gICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlPVwibWFya2Rvd25cIlxyXG4gICAgICAgICAgICAgICAgICAgIG9mZmVyRWRpdEluTW9kYWw9e2ZhbHNlfVxyXG4gICAgICAgICAgICAgICAgICAgIHJlc2l6ZT1cInZlcnRpY2FsXCJcclxuICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8L0ZpZWxkc2V0PlxyXG4gICAgICAgICAgPC9Gb3JtQ29udGFpbmVyPlxyXG4gICAgICAgIH1cclxuICAgICAgICBjb2xsZWN0aW9uPXtzb3J0ZWRNZXRyaWNzfVxyXG4gICAgICAgIGFsbG93QWRkSXRlbVxyXG4gICAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uRGF0YXNvdXJjZVByb3BDaGFuZ2UuYmluZCh0aGlzLCAnbWV0cmljcycpfVxyXG4gICAgICAgIGl0ZW1HZW5lcmF0b3I9eygpID0+ICh7XHJcbiAgICAgICAgICBtZXRyaWNfbmFtZTogJzxuZXcgbWV0cmljPicsXHJcbiAgICAgICAgICB2ZXJib3NlX25hbWU6ICcnLFxyXG4gICAgICAgICAgZXhwcmVzc2lvbjogJycsXHJcbiAgICAgICAgfSl9XHJcbiAgICAgICAgaXRlbUNlbGxQcm9wcz17e1xyXG4gICAgICAgICAgZXhwcmVzc2lvbjogKCkgPT4gKHtcclxuICAgICAgICAgICAgd2lkdGg6ICcyNDBweCcsXHJcbiAgICAgICAgICB9KSxcclxuICAgICAgICB9fVxyXG4gICAgICAgIGl0ZW1SZW5kZXJlcnM9e3tcclxuICAgICAgICAgIG1ldHJpY19uYW1lOiAodiwgb25DaGFuZ2UsIF8sIHJlY29yZCkgPT4gKFxyXG4gICAgICAgICAgICA8RmxleFJvd0NvbnRhaW5lcj5cclxuICAgICAgICAgICAgICB7cmVjb3JkLmlzX2NlcnRpZmllZCAmJiAoXHJcbiAgICAgICAgICAgICAgICA8Q2VydGlmaWVkQmFkZ2VcclxuICAgICAgICAgICAgICAgICAgY2VydGlmaWVkQnk9e3JlY29yZC5jZXJ0aWZpZWRfYnl9XHJcbiAgICAgICAgICAgICAgICAgIGRldGFpbHM9e3JlY29yZC5jZXJ0aWZpY2F0aW9uX2RldGFpbHN9XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAge3JlY29yZC53YXJuaW5nX21hcmtkb3duICYmIChcclxuICAgICAgICAgICAgICAgIDxXYXJuaW5nSWNvbldpdGhUb29sdGlwXHJcbiAgICAgICAgICAgICAgICAgIHdhcm5pbmdNYXJrZG93bj17cmVjb3JkLndhcm5pbmdfbWFya2Rvd259XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgPEVkaXRhYmxlVGl0bGUgY2FuRWRpdCB0aXRsZT17dn0gb25TYXZlVGl0bGU9e29uQ2hhbmdlfSAvPlxyXG4gICAgICAgICAgICA8L0ZsZXhSb3dDb250YWluZXI+XHJcbiAgICAgICAgICApLFxyXG4gICAgICAgICAgdmVyYm9zZV9uYW1lOiAodiwgb25DaGFuZ2UpID0+IChcclxuICAgICAgICAgICAgPFRleHRDb250cm9sIGNhbkVkaXQgdmFsdWU9e3Z9IG9uQ2hhbmdlPXtvbkNoYW5nZX0gLz5cclxuICAgICAgICAgICksXHJcbiAgICAgICAgICBleHByZXNzaW9uOiAodiwgb25DaGFuZ2UpID0+IChcclxuICAgICAgICAgICAgPFRleHRBcmVhQ29udHJvbFxyXG4gICAgICAgICAgICAgIGNhbkVkaXRcclxuICAgICAgICAgICAgICBpbml0aWFsVmFsdWU9e3Z9XHJcbiAgICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlfVxyXG4gICAgICAgICAgICAgIGV4dHJhQ2xhc3Nlcz17WydkYXRhc291cmNlLXNxbC1leHByZXNzaW9uJ119XHJcbiAgICAgICAgICAgICAgbGFuZ3VhZ2U9XCJzcWxcIlxyXG4gICAgICAgICAgICAgIG9mZmVyRWRpdEluTW9kYWw9e2ZhbHNlfVxyXG4gICAgICAgICAgICAgIG1pbkxpbmVzPXs1fVxyXG4gICAgICAgICAgICAgIHRleHRBcmVhU3R5bGVzPXt7IG1pbldpZHRoOiAnMjAwcHgnLCBtYXhXaWR0aDogJzQ1MHB4JyB9fVxyXG4gICAgICAgICAgICAgIHJlc2l6ZT1cImJvdGhcIlxyXG4gICAgICAgICAgICAvPlxyXG4gICAgICAgICAgKSxcclxuICAgICAgICAgIGRlc2NyaXB0aW9uOiAodiwgb25DaGFuZ2UsIGxhYmVsKSA9PiAoXHJcbiAgICAgICAgICAgIDxTdGFja2VkRmllbGRcclxuICAgICAgICAgICAgICBsYWJlbD17bGFiZWx9XHJcbiAgICAgICAgICAgICAgZm9ybUVsZW1lbnQ9ezxUZXh0Q29udHJvbCB2YWx1ZT17dn0gb25DaGFuZ2U9e29uQ2hhbmdlfSAvPn1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICksXHJcbiAgICAgICAgICBkM2Zvcm1hdDogKHYsIG9uQ2hhbmdlLCBsYWJlbCkgPT4gKFxyXG4gICAgICAgICAgICA8U3RhY2tlZEZpZWxkXHJcbiAgICAgICAgICAgICAgbGFiZWw9e2xhYmVsfVxyXG4gICAgICAgICAgICAgIGZvcm1FbGVtZW50PXs8VGV4dENvbnRyb2wgdmFsdWU9e3Z9IG9uQ2hhbmdlPXtvbkNoYW5nZX0gLz59XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICApLFxyXG4gICAgICAgIH19XHJcbiAgICAgICAgYWxsb3dEZWxldGVzXHJcbiAgICAgICAgc3RpY2t5SGVhZGVyXHJcbiAgICAgIC8+XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyBkYXRhc291cmNlLCBhY3RpdmVUYWJLZXkgfSA9IHRoaXMuc3RhdGU7XHJcbiAgICBjb25zdCB7IG1ldHJpY3MgfSA9IGRhdGFzb3VyY2U7XHJcbiAgICBjb25zdCBzb3J0ZWRNZXRyaWNzID0gbWV0cmljcz8ubGVuZ3RoID8gdGhpcy5zb3J0TWV0cmljcyhtZXRyaWNzKSA6IFtdO1xyXG4gICAgY29uc3QgeyB0aGVtZSB9ID0gdGhpcy5wcm9wcztcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8RGF0YXNvdXJjZUNvbnRhaW5lcj5cclxuICAgICAgICB7dGhpcy5yZW5kZXJFcnJvcnMoKX1cclxuICAgICAgICA8QWxlcnRcclxuICAgICAgICAgIGNzcz17dGhlbWUgPT4gKHsgbWFyZ2luQm90dG9tOiB0aGVtZS5ncmlkVW5pdCAqIDQgfSl9XHJcbiAgICAgICAgICB0eXBlPVwid2FybmluZ1wiXHJcbiAgICAgICAgICBtZXNzYWdlPXtcclxuICAgICAgICAgICAgPD5cclxuICAgICAgICAgICAgICB7JyAnfVxyXG4gICAgICAgICAgICAgIDxzdHJvbmc+e3QoJ0JlIGNhcmVmdWwuJyl9IDwvc3Ryb25nPlxyXG4gICAgICAgICAgICAgIHt0KFxyXG4gICAgICAgICAgICAgICAgJ0NoYW5naW5nIHRoZXNlIHNldHRpbmdzIHdpbGwgYWZmZWN0IGFsbCBjaGFydHMgdXNpbmcgdGhpcyBkYXRhc2V0LCBpbmNsdWRpbmcgY2hhcnRzIG93bmVkIGJ5IG90aGVyIHBlb3BsZS4nLFxyXG4gICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgIDwvPlxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIC8+XHJcbiAgICAgICAgPFN0eWxlZFRhYmxlVGFic1xyXG4gICAgICAgICAgZnVsbFdpZHRoPXtmYWxzZX1cclxuICAgICAgICAgIGlkPVwidGFibGUtdGFic1wiXHJcbiAgICAgICAgICBkYXRhLXRlc3Q9XCJlZGl0LWRhdGFzZXQtdGFic1wiXHJcbiAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVUYWJTZWxlY3R9XHJcbiAgICAgICAgICBkZWZhdWx0QWN0aXZlS2V5PXthY3RpdmVUYWJLZXl9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPFRhYnMuVGFiUGFuZSBrZXk9ezB9IHRhYj17dCgnU291cmNlJyl9PlxyXG4gICAgICAgICAgICB7dGhpcy5yZW5kZXJTb3VyY2VGaWVsZHNldCh0aGVtZSl9XHJcbiAgICAgICAgICA8L1RhYnMuVGFiUGFuZT5cclxuICAgICAgICAgIDxUYWJzLlRhYlBhbmVcclxuICAgICAgICAgICAgdGFiPXtcclxuICAgICAgICAgICAgICA8Q29sbGVjdGlvblRhYlRpdGxlXHJcbiAgICAgICAgICAgICAgICBjb2xsZWN0aW9uPXtzb3J0ZWRNZXRyaWNzfVxyXG4gICAgICAgICAgICAgICAgdGl0bGU9e3QoJ01ldHJpY3MnKX1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGtleT17MX1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge3RoaXMucmVuZGVyTWV0cmljQ29sbGVjdGlvbigpfVxyXG4gICAgICAgICAgPC9UYWJzLlRhYlBhbmU+XHJcbiAgICAgICAgICA8VGFicy5UYWJQYW5lXHJcbiAgICAgICAgICAgIHRhYj17XHJcbiAgICAgICAgICAgICAgPENvbGxlY3Rpb25UYWJUaXRsZVxyXG4gICAgICAgICAgICAgICAgY29sbGVjdGlvbj17dGhpcy5zdGF0ZS5kYXRhYmFzZUNvbHVtbnN9XHJcbiAgICAgICAgICAgICAgICB0aXRsZT17dCgnQ29sdW1ucycpfVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAga2V5PXsyfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8U3R5bGVkQ29sdW1uc1RhYldyYXBwZXI+XHJcbiAgICAgICAgICAgICAgPENvbHVtbkJ1dHRvbldyYXBwZXI+XHJcbiAgICAgICAgICAgICAgICA8U3R5bGVkQnV0dG9uV3JhcHBlcj5cclxuICAgICAgICAgICAgICAgICAgPEJ1dHRvblxyXG4gICAgICAgICAgICAgICAgICAgIGJ1dHRvblNpemU9XCJzbWFsbFwiXHJcbiAgICAgICAgICAgICAgICAgICAgYnV0dG9uU3R5bGU9XCJ0ZXJ0aWFyeVwiXHJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5zeW5jTWV0YWRhdGF9XHJcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwic3luYy1mcm9tLXNvdXJjZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e3RoaXMuc3RhdGUuaXNFZGl0TW9kZX1cclxuICAgICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWRhdGFiYXNlXCIgLz57JyAnfVxyXG4gICAgICAgICAgICAgICAgICAgIHt0KCdTeW5jIGNvbHVtbnMgZnJvbSBzb3VyY2UnKX1cclxuICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L1N0eWxlZEJ1dHRvbldyYXBwZXI+XHJcbiAgICAgICAgICAgICAgPC9Db2x1bW5CdXR0b25XcmFwcGVyPlxyXG4gICAgICAgICAgICAgIDxDb2x1bW5Db2xsZWN0aW9uVGFibGVcclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNvbHVtbnMtdGFibGVcIlxyXG4gICAgICAgICAgICAgICAgY29sdW1ucz17dGhpcy5zdGF0ZS5kYXRhYmFzZUNvbHVtbnN9XHJcbiAgICAgICAgICAgICAgICBkYXRhc291cmNlPXtkYXRhc291cmNlfVxyXG4gICAgICAgICAgICAgICAgb25Db2x1bW5zQ2hhbmdlPXtkYXRhYmFzZUNvbHVtbnMgPT5cclxuICAgICAgICAgICAgICAgICAgdGhpcy5zZXRDb2x1bW5zKHsgZGF0YWJhc2VDb2x1bW5zIH0pXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBvbkRhdGFzb3VyY2VDaGFuZ2U9e3RoaXMub25EYXRhc291cmNlQ2hhbmdlfVxyXG4gICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAge3RoaXMuc3RhdGUubWV0YWRhdGFMb2FkaW5nICYmIDxMb2FkaW5nIC8+fVxyXG4gICAgICAgICAgICA8L1N0eWxlZENvbHVtbnNUYWJXcmFwcGVyPlxyXG4gICAgICAgICAgPC9UYWJzLlRhYlBhbmU+XHJcbiAgICAgICAgICA8VGFicy5UYWJQYW5lXHJcbiAgICAgICAgICAgIHRhYj17XHJcbiAgICAgICAgICAgICAgPENvbGxlY3Rpb25UYWJUaXRsZVxyXG4gICAgICAgICAgICAgICAgY29sbGVjdGlvbj17dGhpcy5zdGF0ZS5jYWxjdWxhdGVkQ29sdW1uc31cclxuICAgICAgICAgICAgICAgIHRpdGxlPXt0KCdDYWxjdWxhdGVkIGNvbHVtbnMnKX1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGtleT17M31cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPFN0eWxlZENvbHVtbnNUYWJXcmFwcGVyPlxyXG4gICAgICAgICAgICAgIDxDb2x1bW5Db2xsZWN0aW9uVGFibGVcclxuICAgICAgICAgICAgICAgIGNvbHVtbnM9e3RoaXMuc3RhdGUuY2FsY3VsYXRlZENvbHVtbnN9XHJcbiAgICAgICAgICAgICAgICBvbkNvbHVtbnNDaGFuZ2U9e2NhbGN1bGF0ZWRDb2x1bW5zID0+XHJcbiAgICAgICAgICAgICAgICAgIHRoaXMuc2V0Q29sdW1ucyh7IGNhbGN1bGF0ZWRDb2x1bW5zIH0pXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBvbkRhdGFzb3VyY2VDaGFuZ2U9e3RoaXMub25EYXRhc291cmNlQ2hhbmdlfVxyXG4gICAgICAgICAgICAgICAgZGF0YXNvdXJjZT17ZGF0YXNvdXJjZX1cclxuICAgICAgICAgICAgICAgIGVkaXRhYmxlQ29sdW1uTmFtZVxyXG4gICAgICAgICAgICAgICAgc2hvd0V4cHJlc3Npb25cclxuICAgICAgICAgICAgICAgIGFsbG93QWRkSXRlbVxyXG4gICAgICAgICAgICAgICAgYWxsb3dFZGl0RGF0YVR5cGVcclxuICAgICAgICAgICAgICAgIGl0ZW1HZW5lcmF0b3I9eygpID0+ICh7XHJcbiAgICAgICAgICAgICAgICAgIGNvbHVtbl9uYW1lOiAnPG5ldyBjb2x1bW4+JyxcclxuICAgICAgICAgICAgICAgICAgZmlsdGVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgZ3JvdXBieTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogJzxlbnRlciBTUUwgZXhwcmVzc2lvbiBoZXJlPicsXHJcbiAgICAgICAgICAgICAgICAgIF9fZXhwYW5kZWQ6IHRydWUsXHJcbiAgICAgICAgICAgICAgICB9KX1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8L1N0eWxlZENvbHVtbnNUYWJXcmFwcGVyPlxyXG4gICAgICAgICAgPC9UYWJzLlRhYlBhbmU+XHJcbiAgICAgICAgICA8VGFicy5UYWJQYW5lIGtleT17NH0gdGFiPXt0KCdTZXR0aW5ncycpfT5cclxuICAgICAgICAgICAgPFJvdyBndXR0ZXI9ezE2fT5cclxuICAgICAgICAgICAgICA8Q29sIHhzPXsyNH0gbWQ9ezEyfT5cclxuICAgICAgICAgICAgICAgIDxGb3JtQ29udGFpbmVyPnt0aGlzLnJlbmRlclNldHRpbmdzRmllbGRzZXQoKX08L0Zvcm1Db250YWluZXI+XHJcbiAgICAgICAgICAgICAgPC9Db2w+XHJcbiAgICAgICAgICAgICAgPENvbCB4cz17MjR9IG1kPXsxMn0+XHJcbiAgICAgICAgICAgICAgICA8Rm9ybUNvbnRhaW5lcj57dGhpcy5yZW5kZXJBZHZhbmNlZEZpZWxkc2V0KCl9PC9Gb3JtQ29udGFpbmVyPlxyXG4gICAgICAgICAgICAgIDwvQ29sPlxyXG4gICAgICAgICAgICA8L1Jvdz5cclxuICAgICAgICAgIDwvVGFicy5UYWJQYW5lPlxyXG4gICAgICAgIDwvU3R5bGVkVGFibGVUYWJzPlxyXG4gICAgICA8L0RhdGFzb3VyY2VDb250YWluZXI+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuRGF0YXNvdXJjZUVkaXRvci5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XHJcbkRhdGFzb3VyY2VFZGl0b3IucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xyXG5cclxuY29uc3QgRGF0YVNvdXJjZUNvbXBvbmVudCA9IHdpdGhUaGVtZShEYXRhc291cmNlRWRpdG9yKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHdpdGhUb2FzdHMoRGF0YVNvdXJjZUNvbXBvbmVudCk7XHJcbiJdfQ== */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\nfunction CollectionTabTitle(_ref12) {let { title, collection } = _ref12;\n  return (\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"div\", {\n      css: _ref13,\n      \"data-test\": `collection-tab-${title}` },\n\n    title, ' ',\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(StyledBadge, { count: collection ? collection.length : 0, showZero: true })));\n\n\n}\n\nCollectionTabTitle.propTypes = {\n  title: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),\n  collection: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().array) };\n\n\nfunction ColumnCollectionTable(_ref14)\n\n\n\n\n\n\n\n\n\n{let { columns, datasource, onColumnsChange, onDatasourceChange, editableColumnName, showExpression, allowAddItem, allowEditDataType, itemGenerator } = _ref14;\n  return (\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_CollectionTable__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n      collection: columns,\n      tableColumns:\n      (0,src_featureFlags__WEBPACK_IMPORTED_MODULE_26__.isFeatureEnabled)(src_featureFlags__WEBPACK_IMPORTED_MODULE_26__.FeatureFlag.ENABLE_ADVANCED_DATA_TYPES) ?\n      [\n      'column_name',\n      'advanced_data_type',\n      'type',\n      'is_dttm',\n      'main_dttm_col',\n      'filterable',\n      'groupby'] :\n\n      [\n      'column_name',\n      'type',\n      'is_dttm',\n      'main_dttm_col',\n      'filterable',\n      'groupby'],\n\n\n      sortColumns:\n      (0,src_featureFlags__WEBPACK_IMPORTED_MODULE_26__.isFeatureEnabled)(src_featureFlags__WEBPACK_IMPORTED_MODULE_26__.FeatureFlag.ENABLE_ADVANCED_DATA_TYPES) ?\n      [\n      'column_name',\n      'advanced_data_type',\n      'type',\n      'is_dttm',\n      'main_dttm_col',\n      'filterable',\n      'groupby'] :\n\n      [\n      'column_name',\n      'type',\n      'is_dttm',\n      'main_dttm_col',\n      'filterable',\n      'groupby'],\n\n\n      allowDeletes: true,\n      allowAddItem: allowAddItem,\n      itemGenerator: itemGenerator,\n      stickyHeader: true,\n      expandFieldset:\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(FormContainer, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_29__[\"default\"], { compact: true },\n      showExpression &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"expression\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('SQL expression'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_23__[\"default\"], {\n          language: \"markdown\",\n          offerEditInModal: false,\n          resize: \"vertical\" }) }),\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"verbose_name\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Label'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n          controlId: \"verbose_name\",\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Label') }) }),\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"description\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Description'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n          controlId: \"description\",\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Description') }) }),\n\n\n\n      allowEditDataType &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"type\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Data type'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_9__.Select, {\n          ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Data type'),\n          options: DATA_TYPES,\n          name: \"type\",\n          allowNewOptions: true,\n          allowClear: true }) }),\n\n\n\n\n      (0,src_featureFlags__WEBPACK_IMPORTED_MODULE_26__.isFeatureEnabled)(src_featureFlags__WEBPACK_IMPORTED_MODULE_26__.FeatureFlag.ENABLE_ADVANCED_DATA_TYPES) ?\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"advanced_data_type\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Advanced data type'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n          controlId: \"advanced_data_type\",\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Advanced Data type') }) }) :\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, null),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"python_date_format\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Datetime format'),\n        description:\n        /* Note the fragmented translations may not work. */\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"div\", null,\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('The pattern of timestamp format. For strings use '),\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"a\", { href: \"https://docs.python.org/2/library/datetime.html#strftime-strptime-behavior\" },\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Python datetime string pattern')),\n\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)(' expression which needs to adhere to the '),\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"a\", { href: \"https://en.wikipedia.org/wiki/ISO_8601\" },\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('ISO 8601')),\n\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)(` standard to ensure that the lexicographical ordering\n                      coincides with the chronological ordering. If the\n                      timestamp format does not adhere to the ISO 8601 standard\n                      you will need to define an expression and type for\n                      transforming the string into a date or timestamp. Note\n                      currently time zones are not supported. If time is stored\n                      in epoch format, put \\`epoch_s\\` or \\`epoch_ms\\`. If no pattern\n                      is specified we fall back to using the optional defaults on a per\n                      database/column name level via the extra parameter.`)),\n\n\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n          controlId: \"python_date_format\",\n          placeholder: \"%Y/%m/%d\" }) }),\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"certified_by\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Certified By'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Person or group that has certified this metric'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n          controlId: \"certified\",\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Certified by') }) }),\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"certification_details\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Certification details'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Details of the certification'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n          controlId: \"certificationDetails\",\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Certification details') }) }))),\n\n\n\n\n\n\n      columnLabels:\n      (0,src_featureFlags__WEBPACK_IMPORTED_MODULE_26__.isFeatureEnabled)(src_featureFlags__WEBPACK_IMPORTED_MODULE_26__.FeatureFlag.ENABLE_ADVANCED_DATA_TYPES) ?\n      {\n        column_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Column'),\n        advanced_data_type: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Advanced data type'),\n        type: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Data type'),\n        groupby: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Is dimension'),\n        is_dttm: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Is temporal'),\n        main_dttm_col: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Default datetime'),\n        filterable: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Is filterable') } :\n\n      {\n        column_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Column'),\n        type: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Data type'),\n        groupby: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Is dimension'),\n        is_dttm: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Is temporal'),\n        main_dttm_col: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Default datetime'),\n        filterable: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Is filterable') },\n\n\n      onChange: onColumnsChange,\n      itemRenderers:\n      (0,src_featureFlags__WEBPACK_IMPORTED_MODULE_26__.isFeatureEnabled)(src_featureFlags__WEBPACK_IMPORTED_MODULE_26__.FeatureFlag.ENABLE_ADVANCED_DATA_TYPES) ?\n      {\n        column_name: (v, onItemChange, _, record) =>\n        editableColumnName ?\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(StyledLabelWrapper, null,\n        record.is_certified &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n          certifiedBy: record.certified_by,\n          details: record.certification_details }),\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_EditableTitle__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n          canEdit: true,\n          title: v,\n          onSaveTitle: onItemChange })) :\n\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(StyledLabelWrapper, null,\n        record.is_certified &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n          certifiedBy: record.certified_by,\n          details: record.certification_details }),\n\n\n        v),\n\n\n        main_dttm_col: (value, _onItemChange, _label, record) => {\n          const checked = datasource.main_dttm_col === record.column_name;\n          const disabled = !columns.find(\n          (column) => column.column_name === record.column_name).\n          is_dttm;\n          return (\n            (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Radio__WEBPACK_IMPORTED_MODULE_4__.Radio, {\n              \"data-test\": `radio-default-dttm-${record.column_name}`,\n              checked: checked,\n              disabled: disabled,\n              onChange: () =>\n              onDatasourceChange({\n                ...datasource,\n                main_dttm_col: record.column_name }) }));\n\n\n\n\n        },\n        type: (d) => d ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Label__WEBPACK_IMPORTED_MODULE_16__[\"default\"], null, d) : null,\n        advanced_data_type: (d) =>\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Label__WEBPACK_IMPORTED_MODULE_16__[\"default\"], { onChange: onColumnsChange }, d),\n\n        is_dttm: checkboxGenerator,\n        filterable: checkboxGenerator,\n        groupby: checkboxGenerator } :\n\n      {\n        column_name: (v, onItemChange, _, record) =>\n        editableColumnName ?\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(StyledLabelWrapper, null,\n        record.is_certified &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n          certifiedBy: record.certified_by,\n          details: record.certification_details }),\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], { value: v, onChange: onItemChange })) :\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(StyledLabelWrapper, null,\n        record.is_certified &&\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n          certifiedBy: record.certified_by,\n          details: record.certification_details }),\n\n\n        v),\n\n\n        main_dttm_col: (value, _onItemChange, _label, record) => {\n          const checked = datasource.main_dttm_col === record.column_name;\n          const disabled = !columns.find(\n          (column) => column.column_name === record.column_name).\n          is_dttm;\n          return (\n            (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Radio__WEBPACK_IMPORTED_MODULE_4__.Radio, {\n              \"data-test\": `radio-default-dttm-${record.column_name}`,\n              checked: checked,\n              disabled: disabled,\n              onChange: () =>\n              onDatasourceChange({\n                ...datasource,\n                main_dttm_col: record.column_name }) }));\n\n\n\n\n        },\n        type: (d) => d ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Label__WEBPACK_IMPORTED_MODULE_16__[\"default\"], null, d) : null,\n        is_dttm: checkboxGenerator,\n        filterable: checkboxGenerator,\n        groupby: checkboxGenerator } }));\n\n\n\n\n}\nColumnCollectionTable.propTypes = {\n  columns: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().array.isRequired),\n  datasource: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().object.isRequired),\n  onColumnsChange: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func.isRequired),\n  onDatasourceChange: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func.isRequired),\n  editableColumnName: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),\n  showExpression: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),\n  allowAddItem: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),\n  allowEditDataType: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),\n  itemGenerator: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func) };\n\nColumnCollectionTable.defaultProps = {\n  editableColumnName: false,\n  showExpression: false,\n  allowAddItem: false,\n  allowEditDataType: false,\n  itemGenerator: () => ({\n    column_name: '<new column>',\n    filterable: true,\n    groupby: true }) };\n\n\n\nfunction StackedField(_ref15) {let { label, formElement } = _ref15;\n  return (\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"div\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"div\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"strong\", null, label)),\n\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"div\", null, formElement)));\n\n\n}\n\nStackedField.propTypes = {\n  label: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),\n  formElement: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().node) };\n\n\nfunction FormContainer(_ref16) {let { children } = _ref16;\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Card__WEBPACK_IMPORTED_MODULE_5__[\"default\"], { padded: true }, children);\n}\n\nFormContainer.propTypes = {\n  children: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().node) };\n\n\nconst propTypes = {\n  datasource: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().object.isRequired),\n  onChange: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n  addSuccessToast: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func.isRequired),\n  addDangerToast: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func.isRequired),\n  setIsEditing: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func) };\n\n\nconst defaultProps = {\n  onChange: () => {},\n  setIsEditing: () => {} };\n\n\nfunction OwnersSelector(_ref17) {let { datasource, onChange } = _ref17;\n  const loadOptions = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(function (search, page, pageSize) {if (search === void 0) {search = '';}\n    const query = rison__WEBPACK_IMPORTED_MODULE_1___default().encode({ filter: search, page, page_size: pageSize });\n    return _superset_ui_core__WEBPACK_IMPORTED_MODULE_34__[\"default\"].get({\n      endpoint: `/api/v1/dataset/related/owners?q=${query}` }).\n    then((response) => ({\n      data: response.json.result.\n      filter((item) => item.extra.active).\n      map((item) => ({\n        value: item.value,\n        label: item.text })),\n\n      totalCount: response.json.count }));\n\n  }, []);\n\n  return (\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_9__.AsyncSelect, {\n      ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Select owners'),\n      mode: \"multiple\",\n      name: \"owners\",\n      value: datasource.owners,\n      options: loadOptions,\n      onChange: onChange,\n      header: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_10__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Owners')),\n      allowClear: true }));\n\n\n}__signature__(OwnersSelector, \"useCallback{loadOptions}\");var _ref23 =  false ? 0 : { name: \"17jm38f-DatasourceEditor\", styles: \"margin-top:8px;label:DatasourceEditor;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };var _ref24 =  false ? 0 : { name: \"17jm38f-DatasourceEditor\", styles: \"margin-top:8px;label:DatasourceEditor;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\nclass DatasourceEditor extends react__WEBPACK_IMPORTED_MODULE_2__.PureComponent {\n  constructor(props) {var _props$datasource$met;\n    super(props);\n    this.state = {\n      datasource: {\n        ...props.datasource,\n        owners: props.datasource.owners.map((owner) => ({\n          value: owner.value || owner.id,\n          label: owner.label || `${owner.first_name} ${owner.last_name}` })),\n\n        metrics: (_props$datasource$met = props.datasource.metrics) == null ? void 0 : _props$datasource$met.map((metric) => {\n          const {\n            certified_by: certifiedByMetric,\n            certification_details: certificationDetails } =\n          metric;\n          const {\n            certification: { details, certified_by: certifiedBy } = {},\n            warning_markdown: warningMarkdown } =\n          JSON.parse(metric.extra || '{}') || {};\n          return {\n            ...metric,\n            certification_details: certificationDetails || details,\n            warning_markdown: warningMarkdown || '',\n            certified_by: certifiedBy || certifiedByMetric };\n\n        }) },\n\n      errors: [],\n      isSqla:\n      props.datasource.datasource_type === 'table' ||\n      props.datasource.type === 'table',\n      isEditMode: false,\n      databaseColumns: props.datasource.columns.filter((col) => !col.expression),\n      calculatedColumns: props.datasource.columns.filter(\n      (col) => !!col.expression),\n\n      metadataLoading: false,\n      activeTabKey: 0,\n      datasourceType: props.datasource.sql ?\n      DATASOURCE_TYPES.virtual.key :\n      DATASOURCE_TYPES.physical.key };\n\n\n    this.onChange = this.onChange.bind(this);\n    this.onChangeEditMode = this.onChangeEditMode.bind(this);\n    this.onDatasourcePropChange = this.onDatasourcePropChange.bind(this);\n    this.onDatasourceChange = this.onDatasourceChange.bind(this);\n    this.tableChangeAndSyncMetadata =\n    this.tableChangeAndSyncMetadata.bind(this);\n    this.syncMetadata = this.syncMetadata.bind(this);\n    this.setColumns = this.setColumns.bind(this);\n    this.validateAndChange = this.validateAndChange.bind(this);\n    this.handleTabSelect = this.handleTabSelect.bind(this);\n    this.allowEditSource = !(0,src_featureFlags__WEBPACK_IMPORTED_MODULE_26__.isFeatureEnabled)(\n    src_featureFlags__WEBPACK_IMPORTED_MODULE_26__.FeatureFlag.DISABLE_DATASET_SOURCE_EDIT);\n\n  }\n\n  onChange() {\n    // Emptying SQL if \"Physical\" radio button is selected\n    // Currently the logic to know whether the source is\n    // physical or virtual is based on whether SQL is empty or not.\n    const { datasourceType, datasource } = this.state;\n    const sql =\n    datasourceType === DATASOURCE_TYPES.physical.key ? '' : datasource.sql;\n    const newDatasource = {\n      ...this.state.datasource,\n      sql,\n      columns: [...this.state.databaseColumns, ...this.state.calculatedColumns] };\n\n    this.props.onChange(newDatasource, this.state.errors);\n  }\n\n  onChangeEditMode() {\n    this.props.setIsEditing(!this.state.isEditMode);\n    this.setState((prevState) => ({ isEditMode: !prevState.isEditMode }));\n  }\n\n  onDatasourceChange(datasource, callback) {if (callback === void 0) {callback = this.validateAndChange;}\n    this.setState({ datasource }, callback);\n  }\n\n  onDatasourcePropChange(attr, value) {\n    if (value === undefined) return; // if value is undefined do not update state\n    const datasource = { ...this.state.datasource, [attr]: value };\n    this.setState(\n    (prevState) => ({\n      datasource: { ...prevState.datasource, [attr]: value } }),\n\n    attr === 'table_name' ?\n    this.onDatasourceChange(datasource, this.tableChangeAndSyncMetadata) :\n    this.onDatasourceChange(datasource, this.validateAndChange));\n\n  }\n\n  onDatasourceTypeChange(datasourceType) {\n    this.setState({ datasourceType });\n  }\n\n  setColumns(obj) {\n    // update calculatedColumns or databaseColumns\n    this.setState(obj, this.validateAndChange);\n  }\n\n  validateAndChange() {\n    this.validate(this.onChange);\n  }\n\n  tableChangeAndSyncMetadata() {\n    this.validate(() => {\n      this.syncMetadata();\n      this.onChange();\n    });\n  }\n\n  updateColumns(cols) {\n    const { databaseColumns } = this.state;\n    const databaseColumnNames = cols.map((col) => col.name);\n    const currentCols = databaseColumns.reduce(\n    (agg, col) => ({\n      ...agg,\n      [col.column_name]: col }),\n\n    {});\n\n    const finalColumns = [];\n    const results = {\n      added: [],\n      modified: [],\n      removed: databaseColumns.\n      map((col) => col.column_name).\n      filter((col) => !_babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_0___default()(databaseColumnNames).call(databaseColumnNames, col)) };\n\n    cols.forEach((col) => {\n      const currentCol = currentCols[col.name];\n      if (!currentCol) {\n        // new column\n        finalColumns.push({\n          id: shortid__WEBPACK_IMPORTED_MODULE_8___default().generate(),\n          column_name: col.name,\n          type: col.type,\n          groupby: true,\n          filterable: true,\n          is_dttm: col.is_dttm });\n\n        results.added.push(col.name);\n      } else if (\n      currentCol.type !== col.type ||\n      !currentCol.is_dttm && col.is_dttm)\n      {\n        // modified column\n        finalColumns.push({\n          ...currentCol,\n          type: col.type,\n          is_dttm: currentCol.is_dttm || col.is_dttm });\n\n        results.modified.push(col.name);\n      } else {\n        // unchanged\n        finalColumns.push(currentCol);\n      }\n    });\n    if (\n    results.added.length ||\n    results.modified.length ||\n    results.removed.length)\n    {\n      this.setColumns({ databaseColumns: finalColumns });\n    }\n    return results;\n  }\n\n  syncMetadata() {\n    const { datasource } = this.state;\n    const params = {\n      datasource_type: datasource.type || datasource.datasource_type,\n      database_name:\n      datasource.database.database_name || datasource.database.name,\n      schema_name: datasource.schema,\n      table_name: datasource.table_name ?\n      encodeURIComponent(datasource.table_name) :\n      datasource.table_name };\n\n    Object.entries(params).forEach((_ref18) => {let [key, value] = _ref18;\n      // rison can't encode the undefined value\n      if (value === undefined) {\n        params[key] = null;\n      }\n    });\n    const endpoint = `/datasource/external_metadata_by_name/?q=${rison__WEBPACK_IMPORTED_MODULE_1___default().encode(\n    params)\n    }`;\n    this.setState({ metadataLoading: true });\n\n    _superset_ui_core__WEBPACK_IMPORTED_MODULE_34__[\"default\"].get({ endpoint }).\n    then((_ref19) => {let { json } = _ref19;\n      const results = this.updateColumns(json);\n      if (results.modified.length) {\n        this.props.addSuccessToast(\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Modified columns: %s', results.modified.join(', ')));\n\n      }\n      if (results.removed.length) {\n        this.props.addSuccessToast(\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Removed columns: %s', results.removed.join(', ')));\n\n      }\n      if (results.added.length) {\n        this.props.addSuccessToast(\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('New columns added: %s', results.added.join(', ')));\n\n      }\n      this.props.addSuccessToast((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Metadata has been synced'));\n      this.setState({ metadataLoading: false });\n    }).\n    catch((response) =>\n    (0,src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_20__.getClientErrorObject)(response).then((_ref20) => {let { error, statusText } = _ref20;\n      this.props.addDangerToast(\n      error || statusText || (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('An error has occurred'));\n\n      this.setState({ metadataLoading: false });\n    }));\n\n  }\n\n  findDuplicates(arr, accessor) {\n    const seen = {};\n    const dups = [];\n    arr.forEach((obj) => {\n      const item = accessor(obj);\n      if (item in seen) {\n        dups.push(item);\n      } else {\n        seen[item] = null;\n      }\n    });\n    return dups;\n  }\n\n  validate(callback) {\n    let errors = [];\n    let dups;\n    const { datasource } = this.state;\n\n    // Looking for duplicate column_name\n    dups = this.findDuplicates(datasource.columns, (obj) => obj.column_name);\n    errors = errors.concat(\n    dups.map((name) => (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Column name [%s] is duplicated', name)));\n\n\n    // Looking for duplicate metric_name\n    dups = this.findDuplicates(datasource.metrics, (obj) => obj.metric_name);\n    errors = errors.concat(\n    dups.map((name) => (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Metric name [%s] is duplicated', name)));\n\n\n    // Making sure calculatedColumns have an expression defined\n    const noFilterCalcCols = this.state.calculatedColumns.filter(\n    (col) => !col.expression && !col.json);\n\n    errors = errors.concat(\n    noFilterCalcCols.map((col) =>\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Calculated column [%s] requires an expression', col.column_name)));\n\n\n\n    this.setState({ errors }, callback);\n  }\n\n  handleTabSelect(activeTabKey) {\n    this.setState({ activeTabKey });\n  }\n\n  sortMetrics(metrics) {\n    return metrics.sort((_ref21, _ref22) => {let { id: a } = _ref21;let { id: b } = _ref22;return b - a;});\n  }\n\n  renderSettingsFieldset() {\n    const { datasource } = this.state;\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Basic'),\n        item: datasource,\n        onChange: this.onDatasourceChange },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"description\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Description'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_23__[\"default\"], {\n          language: \"markdown\",\n          offerEditInModal: false,\n          resize: \"vertical\" }) }),\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"default_endpoint\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Default URL'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)(\n        'Default URL to redirect to when accessing from the dataset list page'),\n\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], { controlId: \"default_endpoint\" }) }),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        inline: true,\n        fieldKey: \"filter_select_enabled\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Autocomplete filters'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Whether to populate autocomplete filters options'),\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_CheckboxControl__WEBPACK_IMPORTED_MODULE_21__[\"default\"], null) }),\n\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"fetch_values_predicate\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Autocomplete query predicate'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)(\n        'When using \"Autocomplete filters\", this can be used to improve performance ' +\n        'of the query fetching the values. Use this option to apply a ' +\n        'predicate (WHERE clause) to the query selecting the distinct ' +\n        'values from the table. Typically the intent would be to limit the scan ' +\n        'by applying a relative time filter on a partitioned or indexed time-related field.'),\n\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_23__[\"default\"], {\n          language: \"sql\",\n          controlId: \"fetch_values_predicate\",\n          minLines: 5,\n          resize: \"vertical\" }) }),\n\n\n\n\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"extra\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Extra'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)(\n        'Extra data to specify table metadata. Currently supports ' +\n        'metadata of the format: `{ \"certification\": { \"certified_by\": ' +\n        '\"Data Platform Team\", \"details\": \"This table is the source of truth.\" ' +\n        '}, \"warning_markdown\": \"This is a warning.\" }`.'),\n\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_23__[\"default\"], {\n          controlId: \"extra\",\n          language: \"json\",\n          offerEditInModal: false,\n          resize: \"vertical\" }) }),\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(OwnersSelector, {\n        datasource: datasource,\n        onChange: (newOwners) => {\n          this.onDatasourceChange({ ...datasource, owners: newOwners });\n        } })));\n\n\n\n  }\n\n  renderAdvancedFieldset() {\n    const { datasource } = this.state;\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_29__[\"default\"], {\n        title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Advanced'),\n        item: datasource,\n        onChange: this.onDatasourceChange },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"cache_timeout\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Cache timeout'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)(\n        'The duration of time in seconds before the cache is invalidated'),\n\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], { controlId: \"cache_timeout\" }) }),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"offset\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Hours offset'),\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], { controlId: \"offset\" }),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)(\n        'The number of hours, negative or positive, to shift the time column. This can be used to move UTC time to local time.') }),\n\n\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"template_params\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Template parameters'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)(\n        'A set of parameters that become available in the query using Jinja templating syntax'),\n\n        control: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], { controlId: \"template_params\" }) })));\n\n\n\n\n  }\n\n  renderSpatialTab() {\n    const { datasource } = this.state;\n    const { spatials, all_cols: allCols } = datasource;\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_12__[\"default\"].TabPane, {\n        tab: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(CollectionTabTitle, { collection: spatials, title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Spatial') }),\n        key: 4 },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_CollectionTable__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        tableColumns: ['name', 'config'],\n        onChange: this.onDatasourcePropChange.bind(this, 'spatials'),\n        itemGenerator: () => ({\n          name: '<new spatial>',\n          type: '<no type>',\n          config: null }),\n\n        collection: spatials,\n        allowDeletes: true,\n        itemRenderers: {\n          name: (d, onChange) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_EditableTitle__WEBPACK_IMPORTED_MODULE_19__[\"default\"], { canEdit: true, title: d, onSaveTitle: onChange }),\n\n          config: (v, onChange) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_SpatialControl__WEBPACK_IMPORTED_MODULE_24__[\"default\"], { value: v, onChange: onChange, choices: allCols }) } })));\n\n\n\n\n\n  }\n\n  renderSourceFieldset(theme) {var _datasource$database, _datasource$database2, _datasource$database3;\n    const { datasource } = this.state;\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"div\", null,\n      this.allowEditSource &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(EditLockContainer, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"span\", { role: \"button\", tabIndex: 0, onClick: this.onChangeEditMode },\n      this.state.isEditMode ?\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_27__[\"default\"].LockUnlocked, { iconColor: theme.colors.grayscale.base }) :\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_27__[\"default\"].LockLocked, { iconColor: theme.colors.grayscale.base })),\n\n\n      !this.state.isEditMode &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"div\", null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Click the lock to make changes.')),\n\n      this.state.isEditMode &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"div\", null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Click the lock to prevent further changes.'))),\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"div\", { className: \"m-l-10 m-t-20 m-b-10\" },\n      DATASOURCE_TYPES_ARR.map((type) =>\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Radio__WEBPACK_IMPORTED_MODULE_4__.Radio, {\n        key: type.key,\n        value: type.key,\n        inline: true,\n        onChange: this.onDatasourceTypeChange.bind(this, type.key),\n        checked: this.state.datasourceType === type.key,\n        disabled: !this.state.isEditMode },\n\n      type.label))),\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"hr\", null),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_29__[\"default\"], { item: datasource, onChange: this.onDatasourceChange, compact: true },\n      this.state.datasourceType === DATASOURCE_TYPES.virtual.key &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"div\", null,\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_9__.Col, { xs: 24, md: 12 },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"databaseSelector\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('virtual'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"div\", { css: _ref23 },\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_DatabaseSelector__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {\n          db: datasource == null ? void 0 : datasource.database,\n          schema: datasource.schema,\n          onSchemaChange: (schema) =>\n          this.state.isEditMode &&\n          this.onDatasourcePropChange('schema', schema),\n\n          onDbChange: (database) =>\n          this.state.isEditMode &&\n          this.onDatasourcePropChange('database', database),\n\n          formMode: false,\n          handleError: this.props.addDangerToast,\n          readOnly: !this.state.isEditMode })) }),\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"div\", { css: /*#__PURE__*/(0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.css)({ width: 'calc(100% - 34px)', marginTop: -16 },  false ? 0 : \";label:DatasourceEditor;\",  false ? 0 : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"table_name\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Dataset name'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n          controlId: \"table_name\",\n          onChange: (table) => {\n            this.onDatasourcePropChange('table_name', table);\n          },\n          placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Dataset name'),\n          disabled: !this.state.isEditMode }) }))),\n\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"sql\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('SQL'),\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)(\n        'When specifying SQL, the datasource acts as a view. ' +\n        'Superset will use this statement as a subquery while grouping and filtering ' +\n        'on the generated parent queries.'),\n\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_23__[\"default\"], {\n          language: \"sql\",\n          offerEditInModal: false,\n          minLines: 20,\n          maxLines: 20,\n          readOnly: !this.state.isEditMode,\n          resize: \"both\" }) }))),\n\n\n\n\n\n\n\n      this.state.datasourceType === DATASOURCE_TYPES.physical.key &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_9__.Col, { xs: 24, md: 12 },\n      this.state.isSqla &&\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n        fieldKey: \"tableSelector\",\n        label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Physical'),\n        control:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"div\", { css: _ref24 },\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_TableSelector__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n          clearable: false,\n          database: {\n            ...datasource.database,\n            database_name:\n            ((_datasource$database = datasource.database) == null ? void 0 : _datasource$database.database_name) || ((_datasource$database2 =\n            datasource.database) == null ? void 0 : _datasource$database2.name) },\n\n          dbId: (_datasource$database3 = datasource.database) == null ? void 0 : _datasource$database3.id,\n          handleError: this.props.addDangerToast,\n          schema: datasource.schema,\n          sqlLabMode: false,\n          tableValue: datasource.table_name,\n          onSchemaChange:\n          this.state.isEditMode ?\n          (schema) =>\n          this.onDatasourcePropChange('schema', schema) :\n          undefined,\n\n          onDbChange:\n          this.state.isEditMode ?\n          (database) =>\n          this.onDatasourcePropChange(\n          'database',\n          database) :\n\n          undefined,\n\n          onTableSelectChange:\n          this.state.isEditMode ?\n          (table) =>\n          this.onDatasourcePropChange('table_name', table) :\n          undefined,\n\n          readOnly: !this.state.isEditMode })),\n\n\n\n        description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)(\n        'The pointer to a physical table (or view). Keep in mind that the chart is ' +\n        'associated to this Superset logical table, and this logical table points ' +\n        'the physical table referenced here.') })))));\n\n\n\n\n\n\n\n\n  }\n\n  renderErrors() {\n    if (this.state.errors.length > 0) {\n      return (\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Alert__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n          css: (theme) => ({ marginBottom: theme.gridUnit * 4 }),\n          type: \"error\",\n          message:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, null,\n          this.state.errors.map((err) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"div\", { key: err }, err))) }));\n\n\n\n\n\n    }\n    return null;\n  }\n\n  renderMetricCollection() {\n    const { datasource } = this.state;\n    const { metrics } = datasource;\n    const sortedMetrics = metrics != null && metrics.length ? this.sortMetrics(metrics) : [];\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_CollectionTable__WEBPACK_IMPORTED_MODULE_28__[\"default\"], {\n        tableColumns: ['metric_name', 'verbose_name', 'expression'],\n        sortColumns: ['metric_name', 'verbose_name', 'expression'],\n        columnLabels: {\n          metric_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Metric'),\n          verbose_name: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Label'),\n          expression: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('SQL expression') },\n\n        expandFieldset:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(FormContainer, null,\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Fieldset__WEBPACK_IMPORTED_MODULE_29__[\"default\"], { compact: true },\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n          fieldKey: \"description\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Description'),\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n            controlId: \"description\",\n            placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Description') }) }),\n\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n          fieldKey: \"d3format\",\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('D3 format'),\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], { controlId: \"d3format\", placeholder: \"%y/%m/%d\" }) }),\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Certified by'),\n          fieldKey: \"certified_by\",\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)(\n          'Person or group that has certified this metric'),\n\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n            controlId: \"certified_by\",\n            placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Certified by') }) }),\n\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Certification details'),\n          fieldKey: \"certification_details\",\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Details of the certification'),\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], {\n            controlId: \"certification_details\",\n            placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Certification details') }) }),\n\n\n\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(_Field__WEBPACK_IMPORTED_MODULE_30__[\"default\"], {\n          label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Warning'),\n          fieldKey: \"warning_markdown\",\n          description: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Optional warning about use of this metric'),\n          control:\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_23__[\"default\"], {\n            controlId: \"warning_markdown\",\n            language: \"markdown\",\n            offerEditInModal: false,\n            resize: \"vertical\" }) }))),\n\n\n\n\n\n\n        collection: sortedMetrics,\n        allowAddItem: true,\n        onChange: this.onDatasourcePropChange.bind(this, 'metrics'),\n        itemGenerator: () => ({\n          metric_name: '<new metric>',\n          verbose_name: '',\n          expression: '' }),\n\n        itemCellProps: {\n          expression: () => ({\n            width: '240px' }) },\n\n\n        itemRenderers: {\n          metric_name: (v, onChange, _, record) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(FlexRowContainer, null,\n          record.is_certified &&\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n            certifiedBy: record.certified_by,\n            details: record.certification_details }),\n\n\n          record.warning_markdown &&\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_WarningIconWithTooltip__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n            warningMarkdown: record.warning_markdown }),\n\n\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_EditableTitle__WEBPACK_IMPORTED_MODULE_19__[\"default\"], { canEdit: true, title: v, onSaveTitle: onChange })),\n\n\n          verbose_name: (v, onChange) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], { canEdit: true, value: v, onChange: onChange }),\n\n          expression: (v, onChange) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextAreaControl__WEBPACK_IMPORTED_MODULE_23__[\"default\"], {\n            canEdit: true,\n            initialValue: v,\n            onChange: onChange,\n            extraClasses: ['datasource-sql-expression'],\n            language: \"sql\",\n            offerEditInModal: false,\n            minLines: 5,\n            textAreaStyles: { minWidth: '200px', maxWidth: '450px' },\n            resize: \"both\" }),\n\n\n          description: (v, onChange, label) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(StackedField, {\n            label: label,\n            formElement: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], { value: v, onChange: onChange }) }),\n\n\n          d3format: (v, onChange, label) =>\n          (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(StackedField, {\n            label: label,\n            formElement: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_explore_components_controls_TextControl__WEBPACK_IMPORTED_MODULE_22__[\"default\"], { value: v, onChange: onChange }) }) },\n\n\n\n        allowDeletes: true,\n        stickyHeader: true }));\n\n\n  }\n\n  render() {\n    const { datasource, activeTabKey } = this.state;\n    const { metrics } = datasource;\n    const sortedMetrics = metrics != null && metrics.length ? this.sortMetrics(metrics) : [];\n    const { theme } = this.props;\n\n    return (\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(DatasourceContainer, null,\n      this.renderErrors(),\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Alert__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n        css: (theme) => ({ marginBottom: theme.gridUnit * 4 }),\n        type: \"warning\",\n        message:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, null,\n        ' ',\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"strong\", null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Be careful.'), \" \"),\n        (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)(\n        'Changing these settings will affect all charts using this dataset, including charts owned by other people.')) }),\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(StyledTableTabs, {\n        fullWidth: false,\n        id: \"table-tabs\",\n        \"data-test\": \"edit-dataset-tabs\",\n        onChange: this.handleTabSelect,\n        defaultActiveKey: activeTabKey },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_12__[\"default\"].TabPane, { key: 0, tab: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Source') },\n      this.renderSourceFieldset(theme)),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_12__[\"default\"].TabPane, {\n        tab:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(CollectionTabTitle, {\n          collection: sortedMetrics,\n          title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Metrics') }),\n\n\n        key: 1 },\n\n      this.renderMetricCollection()),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_12__[\"default\"].TabPane, {\n        tab:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(CollectionTabTitle, {\n          collection: this.state.databaseColumns,\n          title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Columns') }),\n\n\n        key: 2 },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(StyledColumnsTabWrapper, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(ColumnButtonWrapper, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(StyledButtonWrapper, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n        buttonSize: \"small\",\n        buttonStyle: \"tertiary\",\n        onClick: this.syncMetadata,\n        className: \"sync-from-source\",\n        disabled: this.state.isEditMode },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(\"i\", { className: \"fa fa-database\" }), ' ',\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Sync columns from source')))),\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(ColumnCollectionTable, {\n        className: \"columns-table\",\n        columns: this.state.databaseColumns,\n        datasource: datasource,\n        onColumnsChange: (databaseColumns) =>\n        this.setColumns({ databaseColumns }),\n\n        onDatasourceChange: this.onDatasourceChange }),\n\n      this.state.metadataLoading && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Loading__WEBPACK_IMPORTED_MODULE_17__[\"default\"], null))),\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_12__[\"default\"].TabPane, {\n        tab:\n        (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(CollectionTabTitle, {\n          collection: this.state.calculatedColumns,\n          title: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Calculated columns') }),\n\n\n        key: 3 },\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(StyledColumnsTabWrapper, null,\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(ColumnCollectionTable, {\n        columns: this.state.calculatedColumns,\n        onColumnsChange: (calculatedColumns) =>\n        this.setColumns({ calculatedColumns }),\n\n        onDatasourceChange: this.onDatasourceChange,\n        datasource: datasource,\n        editableColumnName: true,\n        showExpression: true,\n        allowAddItem: true,\n        allowEditDataType: true,\n        itemGenerator: () => ({\n          column_name: '<new column>',\n          filterable: true,\n          groupby: true,\n          expression: '<enter SQL expression here>',\n          __expanded: true }) }))),\n\n\n\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components_Tabs__WEBPACK_IMPORTED_MODULE_12__[\"default\"].TabPane, { key: 4, tab: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_33__.t)('Settings') },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_9__.Row, { gutter: 16 },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_9__.Col, { xs: 24, md: 12 },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(FormContainer, null, this.renderSettingsFieldset())),\n\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_9__.Col, { xs: 24, md: 12 },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_32__.jsx)(FormContainer, null, this.renderAdvancedFieldset())))))));\n\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nDatasourceEditor.defaultProps = defaultProps;\nDatasourceEditor.propTypes = propTypes;\n\nconst DataSourceComponent = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_35__.b)(DatasourceEditor);const _default =\n\n(0,src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_25__[\"default\"])(DataSourceComponent);/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatasourceContainer, \"DatasourceContainer\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(FlexRowContainer, \"FlexRowContainer\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(StyledTableTabs, \"StyledTableTabs\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(StyledBadge, \"StyledBadge\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(EditLockContainer, \"EditLockContainer\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(ColumnButtonWrapper, \"ColumnButtonWrapper\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(StyledLabelWrapper, \"StyledLabelWrapper\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(StyledColumnsTabWrapper, \"StyledColumnsTabWrapper\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(StyledButtonWrapper, \"StyledButtonWrapper\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(checkboxGenerator, \"checkboxGenerator\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(DATA_TYPES, \"DATA_TYPES\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(DATASOURCE_TYPES_ARR, \"DATASOURCE_TYPES_ARR\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(DATASOURCE_TYPES, \"DATASOURCE_TYPES\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(CollectionTabTitle, \"CollectionTabTitle\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(ColumnCollectionTable, \"ColumnCollectionTable\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(StackedField, \"StackedField\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(FormContainer, \"FormContainer\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(OwnersSelector, \"OwnersSelector\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(DatasourceEditor, \"DatasourceEditor\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(DataSourceComponent, \"DataSourceComponent\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/Datasource/DatasourceEditor.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Datasource/DatasourceEditor.jsx\n");

/***/ }),

/***/ "./src/components/Datasource/utils.js":
/*!********************************************!*\
  !*** ./src/components/Datasource/utils.js ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"recurseReactClone\": () => (/* binding */ recurseReactClone)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements.  See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership.  The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License.  You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\n\n\nfunction recurseReactClone(children, type, propExtender) {\n  /**\r\n   * Clones a React component's children, and injects new props\r\n   * where the type specified is matched.\r\n   */\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (child) => {\n    let newChild = child;\n    if (child && child.type.name === type.name) {\n      newChild = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, propExtender(child));\n    }\n    if (newChild && newChild.props.children) {\n      newChild = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(newChild, {\n        children: recurseReactClone(\n        newChild.props.children,\n        type,\n        propExtender) });\n\n\n    }\n    return newChild;\n  });\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(recurseReactClone, \"recurseReactClone\", \"/app/superset-frontend/src/components/Datasource/utils.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9EYXRhc291cmNlL3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9zcmMvY29tcG9uZW50cy9EYXRhc291cmNlL3V0aWxzLmpzPzAyZmUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcclxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXHJcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXHJcbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcclxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxyXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcclxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXHJcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXHJcbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXHJcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxyXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXHJcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByZWN1cnNlUmVhY3RDbG9uZShjaGlsZHJlbiwgdHlwZSwgcHJvcEV4dGVuZGVyKSB7XHJcbiAgLyoqXHJcbiAgICogQ2xvbmVzIGEgUmVhY3QgY29tcG9uZW50J3MgY2hpbGRyZW4sIGFuZCBpbmplY3RzIG5ldyBwcm9wc1xyXG4gICAqIHdoZXJlIHRoZSB0eXBlIHNwZWNpZmllZCBpcyBtYXRjaGVkLlxyXG4gICAqL1xyXG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5tYXAoY2hpbGRyZW4sIGNoaWxkID0+IHtcclxuICAgIGxldCBuZXdDaGlsZCA9IGNoaWxkO1xyXG4gICAgaWYgKGNoaWxkICYmIGNoaWxkLnR5cGUubmFtZSA9PT0gdHlwZS5uYW1lKSB7XHJcbiAgICAgIG5ld0NoaWxkID0gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCBwcm9wRXh0ZW5kZXIoY2hpbGQpKTtcclxuICAgIH1cclxuICAgIGlmIChuZXdDaGlsZCAmJiBuZXdDaGlsZC5wcm9wcy5jaGlsZHJlbikge1xyXG4gICAgICBuZXdDaGlsZCA9IFJlYWN0LmNsb25lRWxlbWVudChuZXdDaGlsZCwge1xyXG4gICAgICAgIGNoaWxkcmVuOiByZWN1cnNlUmVhY3RDbG9uZShcclxuICAgICAgICAgIG5ld0NoaWxkLnByb3BzLmNoaWxkcmVuLFxyXG4gICAgICAgICAgdHlwZSxcclxuICAgICAgICAgIHByb3BFeHRlbmRlcixcclxuICAgICAgICApLFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIHJldHVybiBuZXdDaGlsZDtcclxuICB9KTtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Datasource/utils.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/focusManager.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-query/es/core/focusManager.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"focusManager\": () => (/* binding */ focusManager)\n/* harmony export */ });\n/* unused harmony export FocusManager */\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var _subscribable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./subscribable */ \"./node_modules/react-query/es/core/subscribable.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/react-query/es/core/utils.js\");\n\n\n\nvar FocusManager = /*#__PURE__*/function (_Subscribable) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(FocusManager, _Subscribable);\n\n  function FocusManager() {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n\n    _this.setup = function (onFocus) {\n      var _window;\n\n      if (!_utils__WEBPACK_IMPORTED_MODULE_1__.isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {\n        var listener = function listener() {\n          return onFocus();\n        }; // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return function () {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = FocusManager.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  };\n\n  _proto.setEventListener = function setEventListener(setup) {\n    var _this$cleanup2,\n        _this2 = this;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(function (focused) {\n      if (typeof focused === 'boolean') {\n        _this2.setFocused(focused);\n      } else {\n        _this2.onFocus();\n      }\n    });\n  };\n\n  _proto.setFocused = function setFocused(focused) {\n    this.focused = focused;\n\n    if (focused) {\n      this.onFocus();\n    }\n  };\n\n  _proto.onFocus = function onFocus() {\n    this.listeners.forEach(function (listener) {\n      listener();\n    });\n  };\n\n  _proto.isFocused = function isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  };\n\n  return FocusManager;\n}(_subscribable__WEBPACK_IMPORTED_MODULE_2__.Subscribable);\nvar focusManager = new FocusManager();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9mb2N1c01hbmFnZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9yZWFjdC1xdWVyeS9lcy9jb3JlL2ZvY3VzTWFuYWdlci5qcz82MzJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZVwiO1xuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSAnLi9zdWJzY3JpYmFibGUnO1xuaW1wb3J0IHsgaXNTZXJ2ZXIgfSBmcm9tICcuL3V0aWxzJztcbmV4cG9ydCB2YXIgRm9jdXNNYW5hZ2VyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfU3Vic2NyaWJhYmxlKSB7XG4gIF9pbmhlcml0c0xvb3NlKEZvY3VzTWFuYWdlciwgX1N1YnNjcmliYWJsZSk7XG5cbiAgZnVuY3Rpb24gRm9jdXNNYW5hZ2VyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1N1YnNjcmliYWJsZS5jYWxsKHRoaXMpIHx8IHRoaXM7XG5cbiAgICBfdGhpcy5zZXR1cCA9IGZ1bmN0aW9uIChvbkZvY3VzKSB7XG4gICAgICB2YXIgX3dpbmRvdztcblxuICAgICAgaWYgKCFpc1NlcnZlciAmJiAoKF93aW5kb3cgPSB3aW5kb3cpID09IG51bGwgPyB2b2lkIDAgOiBfd2luZG93LmFkZEV2ZW50TGlzdGVuZXIpKSB7XG4gICAgICAgIHZhciBsaXN0ZW5lciA9IGZ1bmN0aW9uIGxpc3RlbmVyKCkge1xuICAgICAgICAgIHJldHVybiBvbkZvY3VzKCk7XG4gICAgICAgIH07IC8vIExpc3RlbiB0byB2aXNpYmlsbGl0eWNoYW5nZSBhbmQgZm9jdXNcblxuXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAvLyBCZSBzdXJlIHRvIHVuc3Vic2NyaWJlIGlmIGEgbmV3IGhhbmRsZXIgaXMgc2V0XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCBsaXN0ZW5lcik7XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgbGlzdGVuZXIpO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gRm9jdXNNYW5hZ2VyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ub25TdWJzY3JpYmUgPSBmdW5jdGlvbiBvblN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuY2xlYW51cCkge1xuICAgICAgdGhpcy5zZXRFdmVudExpc3RlbmVyKHRoaXMuc2V0dXApO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8ub25VbnN1YnNjcmliZSA9IGZ1bmN0aW9uIG9uVW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLmhhc0xpc3RlbmVycygpKSB7XG4gICAgICB2YXIgX3RoaXMkY2xlYW51cDtcblxuICAgICAgKF90aGlzJGNsZWFudXAgPSB0aGlzLmNsZWFudXApID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRjbGVhbnVwLmNhbGwodGhpcyk7XG4gICAgICB0aGlzLmNsZWFudXAgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5zZXRFdmVudExpc3RlbmVyID0gZnVuY3Rpb24gc2V0RXZlbnRMaXN0ZW5lcihzZXR1cCkge1xuICAgIHZhciBfdGhpcyRjbGVhbnVwMixcbiAgICAgICAgX3RoaXMyID0gdGhpcztcblxuICAgIHRoaXMuc2V0dXAgPSBzZXR1cDtcbiAgICAoX3RoaXMkY2xlYW51cDIgPSB0aGlzLmNsZWFudXApID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRjbGVhbnVwMi5jYWxsKHRoaXMpO1xuICAgIHRoaXMuY2xlYW51cCA9IHNldHVwKGZ1bmN0aW9uIChmb2N1c2VkKSB7XG4gICAgICBpZiAodHlwZW9mIGZvY3VzZWQgPT09ICdib29sZWFuJykge1xuICAgICAgICBfdGhpczIuc2V0Rm9jdXNlZChmb2N1c2VkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF90aGlzMi5vbkZvY3VzKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLnNldEZvY3VzZWQgPSBmdW5jdGlvbiBzZXRGb2N1c2VkKGZvY3VzZWQpIHtcbiAgICB0aGlzLmZvY3VzZWQgPSBmb2N1c2VkO1xuXG4gICAgaWYgKGZvY3VzZWQpIHtcbiAgICAgIHRoaXMub25Gb2N1cygpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8ub25Gb2N1cyA9IGZ1bmN0aW9uIG9uRm9jdXMoKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgIGxpc3RlbmVyKCk7XG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLmlzRm9jdXNlZCA9IGZ1bmN0aW9uIGlzRm9jdXNlZCgpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMuZm9jdXNlZCA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb2N1c2VkO1xuICAgIH0gLy8gZG9jdW1lbnQgZ2xvYmFsIGNhbiBiZSB1bmF2YWlsYWJsZSBpbiByZWFjdCBuYXRpdmVcblxuXG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBbdW5kZWZpbmVkLCAndmlzaWJsZScsICdwcmVyZW5kZXInXS5pbmNsdWRlcyhkb2N1bWVudC52aXNpYmlsaXR5U3RhdGUpO1xuICB9O1xuXG4gIHJldHVybiBGb2N1c01hbmFnZXI7XG59KFN1YnNjcmliYWJsZSk7XG5leHBvcnQgdmFyIGZvY3VzTWFuYWdlciA9IG5ldyBGb2N1c01hbmFnZXIoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/focusManager.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/index.js":
/*!***************************************************!*\
  !*** ./node_modules/react-query/es/core/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"QueryClient\": () => (/* reexport safe */ _queryClient__WEBPACK_IMPORTED_MODULE_0__.QueryClient)\n/* harmony export */ });\n/* harmony import */ var _queryClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryClient */ \"./node_modules/react-query/es/core/queryClient.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ \"./node_modules/react-query/es/core/types.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony reexport (checked) */ if(__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_1__, \"QueryClientProvider\")) __webpack_require__.d(__webpack_exports__, { \"QueryClientProvider\": function() { return _types__WEBPACK_IMPORTED_MODULE_1__.QueryClientProvider; } });\n/* harmony reexport (checked) */ if(__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_1__, \"useQuery\")) __webpack_require__.d(__webpack_exports__, { \"useQuery\": function() { return _types__WEBPACK_IMPORTED_MODULE_1__.useQuery; } });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // Types\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9pbmRleC5qcz8wYjg1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IENhbmNlbGxlZEVycm9yIH0gZnJvbSAnLi9yZXRyeWVyJztcbmV4cG9ydCB7IFF1ZXJ5Q2FjaGUgfSBmcm9tICcuL3F1ZXJ5Q2FjaGUnO1xuZXhwb3J0IHsgUXVlcnlDbGllbnQgfSBmcm9tICcuL3F1ZXJ5Q2xpZW50JztcbmV4cG9ydCB7IFF1ZXJ5T2JzZXJ2ZXIgfSBmcm9tICcuL3F1ZXJ5T2JzZXJ2ZXInO1xuZXhwb3J0IHsgUXVlcmllc09ic2VydmVyIH0gZnJvbSAnLi9xdWVyaWVzT2JzZXJ2ZXInO1xuZXhwb3J0IHsgSW5maW5pdGVRdWVyeU9ic2VydmVyIH0gZnJvbSAnLi9pbmZpbml0ZVF1ZXJ5T2JzZXJ2ZXInO1xuZXhwb3J0IHsgTXV0YXRpb25DYWNoZSB9IGZyb20gJy4vbXV0YXRpb25DYWNoZSc7XG5leHBvcnQgeyBNdXRhdGlvbk9ic2VydmVyIH0gZnJvbSAnLi9tdXRhdGlvbk9ic2VydmVyJztcbmV4cG9ydCB7IHNldExvZ2dlciB9IGZyb20gJy4vbG9nZ2VyJztcbmV4cG9ydCB7IG5vdGlmeU1hbmFnZXIgfSBmcm9tICcuL25vdGlmeU1hbmFnZXInO1xuZXhwb3J0IHsgZm9jdXNNYW5hZ2VyIH0gZnJvbSAnLi9mb2N1c01hbmFnZXInO1xuZXhwb3J0IHsgb25saW5lTWFuYWdlciB9IGZyb20gJy4vb25saW5lTWFuYWdlcic7XG5leHBvcnQgeyBoYXNoUXVlcnlLZXksIGlzRXJyb3IgfSBmcm9tICcuL3V0aWxzJztcbmV4cG9ydCB7IGlzQ2FuY2VsbGVkRXJyb3IgfSBmcm9tICcuL3JldHJ5ZXInO1xuZXhwb3J0IHsgZGVoeWRyYXRlLCBoeWRyYXRlIH0gZnJvbSAnLi9oeWRyYXRpb24nOyAvLyBUeXBlc1xuXG5leHBvcnQgKiBmcm9tICcuL3R5cGVzJzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/index.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/infiniteQueryBehavior.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-query/es/core/infiniteQueryBehavior.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"infiniteQueryBehavior\": () => (/* binding */ infiniteQueryBehavior)\n/* harmony export */ });\n/* unused harmony exports getNextPageParam, getPreviousPageParam, hasNextPage, hasPreviousPage */\n/* harmony import */ var _retryer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryer */ \"./node_modules/react-query/es/core/retryer.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/react-query/es/core/utils.js\");\n\n\nfunction infiniteQueryBehavior() {\n  return {\n    onFetch: function onFetch(context) {\n      context.fetchFn = function () {\n        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;\n\n        var refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;\n        var fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;\n        var pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        var isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        var isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        var oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        var oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        var abortController = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getAbortController)();\n        var abortSignal = abortController == null ? void 0 : abortController.signal;\n        var newPageParams = oldPageParams;\n        var cancelled = false; // Get query function\n\n        var queryFn = context.options.queryFn || function () {\n          return Promise.reject('Missing queryFn');\n        };\n\n        var buildNewPages = function buildNewPages(pages, param, page, previous) {\n          newPageParams = previous ? [param].concat(newPageParams) : [].concat(newPageParams, [param]);\n          return previous ? [page].concat(pages) : [].concat(pages, [page]);\n        }; // Create function to fetch a page\n\n\n        var fetchPage = function fetchPage(pages, manual, param, previous) {\n          if (cancelled) {\n            return Promise.reject('Cancelled');\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n\n          var queryFnContext = {\n            queryKey: context.queryKey,\n            signal: abortSignal,\n            pageParam: param,\n            meta: context.meta\n          };\n          var queryFnResult = queryFn(queryFnContext);\n          var promise = Promise.resolve(queryFnResult).then(function (page) {\n            return buildNewPages(pages, param, page, previous);\n          });\n\n          if ((0,_retryer__WEBPACK_IMPORTED_MODULE_1__.isCancelable)(queryFnResult)) {\n            var promiseAsAny = promise;\n            promiseAsAny.cancel = queryFnResult.cancel;\n          }\n\n          return promise;\n        };\n\n        var promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n            var manual = typeof pageParam !== 'undefined';\n            var param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n            promise = fetchPage(oldPages, manual, param);\n          } // Fetch previous page?\n          else if (isFetchingPreviousPage) {\n              var _manual = typeof pageParam !== 'undefined';\n\n              var _param = _manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n\n              promise = fetchPage(oldPages, _manual, _param, true);\n            } // Refetch pages\n            else {\n                (function () {\n                  newPageParams = [];\n                  var manual = typeof context.options.getNextPageParam === 'undefined';\n                  var shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page\n\n                  promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages\n\n                  var _loop = function _loop(i) {\n                    promise = promise.then(function (pages) {\n                      var shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;\n\n                      if (shouldFetchNextPage) {\n                        var _param2 = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n\n                        return fetchPage(pages, manual, _param2);\n                      }\n\n                      return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));\n                    });\n                  };\n\n                  for (var i = 1; i < oldPages.length; i++) {\n                    _loop(i);\n                  }\n                })();\n              }\n\n        var finalPromise = promise.then(function (pages) {\n          return {\n            pages: pages,\n            pageParams: newPageParams\n          };\n        });\n        var finalPromiseAsAny = finalPromise;\n\n        finalPromiseAsAny.cancel = function () {\n          cancelled = true;\n          abortController == null ? void 0 : abortController.abort();\n\n          if ((0,_retryer__WEBPACK_IMPORTED_MODULE_1__.isCancelable)(promise)) {\n            promise.cancel();\n          }\n        };\n\n        return finalPromise;\n      };\n    }\n  };\n}\nfunction getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nfunction getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    var nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    var previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/infiniteQueryBehavior.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/logger.js":
/*!****************************************************!*\
  !*** ./node_modules/react-query/es/core/logger.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getLogger\": () => (/* binding */ getLogger),\n/* harmony export */   \"setLogger\": () => (/* binding */ setLogger)\n/* harmony export */ });\n// TYPES\n// FUNCTIONS\nvar logger = console;\nfunction getLogger() {\n  return logger;\n}\nfunction setLogger(newLogger) {\n  logger = newLogger;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9sb2dnZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LXF1ZXJ5L2VzL2NvcmUvbG9nZ2VyLmpzPzFiY2YiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVFlQRVNcbi8vIEZVTkNUSU9OU1xudmFyIGxvZ2dlciA9IGNvbnNvbGU7XG5leHBvcnQgZnVuY3Rpb24gZ2V0TG9nZ2VyKCkge1xuICByZXR1cm4gbG9nZ2VyO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNldExvZ2dlcihuZXdMb2dnZXIpIHtcbiAgbG9nZ2VyID0gbmV3TG9nZ2VyO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/logger.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/mutation.js":
/*!******************************************************!*\
  !*** ./node_modules/react-query/es/core/mutation.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Mutation\": () => (/* binding */ Mutation)\n/* harmony export */ });\n/* unused harmony export getDefaultState */\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger */ \"./node_modules/react-query/es/core/logger.js\");\n/* harmony import */ var _notifyManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./notifyManager */ \"./node_modules/react-query/es/core/notifyManager.js\");\n/* harmony import */ var _retryer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./retryer */ \"./node_modules/react-query/es/core/retryer.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/react-query/es/core/utils.js\");\n\n\n\n\n // TYPES\n\n// CLASS\nvar Mutation = /*#__PURE__*/function () {\n  function Mutation(config) {\n    this.options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, config.defaultOptions, config.options);\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.observers = [];\n    this.state = config.state || getDefaultState();\n    this.meta = config.meta;\n  }\n\n  var _proto = Mutation.prototype;\n\n  _proto.setState = function setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state: state\n    });\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer);\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    this.observers = this.observers.filter(function (x) {\n      return x !== observer;\n    });\n  };\n\n  _proto.cancel = function cancel() {\n    if (this.retryer) {\n      this.retryer.cancel();\n      return this.retryer.promise.then(_utils__WEBPACK_IMPORTED_MODULE_1__.noop).catch(_utils__WEBPACK_IMPORTED_MODULE_1__.noop);\n    }\n\n    return Promise.resolve();\n  };\n\n  _proto.continue = function _continue() {\n    if (this.retryer) {\n      this.retryer.continue();\n      return this.retryer.promise;\n    }\n\n    return this.execute();\n  };\n\n  _proto.execute = function execute() {\n    var _this = this;\n\n    var data;\n    var restored = this.state.status === 'loading';\n    var promise = Promise.resolve();\n\n    if (!restored) {\n      this.dispatch({\n        type: 'loading',\n        variables: this.options.variables\n      });\n      promise = promise.then(function () {\n        // Notify cache callback\n        _this.mutationCache.config.onMutate == null ? void 0 : _this.mutationCache.config.onMutate(_this.state.variables, _this);\n      }).then(function () {\n        return _this.options.onMutate == null ? void 0 : _this.options.onMutate(_this.state.variables);\n      }).then(function (context) {\n        if (context !== _this.state.context) {\n          _this.dispatch({\n            type: 'loading',\n            context: context,\n            variables: _this.state.variables\n          });\n        }\n      });\n    }\n\n    return promise.then(function () {\n      return _this.executeMutation();\n    }).then(function (result) {\n      data = result; // Notify cache callback\n\n      _this.mutationCache.config.onSuccess == null ? void 0 : _this.mutationCache.config.onSuccess(data, _this.state.variables, _this.state.context, _this);\n    }).then(function () {\n      return _this.options.onSuccess == null ? void 0 : _this.options.onSuccess(data, _this.state.variables, _this.state.context);\n    }).then(function () {\n      return _this.options.onSettled == null ? void 0 : _this.options.onSettled(data, null, _this.state.variables, _this.state.context);\n    }).then(function () {\n      _this.dispatch({\n        type: 'success',\n        data: data\n      });\n\n      return data;\n    }).catch(function (error) {\n      // Notify cache callback\n      _this.mutationCache.config.onError == null ? void 0 : _this.mutationCache.config.onError(error, _this.state.variables, _this.state.context, _this); // Log error\n\n      (0,_logger__WEBPACK_IMPORTED_MODULE_2__.getLogger)().error(error);\n      return Promise.resolve().then(function () {\n        return _this.options.onError == null ? void 0 : _this.options.onError(error, _this.state.variables, _this.state.context);\n      }).then(function () {\n        return _this.options.onSettled == null ? void 0 : _this.options.onSettled(undefined, error, _this.state.variables, _this.state.context);\n      }).then(function () {\n        _this.dispatch({\n          type: 'error',\n          error: error\n        });\n\n        throw error;\n      });\n    });\n  };\n\n  _proto.executeMutation = function executeMutation() {\n    var _this2 = this,\n        _this$options$retry;\n\n    this.retryer = new _retryer__WEBPACK_IMPORTED_MODULE_3__.Retryer({\n      fn: function fn() {\n        if (!_this2.options.mutationFn) {\n          return Promise.reject('No mutationFn found');\n        }\n\n        return _this2.options.mutationFn(_this2.state.variables);\n      },\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n      retryDelay: this.options.retryDelay\n    });\n    return this.retryer.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = reducer(this.state, action);\n    _notifyManager__WEBPACK_IMPORTED_MODULE_4__.notifyManager.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onMutationUpdate(action);\n      });\n\n      _this3.mutationCache.notify(_this3);\n    });\n  };\n\n  return Mutation;\n}();\nfunction getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'failed':\n      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, {\n        failureCount: state.failureCount + 1\n      });\n\n    case 'pause':\n      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, {\n        isPaused: true\n      });\n\n    case 'continue':\n      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, {\n        isPaused: false\n      });\n\n    case 'loading':\n      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, {\n        context: action.context,\n        data: undefined,\n        error: null,\n        isPaused: false,\n        status: 'loading',\n        variables: action.variables\n      });\n\n    case 'success':\n      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, {\n        data: action.data,\n        error: null,\n        status: 'success',\n        isPaused: false\n      });\n\n    case 'error':\n      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, {\n        data: undefined,\n        error: action.error,\n        failureCount: state.failureCount + 1,\n        isPaused: false,\n        status: 'error'\n      });\n\n    case 'setState':\n      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, action.state);\n\n    default:\n      return state;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/mutation.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/mutationCache.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-query/es/core/mutationCache.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MutationCache\": () => (/* binding */ MutationCache)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var _notifyManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager */ \"./node_modules/react-query/es/core/notifyManager.js\");\n/* harmony import */ var _mutation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutation */ \"./node_modules/react-query/es/core/mutation.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./node_modules/react-query/es/core/utils.js\");\n/* harmony import */ var _subscribable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./subscribable */ \"./node_modules/react-query/es/core/subscribable.js\");\n\n\n\n\n // TYPES\n\n// CLASS\nvar MutationCache = /*#__PURE__*/function (_Subscribable) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(MutationCache, _Subscribable);\n\n  function MutationCache(config) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.config = config || {};\n    _this.mutations = [];\n    _this.mutationId = 0;\n    return _this;\n  }\n\n  var _proto = MutationCache.prototype;\n\n  _proto.build = function build(client, options, state) {\n    var mutation = new _mutation__WEBPACK_IMPORTED_MODULE_1__.Mutation({\n      mutationCache: this,\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state: state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined,\n      meta: options.meta\n    });\n    this.add(mutation);\n    return mutation;\n  };\n\n  _proto.add = function add(mutation) {\n    this.mutations.push(mutation);\n    this.notify(mutation);\n  };\n\n  _proto.remove = function remove(mutation) {\n    this.mutations = this.mutations.filter(function (x) {\n      return x !== mutation;\n    });\n    mutation.cancel();\n    this.notify(mutation);\n  };\n\n  _proto.clear = function clear() {\n    var _this2 = this;\n\n    _notifyManager__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(function () {\n      _this2.mutations.forEach(function (mutation) {\n        _this2.remove(mutation);\n      });\n    });\n  };\n\n  _proto.getAll = function getAll() {\n    return this.mutations;\n  };\n\n  _proto.find = function find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(function (mutation) {\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(filters, mutation);\n    });\n  };\n\n  _proto.findAll = function findAll(filters) {\n    return this.mutations.filter(function (mutation) {\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(filters, mutation);\n    });\n  };\n\n  _proto.notify = function notify(mutation) {\n    var _this3 = this;\n\n    _notifyManager__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(function () {\n      _this3.listeners.forEach(function (listener) {\n        listener(mutation);\n      });\n    });\n  };\n\n  _proto.onFocus = function onFocus() {\n    this.resumePausedMutations();\n  };\n\n  _proto.onOnline = function onOnline() {\n    this.resumePausedMutations();\n  };\n\n  _proto.resumePausedMutations = function resumePausedMutations() {\n    var pausedMutations = this.mutations.filter(function (x) {\n      return x.state.isPaused;\n    });\n    return _notifyManager__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(function () {\n      return pausedMutations.reduce(function (promise, mutation) {\n        return promise.then(function () {\n          return mutation.continue().catch(_utils__WEBPACK_IMPORTED_MODULE_3__.noop);\n        });\n      }, Promise.resolve());\n    });\n  };\n\n  return MutationCache;\n}(_subscribable__WEBPACK_IMPORTED_MODULE_4__.Subscribable);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9tdXRhdGlvbkNhY2hlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9tdXRhdGlvbkNhY2hlLmpzPzk4YTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlXCI7XG5pbXBvcnQgeyBub3RpZnlNYW5hZ2VyIH0gZnJvbSAnLi9ub3RpZnlNYW5hZ2VyJztcbmltcG9ydCB7IE11dGF0aW9uIH0gZnJvbSAnLi9tdXRhdGlvbic7XG5pbXBvcnQgeyBtYXRjaE11dGF0aW9uLCBub29wIH0gZnJvbSAnLi91dGlscyc7XG5pbXBvcnQgeyBTdWJzY3JpYmFibGUgfSBmcm9tICcuL3N1YnNjcmliYWJsZSc7IC8vIFRZUEVTXG5cbi8vIENMQVNTXG5leHBvcnQgdmFyIE11dGF0aW9uQ2FjaGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9TdWJzY3JpYmFibGUpIHtcbiAgX2luaGVyaXRzTG9vc2UoTXV0YXRpb25DYWNoZSwgX1N1YnNjcmliYWJsZSk7XG5cbiAgZnVuY3Rpb24gTXV0YXRpb25DYWNoZShjb25maWcpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9TdWJzY3JpYmFibGUuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgIF90aGlzLmNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgICBfdGhpcy5tdXRhdGlvbnMgPSBbXTtcbiAgICBfdGhpcy5tdXRhdGlvbklkID0gMDtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gTXV0YXRpb25DYWNoZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmJ1aWxkID0gZnVuY3Rpb24gYnVpbGQoY2xpZW50LCBvcHRpb25zLCBzdGF0ZSkge1xuICAgIHZhciBtdXRhdGlvbiA9IG5ldyBNdXRhdGlvbih7XG4gICAgICBtdXRhdGlvbkNhY2hlOiB0aGlzLFxuICAgICAgbXV0YXRpb25JZDogKyt0aGlzLm11dGF0aW9uSWQsXG4gICAgICBvcHRpb25zOiBjbGllbnQuZGVmYXVsdE11dGF0aW9uT3B0aW9ucyhvcHRpb25zKSxcbiAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgIGRlZmF1bHRPcHRpb25zOiBvcHRpb25zLm11dGF0aW9uS2V5ID8gY2xpZW50LmdldE11dGF0aW9uRGVmYXVsdHMob3B0aW9ucy5tdXRhdGlvbktleSkgOiB1bmRlZmluZWQsXG4gICAgICBtZXRhOiBvcHRpb25zLm1ldGFcbiAgICB9KTtcbiAgICB0aGlzLmFkZChtdXRhdGlvbik7XG4gICAgcmV0dXJuIG11dGF0aW9uO1xuICB9O1xuXG4gIF9wcm90by5hZGQgPSBmdW5jdGlvbiBhZGQobXV0YXRpb24pIHtcbiAgICB0aGlzLm11dGF0aW9ucy5wdXNoKG11dGF0aW9uKTtcbiAgICB0aGlzLm5vdGlmeShtdXRhdGlvbik7XG4gIH07XG5cbiAgX3Byb3RvLnJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZShtdXRhdGlvbikge1xuICAgIHRoaXMubXV0YXRpb25zID0gdGhpcy5tdXRhdGlvbnMuZmlsdGVyKGZ1bmN0aW9uICh4KSB7XG4gICAgICByZXR1cm4geCAhPT0gbXV0YXRpb247XG4gICAgfSk7XG4gICAgbXV0YXRpb24uY2FuY2VsKCk7XG4gICAgdGhpcy5ub3RpZnkobXV0YXRpb24pO1xuICB9O1xuXG4gIF9wcm90by5jbGVhciA9IGZ1bmN0aW9uIGNsZWFyKCkge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaChmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpczIubXV0YXRpb25zLmZvckVhY2goZnVuY3Rpb24gKG11dGF0aW9uKSB7XG4gICAgICAgIF90aGlzMi5yZW1vdmUobXV0YXRpb24pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLmdldEFsbCA9IGZ1bmN0aW9uIGdldEFsbCgpIHtcbiAgICByZXR1cm4gdGhpcy5tdXRhdGlvbnM7XG4gIH07XG5cbiAgX3Byb3RvLmZpbmQgPSBmdW5jdGlvbiBmaW5kKGZpbHRlcnMpIHtcbiAgICBpZiAodHlwZW9mIGZpbHRlcnMuZXhhY3QgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBmaWx0ZXJzLmV4YWN0ID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5tdXRhdGlvbnMuZmluZChmdW5jdGlvbiAobXV0YXRpb24pIHtcbiAgICAgIHJldHVybiBtYXRjaE11dGF0aW9uKGZpbHRlcnMsIG11dGF0aW9uKTtcbiAgICB9KTtcbiAgfTtcblxuICBfcHJvdG8uZmluZEFsbCA9IGZ1bmN0aW9uIGZpbmRBbGwoZmlsdGVycykge1xuICAgIHJldHVybiB0aGlzLm11dGF0aW9ucy5maWx0ZXIoZnVuY3Rpb24gKG11dGF0aW9uKSB7XG4gICAgICByZXR1cm4gbWF0Y2hNdXRhdGlvbihmaWx0ZXJzLCBtdXRhdGlvbik7XG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLm5vdGlmeSA9IGZ1bmN0aW9uIG5vdGlmeShtdXRhdGlvbikge1xuICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaChmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpczMubGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICAgIGxpc3RlbmVyKG11dGF0aW9uKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIF9wcm90by5vbkZvY3VzID0gZnVuY3Rpb24gb25Gb2N1cygpIHtcbiAgICB0aGlzLnJlc3VtZVBhdXNlZE11dGF0aW9ucygpO1xuICB9O1xuXG4gIF9wcm90by5vbk9ubGluZSA9IGZ1bmN0aW9uIG9uT25saW5lKCkge1xuICAgIHRoaXMucmVzdW1lUGF1c2VkTXV0YXRpb25zKCk7XG4gIH07XG5cbiAgX3Byb3RvLnJlc3VtZVBhdXNlZE11dGF0aW9ucyA9IGZ1bmN0aW9uIHJlc3VtZVBhdXNlZE11dGF0aW9ucygpIHtcbiAgICB2YXIgcGF1c2VkTXV0YXRpb25zID0gdGhpcy5tdXRhdGlvbnMuZmlsdGVyKGZ1bmN0aW9uICh4KSB7XG4gICAgICByZXR1cm4geC5zdGF0ZS5pc1BhdXNlZDtcbiAgICB9KTtcbiAgICByZXR1cm4gbm90aWZ5TWFuYWdlci5iYXRjaChmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gcGF1c2VkTXV0YXRpb25zLnJlZHVjZShmdW5jdGlvbiAocHJvbWlzZSwgbXV0YXRpb24pIHtcbiAgICAgICAgcmV0dXJuIHByb21pc2UudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIG11dGF0aW9uLmNvbnRpbnVlKCkuY2F0Y2gobm9vcCk7XG4gICAgICAgIH0pO1xuICAgICAgfSwgUHJvbWlzZS5yZXNvbHZlKCkpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBNdXRhdGlvbkNhY2hlO1xufShTdWJzY3JpYmFibGUpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/mutationCache.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/notifyManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-query/es/core/notifyManager.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"notifyManager\": () => (/* binding */ notifyManager)\n/* harmony export */ });\n/* unused harmony export NotifyManager */\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/react-query/es/core/utils.js\");\n // TYPES\n\n// CLASS\nvar NotifyManager = /*#__PURE__*/function () {\n  function NotifyManager() {\n    this.queue = [];\n    this.transactions = 0;\n\n    this.notifyFn = function (callback) {\n      callback();\n    };\n\n    this.batchNotifyFn = function (callback) {\n      callback();\n    };\n  }\n\n  var _proto = NotifyManager.prototype;\n\n  _proto.batch = function batch(callback) {\n    var result;\n    this.transactions++;\n\n    try {\n      result = callback();\n    } finally {\n      this.transactions--;\n\n      if (!this.transactions) {\n        this.flush();\n      }\n    }\n\n    return result;\n  };\n\n  _proto.schedule = function schedule(callback) {\n    var _this = this;\n\n    if (this.transactions) {\n      this.queue.push(callback);\n    } else {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_0__.scheduleMicrotask)(function () {\n        _this.notifyFn(callback);\n      });\n    }\n  }\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n  ;\n\n  _proto.batchCalls = function batchCalls(callback) {\n    var _this2 = this;\n\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this2.schedule(function () {\n        callback.apply(void 0, args);\n      });\n    };\n  };\n\n  _proto.flush = function flush() {\n    var _this3 = this;\n\n    var queue = this.queue;\n    this.queue = [];\n\n    if (queue.length) {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_0__.scheduleMicrotask)(function () {\n        _this3.batchNotifyFn(function () {\n          queue.forEach(function (callback) {\n            _this3.notifyFn(callback);\n          });\n        });\n      });\n    }\n  }\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n  ;\n\n  _proto.setNotifyFunction = function setNotifyFunction(fn) {\n    this.notifyFn = fn;\n  }\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n  ;\n\n  _proto.setBatchNotifyFunction = function setBatchNotifyFunction(fn) {\n    this.batchNotifyFn = fn;\n  };\n\n  return NotifyManager;\n}(); // SINGLETON\n\nvar notifyManager = new NotifyManager();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9ub3RpZnlNYW5hZ2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9ub3RpZnlNYW5hZ2VyLmpzPzE4MTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2NoZWR1bGVNaWNyb3Rhc2sgfSBmcm9tICcuL3V0aWxzJzsgLy8gVFlQRVNcblxuLy8gQ0xBU1NcbmV4cG9ydCB2YXIgTm90aWZ5TWFuYWdlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIE5vdGlmeU1hbmFnZXIoKSB7XG4gICAgdGhpcy5xdWV1ZSA9IFtdO1xuICAgIHRoaXMudHJhbnNhY3Rpb25zID0gMDtcblxuICAgIHRoaXMubm90aWZ5Rm4gPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfTtcblxuICAgIHRoaXMuYmF0Y2hOb3RpZnlGbiA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgY2FsbGJhY2soKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE5vdGlmeU1hbmFnZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5iYXRjaCA9IGZ1bmN0aW9uIGJhdGNoKGNhbGxiYWNrKSB7XG4gICAgdmFyIHJlc3VsdDtcbiAgICB0aGlzLnRyYW5zYWN0aW9ucysrO1xuXG4gICAgdHJ5IHtcbiAgICAgIHJlc3VsdCA9IGNhbGxiYWNrKCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHRoaXMudHJhbnNhY3Rpb25zLS07XG5cbiAgICAgIGlmICghdGhpcy50cmFuc2FjdGlvbnMpIHtcbiAgICAgICAgdGhpcy5mbHVzaCgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgX3Byb3RvLnNjaGVkdWxlID0gZnVuY3Rpb24gc2NoZWR1bGUoY2FsbGJhY2spIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgaWYgKHRoaXMudHJhbnNhY3Rpb25zKSB7XG4gICAgICB0aGlzLnF1ZXVlLnB1c2goY2FsbGJhY2spO1xuICAgIH0gZWxzZSB7XG4gICAgICBzY2hlZHVsZU1pY3JvdGFzayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzLm5vdGlmeUZuKGNhbGxiYWNrKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogQWxsIGNhbGxzIHRvIHRoZSB3cmFwcGVkIGZ1bmN0aW9uIHdpbGwgYmUgYmF0Y2hlZC5cbiAgICovXG4gIDtcblxuICBfcHJvdG8uYmF0Y2hDYWxscyA9IGZ1bmN0aW9uIGJhdGNoQ2FsbHMoY2FsbGJhY2spIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgIH1cblxuICAgICAgX3RoaXMyLnNjaGVkdWxlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY2FsbGJhY2suYXBwbHkodm9pZCAwLCBhcmdzKTtcbiAgICAgIH0pO1xuICAgIH07XG4gIH07XG5cbiAgX3Byb3RvLmZsdXNoID0gZnVuY3Rpb24gZmx1c2goKSB7XG4gICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICB2YXIgcXVldWUgPSB0aGlzLnF1ZXVlO1xuICAgIHRoaXMucXVldWUgPSBbXTtcblxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgIHNjaGVkdWxlTWljcm90YXNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMzLmJhdGNoTm90aWZ5Rm4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHF1ZXVlLmZvckVhY2goZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICBfdGhpczMubm90aWZ5Rm4oY2FsbGJhY2spO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogVXNlIHRoaXMgbWV0aG9kIHRvIHNldCBhIGN1c3RvbSBub3RpZnkgZnVuY3Rpb24uXG4gICAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gZm9yIGV4YW1wbGUgd3JhcCBub3RpZmljYXRpb25zIHdpdGggYFJlYWN0LmFjdGAgd2hpbGUgcnVubmluZyB0ZXN0cy5cbiAgICovXG4gIDtcblxuICBfcHJvdG8uc2V0Tm90aWZ5RnVuY3Rpb24gPSBmdW5jdGlvbiBzZXROb3RpZnlGdW5jdGlvbihmbikge1xuICAgIHRoaXMubm90aWZ5Rm4gPSBmbjtcbiAgfVxuICAvKipcbiAgICogVXNlIHRoaXMgbWV0aG9kIHRvIHNldCBhIGN1c3RvbSBmdW5jdGlvbiB0byBiYXRjaCBub3RpZmljYXRpb25zIHRvZ2V0aGVyIGludG8gYSBzaW5nbGUgdGljay5cbiAgICogQnkgZGVmYXVsdCBSZWFjdCBRdWVyeSB3aWxsIHVzZSB0aGUgYmF0Y2ggZnVuY3Rpb24gcHJvdmlkZWQgYnkgUmVhY3RET00gb3IgUmVhY3QgTmF0aXZlLlxuICAgKi9cbiAgO1xuXG4gIF9wcm90by5zZXRCYXRjaE5vdGlmeUZ1bmN0aW9uID0gZnVuY3Rpb24gc2V0QmF0Y2hOb3RpZnlGdW5jdGlvbihmbikge1xuICAgIHRoaXMuYmF0Y2hOb3RpZnlGbiA9IGZuO1xuICB9O1xuXG4gIHJldHVybiBOb3RpZnlNYW5hZ2VyO1xufSgpOyAvLyBTSU5HTEVUT05cblxuZXhwb3J0IHZhciBub3RpZnlNYW5hZ2VyID0gbmV3IE5vdGlmeU1hbmFnZXIoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/notifyManager.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/onlineManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-query/es/core/onlineManager.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onlineManager\": () => (/* binding */ onlineManager)\n/* harmony export */ });\n/* unused harmony export OnlineManager */\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var _subscribable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./subscribable */ \"./node_modules/react-query/es/core/subscribable.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/react-query/es/core/utils.js\");\n\n\n\nvar OnlineManager = /*#__PURE__*/function (_Subscribable) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(OnlineManager, _Subscribable);\n\n  function OnlineManager() {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n\n    _this.setup = function (onOnline) {\n      var _window;\n\n      if (!_utils__WEBPACK_IMPORTED_MODULE_1__.isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {\n        var listener = function listener() {\n          return onOnline();\n        }; // Listen to online\n\n\n        window.addEventListener('online', listener, false);\n        window.addEventListener('offline', listener, false);\n        return function () {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', listener);\n          window.removeEventListener('offline', listener);\n        };\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = OnlineManager.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  };\n\n  _proto.setEventListener = function setEventListener(setup) {\n    var _this$cleanup2,\n        _this2 = this;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(function (online) {\n      if (typeof online === 'boolean') {\n        _this2.setOnline(online);\n      } else {\n        _this2.onOnline();\n      }\n    });\n  };\n\n  _proto.setOnline = function setOnline(online) {\n    this.online = online;\n\n    if (online) {\n      this.onOnline();\n    }\n  };\n\n  _proto.onOnline = function onOnline() {\n    this.listeners.forEach(function (listener) {\n      listener();\n    });\n  };\n\n  _proto.isOnline = function isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  };\n\n  return OnlineManager;\n}(_subscribable__WEBPACK_IMPORTED_MODULE_2__.Subscribable);\nvar onlineManager = new OnlineManager();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9vbmxpbmVNYW5hZ2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LXF1ZXJ5L2VzL2NvcmUvb25saW5lTWFuYWdlci5qcz83M2E2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZVwiO1xuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSAnLi9zdWJzY3JpYmFibGUnO1xuaW1wb3J0IHsgaXNTZXJ2ZXIgfSBmcm9tICcuL3V0aWxzJztcbmV4cG9ydCB2YXIgT25saW5lTWFuYWdlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1N1YnNjcmliYWJsZSkge1xuICBfaW5oZXJpdHNMb29zZShPbmxpbmVNYW5hZ2VyLCBfU3Vic2NyaWJhYmxlKTtcblxuICBmdW5jdGlvbiBPbmxpbmVNYW5hZ2VyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1N1YnNjcmliYWJsZS5jYWxsKHRoaXMpIHx8IHRoaXM7XG5cbiAgICBfdGhpcy5zZXR1cCA9IGZ1bmN0aW9uIChvbk9ubGluZSkge1xuICAgICAgdmFyIF93aW5kb3c7XG5cbiAgICAgIGlmICghaXNTZXJ2ZXIgJiYgKChfd2luZG93ID0gd2luZG93KSA9PSBudWxsID8gdm9pZCAwIDogX3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKSkge1xuICAgICAgICB2YXIgbGlzdGVuZXIgPSBmdW5jdGlvbiBsaXN0ZW5lcigpIHtcbiAgICAgICAgICByZXR1cm4gb25PbmxpbmUoKTtcbiAgICAgICAgfTsgLy8gTGlzdGVuIHRvIG9ubGluZVxuXG5cbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29ubGluZScsIGxpc3RlbmVyLCBmYWxzZSk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdvZmZsaW5lJywgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAvLyBCZSBzdXJlIHRvIHVuc3Vic2NyaWJlIGlmIGEgbmV3IGhhbmRsZXIgaXMgc2V0XG4gICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ29ubGluZScsIGxpc3RlbmVyKTtcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignb2ZmbGluZScsIGxpc3RlbmVyKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE9ubGluZU1hbmFnZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5vblN1YnNjcmliZSA9IGZ1bmN0aW9uIG9uU3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy5jbGVhbnVwKSB7XG4gICAgICB0aGlzLnNldEV2ZW50TGlzdGVuZXIodGhpcy5zZXR1cCk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5vblVuc3Vic2NyaWJlID0gZnVuY3Rpb24gb25VbnN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuaGFzTGlzdGVuZXJzKCkpIHtcbiAgICAgIHZhciBfdGhpcyRjbGVhbnVwO1xuXG4gICAgICAoX3RoaXMkY2xlYW51cCA9IHRoaXMuY2xlYW51cCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJGNsZWFudXAuY2FsbCh0aGlzKTtcbiAgICAgIHRoaXMuY2xlYW51cCA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnNldEV2ZW50TGlzdGVuZXIgPSBmdW5jdGlvbiBzZXRFdmVudExpc3RlbmVyKHNldHVwKSB7XG4gICAgdmFyIF90aGlzJGNsZWFudXAyLFxuICAgICAgICBfdGhpczIgPSB0aGlzO1xuXG4gICAgdGhpcy5zZXR1cCA9IHNldHVwO1xuICAgIChfdGhpcyRjbGVhbnVwMiA9IHRoaXMuY2xlYW51cCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJGNsZWFudXAyLmNhbGwodGhpcyk7XG4gICAgdGhpcy5jbGVhbnVwID0gc2V0dXAoZnVuY3Rpb24gKG9ubGluZSkge1xuICAgICAgaWYgKHR5cGVvZiBvbmxpbmUgPT09ICdib29sZWFuJykge1xuICAgICAgICBfdGhpczIuc2V0T25saW5lKG9ubGluZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfdGhpczIub25PbmxpbmUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICBfcHJvdG8uc2V0T25saW5lID0gZnVuY3Rpb24gc2V0T25saW5lKG9ubGluZSkge1xuICAgIHRoaXMub25saW5lID0gb25saW5lO1xuXG4gICAgaWYgKG9ubGluZSkge1xuICAgICAgdGhpcy5vbk9ubGluZSgpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8ub25PbmxpbmUgPSBmdW5jdGlvbiBvbk9ubGluZSgpIHtcbiAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgbGlzdGVuZXIoKTtcbiAgICB9KTtcbiAgfTtcblxuICBfcHJvdG8uaXNPbmxpbmUgPSBmdW5jdGlvbiBpc09ubGluZSgpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMub25saW5lID09PSAnYm9vbGVhbicpIHtcbiAgICAgIHJldHVybiB0aGlzLm9ubGluZTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG5hdmlnYXRvciA9PT0gJ3VuZGVmaW5lZCcgfHwgdHlwZW9mIG5hdmlnYXRvci5vbkxpbmUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmF2aWdhdG9yLm9uTGluZTtcbiAgfTtcblxuICByZXR1cm4gT25saW5lTWFuYWdlcjtcbn0oU3Vic2NyaWJhYmxlKTtcbmV4cG9ydCB2YXIgb25saW5lTWFuYWdlciA9IG5ldyBPbmxpbmVNYW5hZ2VyKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/onlineManager.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/query.js":
/*!***************************************************!*\
  !*** ./node_modules/react-query/es/core/query.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Query\": () => (/* binding */ Query)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/react-query/es/core/utils.js\");\n/* harmony import */ var _notifyManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./notifyManager */ \"./node_modules/react-query/es/core/notifyManager.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logger */ \"./node_modules/react-query/es/core/logger.js\");\n/* harmony import */ var _retryer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./retryer */ \"./node_modules/react-query/es/core/retryer.js\");\n\n\n\n\n // TYPES\n\n// CLASS\nvar Query = /*#__PURE__*/function () {\n  function Query(config) {\n    this.abortSignalConsumed = false;\n    this.hadObservers = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || this.getDefaultState(this.options);\n    this.state = this.initialState;\n    this.meta = config.meta;\n    this.scheduleGc();\n  }\n\n  var _proto = Query.prototype;\n\n  _proto.setOptions = function setOptions(options) {\n    var _this$options$cacheTi;\n\n    this.options = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, this.defaultOptions, options);\n    this.meta = options == null ? void 0 : options.meta; // Default to 5 minutes if not cache time is set\n\n    this.cacheTime = Math.max(this.cacheTime || 0, (_this$options$cacheTi = this.options.cacheTime) != null ? _this$options$cacheTi : 5 * 60 * 1000);\n  };\n\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\n    this.defaultOptions = options;\n  };\n\n  _proto.scheduleGc = function scheduleGc() {\n    var _this = this;\n\n    this.clearGcTimeout();\n\n    if ((0,_utils__WEBPACK_IMPORTED_MODULE_1__.isValidTimeout)(this.cacheTime)) {\n      this.gcTimeout = setTimeout(function () {\n        _this.optionalRemove();\n      }, this.cacheTime);\n    }\n  };\n\n  _proto.clearGcTimeout = function clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  };\n\n  _proto.optionalRemove = function optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.isFetching) {\n        if (this.hadObservers) {\n          this.scheduleGc();\n        }\n      } else {\n        this.cache.remove(this);\n      }\n    }\n  };\n\n  _proto.setData = function setData(updater, options) {\n    var _this$options$isDataE, _this$options;\n\n    var prevData = this.state.data; // Get the new data\n\n    var data = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.functionalUpdate)(updater, prevData); // Use prev data if an isDataEqual function is defined and returns `true`\n\n    if ((_this$options$isDataE = (_this$options = this.options).isDataEqual) == null ? void 0 : _this$options$isDataE.call(_this$options, prevData, data)) {\n      data = prevData;\n    } else if (this.options.structuralSharing !== false) {\n      // Structurally share data between prev and new data if needed\n      data = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.replaceEqualDeep)(prevData, data);\n    } // Set data and mark it as cached\n\n\n    this.dispatch({\n      data: data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt\n    });\n    return data;\n  };\n\n  _proto.setState = function setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state: state,\n      setStateOptions: setStateOptions\n    });\n  };\n\n  _proto.cancel = function cancel(options) {\n    var _this$retryer;\n\n    var promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(_utils__WEBPACK_IMPORTED_MODULE_1__.noop).catch(_utils__WEBPACK_IMPORTED_MODULE_1__.noop) : Promise.resolve();\n  };\n\n  _proto.destroy = function destroy() {\n    this.clearGcTimeout();\n    this.cancel({\n      silent: true\n    });\n  };\n\n  _proto.reset = function reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  };\n\n  _proto.isActive = function isActive() {\n    return this.observers.some(function (observer) {\n      return observer.options.enabled !== false;\n    });\n  };\n\n  _proto.isFetching = function isFetching() {\n    return this.state.isFetching;\n  };\n\n  _proto.isStale = function isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(function (observer) {\n      return observer.getCurrentResult().isStale;\n    });\n  };\n\n  _proto.isStaleByTime = function isStaleByTime(staleTime) {\n    if (staleTime === void 0) {\n      staleTime = 0;\n    }\n\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !(0,_utils__WEBPACK_IMPORTED_MODULE_1__.timeUntilStale)(this.state.dataUpdatedAt, staleTime);\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this$retryer2;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnWindowFocus();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  };\n\n  _proto.onOnline = function onOnline() {\n    var _this$retryer3;\n\n    var observer = this.observers.find(function (x) {\n      return x.shouldFetchOnReconnect();\n    });\n\n    if (observer) {\n      observer.refetch();\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  };\n\n  _proto.addObserver = function addObserver(observer) {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer);\n      this.hadObservers = true; // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.removeObserver = function removeObserver(observer) {\n    if (this.observers.indexOf(observer) !== -1) {\n      this.observers = this.observers.filter(function (x) {\n        return x !== observer;\n      });\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.retryer.isTransportCancelable || this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        if (this.cacheTime) {\n          this.scheduleGc();\n        } else {\n          this.cache.remove(this);\n        }\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer: observer\n      });\n    }\n  };\n\n  _proto.getObserversCount = function getObserversCount() {\n    return this.observers.length;\n  };\n\n  _proto.invalidate = function invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  };\n\n  _proto.fetch = function fetch(options, fetchOptions) {\n    var _this2 = this,\n        _this$options$behavio,\n        _context$fetchOptions,\n        _abortController$abor;\n\n    if (this.state.isFetching) {\n      if (this.state.dataUpdatedAt && (fetchOptions == null ? void 0 : fetchOptions.cancelRefetch)) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        var _this$retryer4;\n\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry(); // Return current promise if we are already fetching\n\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      var observer = this.observers.find(function (x) {\n        return x.options.queryFn;\n      });\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    var queryKey = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.ensureQueryKeyArray)(this.queryKey);\n    var abortController = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getAbortController)(); // Create query function context\n\n    var queryFnContext = {\n      queryKey: queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    };\n    Object.defineProperty(queryFnContext, 'signal', {\n      enumerable: true,\n      get: function get() {\n        if (abortController) {\n          _this2.abortSignalConsumed = true;\n          return abortController.signal;\n        }\n\n        return undefined;\n      }\n    }); // Create fetch function\n\n    var fetchFn = function fetchFn() {\n      if (!_this2.options.queryFn) {\n        return Promise.reject('Missing queryFn');\n      }\n\n      _this2.abortSignalConsumed = false;\n      return _this2.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    var context = {\n      fetchOptions: fetchOptions,\n      options: this.options,\n      queryKey: queryKey,\n      state: this.state,\n      fetchFn: fetchFn,\n      meta: this.meta\n    };\n\n    if ((_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch) {\n      var _this$options$behavio2;\n\n      (_this$options$behavio2 = this.options.behavior) == null ? void 0 : _this$options$behavio2.onFetch(context);\n    } // Store state in case the current fetch needs to be reverted\n\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (!this.state.isFetching || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    } // Try to fetch the data\n\n\n    this.retryer = new _retryer__WEBPACK_IMPORTED_MODULE_2__.Retryer({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : (_abortController$abor = abortController.abort) == null ? void 0 : _abortController$abor.bind(abortController),\n      onSuccess: function onSuccess(data) {\n        _this2.setData(data); // Notify cache callback\n\n\n        _this2.cache.config.onSuccess == null ? void 0 : _this2.cache.config.onSuccess(data, _this2); // Remove query after fetching if cache time is 0\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onError: function onError(error) {\n        // Optimistically update state if needed\n        if (!((0,_retryer__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error) && error.silent)) {\n          _this2.dispatch({\n            type: 'error',\n            error: error\n          });\n        }\n\n        if (!(0,_retryer__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error)) {\n          // Notify cache callback\n          _this2.cache.config.onError == null ? void 0 : _this2.cache.config.onError(error, _this2); // Log error\n\n          (0,_logger__WEBPACK_IMPORTED_MODULE_3__.getLogger)().error(error);\n        } // Remove query after fetching if cache time is 0\n\n\n        if (_this2.cacheTime === 0) {\n          _this2.optionalRemove();\n        }\n      },\n      onFail: function onFail() {\n        _this2.dispatch({\n          type: 'failed'\n        });\n      },\n      onPause: function onPause() {\n        _this2.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: function onContinue() {\n        _this2.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  };\n\n  _proto.dispatch = function dispatch(action) {\n    var _this3 = this;\n\n    this.state = this.reducer(this.state, action);\n    _notifyManager__WEBPACK_IMPORTED_MODULE_4__.notifyManager.batch(function () {\n      _this3.observers.forEach(function (observer) {\n        observer.onQueryUpdate(action);\n      });\n\n      _this3.cache.notify({\n        query: _this3,\n        type: 'queryUpdated',\n        action: action\n      });\n    });\n  };\n\n  _proto.getDefaultState = function getDefaultState(options) {\n    var data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n    var hasInitialData = typeof options.initialData !== 'undefined';\n    var initialDataUpdatedAt = hasInitialData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n    var hasData = typeof data !== 'undefined';\n    return {\n      data: data,\n      dataUpdateCount: 0,\n      dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n      error: null,\n      errorUpdateCount: 0,\n      errorUpdatedAt: 0,\n      fetchFailureCount: 0,\n      fetchMeta: null,\n      isFetching: false,\n      isInvalidated: false,\n      isPaused: false,\n      status: hasData ? 'success' : 'idle'\n    };\n  };\n\n  _proto.reducer = function reducer(state, action) {\n    var _action$meta, _action$dataUpdatedAt;\n\n    switch (action.type) {\n      case 'failed':\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, {\n          fetchFailureCount: state.fetchFailureCount + 1\n        });\n\n      case 'pause':\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, {\n          isPaused: true\n        });\n\n      case 'continue':\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, {\n          isPaused: false\n        });\n\n      case 'fetch':\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, {\n          fetchFailureCount: 0,\n          fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n          isFetching: true,\n          isPaused: false\n        }, !state.dataUpdatedAt && {\n          error: null,\n          status: 'loading'\n        });\n\n      case 'success':\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, {\n          data: action.data,\n          dataUpdateCount: state.dataUpdateCount + 1,\n          dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n          error: null,\n          fetchFailureCount: 0,\n          isFetching: false,\n          isInvalidated: false,\n          isPaused: false,\n          status: 'success'\n        });\n\n      case 'error':\n        var error = action.error;\n\n        if ((0,_retryer__WEBPACK_IMPORTED_MODULE_2__.isCancelledError)(error) && error.revert && this.revertState) {\n          return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, this.revertState);\n        }\n\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, {\n          error: error,\n          errorUpdateCount: state.errorUpdateCount + 1,\n          errorUpdatedAt: Date.now(),\n          fetchFailureCount: state.fetchFailureCount + 1,\n          isFetching: false,\n          isPaused: false,\n          status: 'error'\n        });\n\n      case 'invalidate':\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, {\n          isInvalidated: true\n        });\n\n      case 'setState':\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, state, action.state);\n\n      default:\n        return state;\n    }\n  };\n\n  return Query;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/query.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/queryCache.js":
/*!********************************************************!*\
  !*** ./node_modules/react-query/es/core/queryCache.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"QueryCache\": () => (/* binding */ QueryCache)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/react-query/es/core/utils.js\");\n/* harmony import */ var _query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query */ \"./node_modules/react-query/es/core/query.js\");\n/* harmony import */ var _notifyManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager */ \"./node_modules/react-query/es/core/notifyManager.js\");\n/* harmony import */ var _subscribable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./subscribable */ \"./node_modules/react-query/es/core/subscribable.js\");\n\n\n\n\n\n// CLASS\nvar QueryCache = /*#__PURE__*/function (_Subscribable) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(QueryCache, _Subscribable);\n\n  function QueryCache(config) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.config = config || {};\n    _this.queries = [];\n    _this.queriesMap = {};\n    return _this;\n  }\n\n  var _proto = QueryCache.prototype;\n\n  _proto.build = function build(client, options, state) {\n    var _options$queryHash;\n\n    var queryKey = options.queryKey;\n    var queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : (0,_utils__WEBPACK_IMPORTED_MODULE_1__.hashQueryKeyByOptions)(queryKey, options);\n    var query = this.get(queryHash);\n\n    if (!query) {\n      query = new _query__WEBPACK_IMPORTED_MODULE_2__.Query({\n        cache: this,\n        queryKey: queryKey,\n        queryHash: queryHash,\n        options: client.defaultQueryOptions(options),\n        state: state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n        meta: options.meta\n      });\n      this.add(query);\n    }\n\n    return query;\n  };\n\n  _proto.add = function add(query) {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query;\n      this.queries.push(query);\n      this.notify({\n        type: 'queryAdded',\n        query: query\n      });\n    }\n  };\n\n  _proto.remove = function remove(query) {\n    var queryInMap = this.queriesMap[query.queryHash];\n\n    if (queryInMap) {\n      query.destroy();\n      this.queries = this.queries.filter(function (x) {\n        return x !== query;\n      });\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash];\n      }\n\n      this.notify({\n        type: 'queryRemoved',\n        query: query\n      });\n    }\n  };\n\n  _proto.clear = function clear() {\n    var _this2 = this;\n\n    _notifyManager__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(function () {\n      _this2.queries.forEach(function (query) {\n        _this2.remove(query);\n      });\n    });\n  };\n\n  _proto.get = function get(queryHash) {\n    return this.queriesMap[queryHash];\n  };\n\n  _proto.getAll = function getAll() {\n    return this.queries;\n  };\n\n  _proto.find = function find(arg1, arg2) {\n    var _parseFilterArgs = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.parseFilterArgs)(arg1, arg2),\n        filters = _parseFilterArgs[0];\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.queries.find(function (query) {\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(filters, query);\n    });\n  };\n\n  _proto.findAll = function findAll(arg1, arg2) {\n    var _parseFilterArgs2 = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.parseFilterArgs)(arg1, arg2),\n        filters = _parseFilterArgs2[0];\n\n    return Object.keys(filters).length > 0 ? this.queries.filter(function (query) {\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(filters, query);\n    }) : this.queries;\n  };\n\n  _proto.notify = function notify(event) {\n    var _this3 = this;\n\n    _notifyManager__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(function () {\n      _this3.listeners.forEach(function (listener) {\n        listener(event);\n      });\n    });\n  };\n\n  _proto.onFocus = function onFocus() {\n    var _this4 = this;\n\n    _notifyManager__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(function () {\n      _this4.queries.forEach(function (query) {\n        query.onFocus();\n      });\n    });\n  };\n\n  _proto.onOnline = function onOnline() {\n    var _this5 = this;\n\n    _notifyManager__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(function () {\n      _this5.queries.forEach(function (query) {\n        query.onOnline();\n      });\n    });\n  };\n\n  return QueryCache;\n}(_subscribable__WEBPACK_IMPORTED_MODULE_4__.Subscribable);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9xdWVyeUNhY2hlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9xdWVyeUNhY2hlLmpzPzJjNzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlXCI7XG5pbXBvcnQgeyBoYXNoUXVlcnlLZXlCeU9wdGlvbnMsIG1hdGNoUXVlcnksIHBhcnNlRmlsdGVyQXJncyB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IHsgUXVlcnkgfSBmcm9tICcuL3F1ZXJ5JztcbmltcG9ydCB7IG5vdGlmeU1hbmFnZXIgfSBmcm9tICcuL25vdGlmeU1hbmFnZXInO1xuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSAnLi9zdWJzY3JpYmFibGUnO1xuLy8gQ0xBU1NcbmV4cG9ydCB2YXIgUXVlcnlDYWNoZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1N1YnNjcmliYWJsZSkge1xuICBfaW5oZXJpdHNMb29zZShRdWVyeUNhY2hlLCBfU3Vic2NyaWJhYmxlKTtcblxuICBmdW5jdGlvbiBRdWVyeUNhY2hlKGNvbmZpZykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1N1YnNjcmliYWJsZS5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgX3RoaXMuY29uZmlnID0gY29uZmlnIHx8IHt9O1xuICAgIF90aGlzLnF1ZXJpZXMgPSBbXTtcbiAgICBfdGhpcy5xdWVyaWVzTWFwID0ge307XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFF1ZXJ5Q2FjaGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5idWlsZCA9IGZ1bmN0aW9uIGJ1aWxkKGNsaWVudCwgb3B0aW9ucywgc3RhdGUpIHtcbiAgICB2YXIgX29wdGlvbnMkcXVlcnlIYXNoO1xuXG4gICAgdmFyIHF1ZXJ5S2V5ID0gb3B0aW9ucy5xdWVyeUtleTtcbiAgICB2YXIgcXVlcnlIYXNoID0gKF9vcHRpb25zJHF1ZXJ5SGFzaCA9IG9wdGlvbnMucXVlcnlIYXNoKSAhPSBudWxsID8gX29wdGlvbnMkcXVlcnlIYXNoIDogaGFzaFF1ZXJ5S2V5QnlPcHRpb25zKHF1ZXJ5S2V5LCBvcHRpb25zKTtcbiAgICB2YXIgcXVlcnkgPSB0aGlzLmdldChxdWVyeUhhc2gpO1xuXG4gICAgaWYgKCFxdWVyeSkge1xuICAgICAgcXVlcnkgPSBuZXcgUXVlcnkoe1xuICAgICAgICBjYWNoZTogdGhpcyxcbiAgICAgICAgcXVlcnlLZXk6IHF1ZXJ5S2V5LFxuICAgICAgICBxdWVyeUhhc2g6IHF1ZXJ5SGFzaCxcbiAgICAgICAgb3B0aW9uczogY2xpZW50LmRlZmF1bHRRdWVyeU9wdGlvbnMob3B0aW9ucyksXG4gICAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgICAgZGVmYXVsdE9wdGlvbnM6IGNsaWVudC5nZXRRdWVyeURlZmF1bHRzKHF1ZXJ5S2V5KSxcbiAgICAgICAgbWV0YTogb3B0aW9ucy5tZXRhXG4gICAgICB9KTtcbiAgICAgIHRoaXMuYWRkKHF1ZXJ5KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcXVlcnk7XG4gIH07XG5cbiAgX3Byb3RvLmFkZCA9IGZ1bmN0aW9uIGFkZChxdWVyeSkge1xuICAgIGlmICghdGhpcy5xdWVyaWVzTWFwW3F1ZXJ5LnF1ZXJ5SGFzaF0pIHtcbiAgICAgIHRoaXMucXVlcmllc01hcFtxdWVyeS5xdWVyeUhhc2hdID0gcXVlcnk7XG4gICAgICB0aGlzLnF1ZXJpZXMucHVzaChxdWVyeSk7XG4gICAgICB0aGlzLm5vdGlmeSh7XG4gICAgICAgIHR5cGU6ICdxdWVyeUFkZGVkJyxcbiAgICAgICAgcXVlcnk6IHF1ZXJ5XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZShxdWVyeSkge1xuICAgIHZhciBxdWVyeUluTWFwID0gdGhpcy5xdWVyaWVzTWFwW3F1ZXJ5LnF1ZXJ5SGFzaF07XG5cbiAgICBpZiAocXVlcnlJbk1hcCkge1xuICAgICAgcXVlcnkuZGVzdHJveSgpO1xuICAgICAgdGhpcy5xdWVyaWVzID0gdGhpcy5xdWVyaWVzLmZpbHRlcihmdW5jdGlvbiAoeCkge1xuICAgICAgICByZXR1cm4geCAhPT0gcXVlcnk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKHF1ZXJ5SW5NYXAgPT09IHF1ZXJ5KSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLnF1ZXJpZXNNYXBbcXVlcnkucXVlcnlIYXNoXTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5ub3RpZnkoe1xuICAgICAgICB0eXBlOiAncXVlcnlSZW1vdmVkJyxcbiAgICAgICAgcXVlcnk6IHF1ZXJ5XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNsZWFyID0gZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzMi5xdWVyaWVzLmZvckVhY2goZnVuY3Rpb24gKHF1ZXJ5KSB7XG4gICAgICAgIF90aGlzMi5yZW1vdmUocXVlcnkpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLmdldCA9IGZ1bmN0aW9uIGdldChxdWVyeUhhc2gpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyaWVzTWFwW3F1ZXJ5SGFzaF07XG4gIH07XG5cbiAgX3Byb3RvLmdldEFsbCA9IGZ1bmN0aW9uIGdldEFsbCgpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyaWVzO1xuICB9O1xuXG4gIF9wcm90by5maW5kID0gZnVuY3Rpb24gZmluZChhcmcxLCBhcmcyKSB7XG4gICAgdmFyIF9wYXJzZUZpbHRlckFyZ3MgPSBwYXJzZUZpbHRlckFyZ3MoYXJnMSwgYXJnMiksXG4gICAgICAgIGZpbHRlcnMgPSBfcGFyc2VGaWx0ZXJBcmdzWzBdO1xuXG4gICAgaWYgKHR5cGVvZiBmaWx0ZXJzLmV4YWN0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgZmlsdGVycy5leGFjdCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMucXVlcmllcy5maW5kKGZ1bmN0aW9uIChxdWVyeSkge1xuICAgICAgcmV0dXJuIG1hdGNoUXVlcnkoZmlsdGVycywgcXVlcnkpO1xuICAgIH0pO1xuICB9O1xuXG4gIF9wcm90by5maW5kQWxsID0gZnVuY3Rpb24gZmluZEFsbChhcmcxLCBhcmcyKSB7XG4gICAgdmFyIF9wYXJzZUZpbHRlckFyZ3MyID0gcGFyc2VGaWx0ZXJBcmdzKGFyZzEsIGFyZzIpLFxuICAgICAgICBmaWx0ZXJzID0gX3BhcnNlRmlsdGVyQXJnczJbMF07XG5cbiAgICByZXR1cm4gT2JqZWN0LmtleXMoZmlsdGVycykubGVuZ3RoID4gMCA/IHRoaXMucXVlcmllcy5maWx0ZXIoZnVuY3Rpb24gKHF1ZXJ5KSB7XG4gICAgICByZXR1cm4gbWF0Y2hRdWVyeShmaWx0ZXJzLCBxdWVyeSk7XG4gICAgfSkgOiB0aGlzLnF1ZXJpZXM7XG4gIH07XG5cbiAgX3Byb3RvLm5vdGlmeSA9IGZ1bmN0aW9uIG5vdGlmeShldmVudCkge1xuICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaChmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpczMubGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICAgIGxpc3RlbmVyKGV2ZW50KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIF9wcm90by5vbkZvY3VzID0gZnVuY3Rpb24gb25Gb2N1cygpIHtcbiAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXM0LnF1ZXJpZXMuZm9yRWFjaChmdW5jdGlvbiAocXVlcnkpIHtcbiAgICAgICAgcXVlcnkub25Gb2N1cygpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLm9uT25saW5lID0gZnVuY3Rpb24gb25PbmxpbmUoKSB7XG4gICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzNS5xdWVyaWVzLmZvckVhY2goZnVuY3Rpb24gKHF1ZXJ5KSB7XG4gICAgICAgIHF1ZXJ5Lm9uT25saW5lKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUXVlcnlDYWNoZTtcbn0oU3Vic2NyaWJhYmxlKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/queryCache.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/queryClient.js":
/*!*********************************************************!*\
  !*** ./node_modules/react-query/es/core/queryClient.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"QueryClient\": () => (/* binding */ QueryClient)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"./node_modules/react-query/es/core/utils.js\");\n/* harmony import */ var _queryCache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryCache */ \"./node_modules/react-query/es/core/queryCache.js\");\n/* harmony import */ var _mutationCache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutationCache */ \"./node_modules/react-query/es/core/mutationCache.js\");\n/* harmony import */ var _focusManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager */ \"./node_modules/react-query/es/core/focusManager.js\");\n/* harmony import */ var _onlineManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./onlineManager */ \"./node_modules/react-query/es/core/onlineManager.js\");\n/* harmony import */ var _notifyManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./notifyManager */ \"./node_modules/react-query/es/core/notifyManager.js\");\n/* harmony import */ var _infiniteQueryBehavior__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./infiniteQueryBehavior */ \"./node_modules/react-query/es/core/infiniteQueryBehavior.js\");\n\n\n\n\n\n\n\n\n// CLASS\nvar QueryClient = /*#__PURE__*/function () {\n  function QueryClient(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    this.queryCache = config.queryCache || new _queryCache__WEBPACK_IMPORTED_MODULE_0__.QueryCache();\n    this.mutationCache = config.mutationCache || new _mutationCache__WEBPACK_IMPORTED_MODULE_1__.MutationCache();\n    this.defaultOptions = config.defaultOptions || {};\n    this.queryDefaults = [];\n    this.mutationDefaults = [];\n  }\n\n  var _proto = QueryClient.prototype;\n\n  _proto.mount = function mount() {\n    var _this = this;\n\n    this.unsubscribeFocus = _focusManager__WEBPACK_IMPORTED_MODULE_2__.focusManager.subscribe(function () {\n      if (_focusManager__WEBPACK_IMPORTED_MODULE_2__.focusManager.isFocused() && _onlineManager__WEBPACK_IMPORTED_MODULE_3__.onlineManager.isOnline()) {\n        _this.mutationCache.onFocus();\n\n        _this.queryCache.onFocus();\n      }\n    });\n    this.unsubscribeOnline = _onlineManager__WEBPACK_IMPORTED_MODULE_3__.onlineManager.subscribe(function () {\n      if (_focusManager__WEBPACK_IMPORTED_MODULE_2__.focusManager.isFocused() && _onlineManager__WEBPACK_IMPORTED_MODULE_3__.onlineManager.isOnline()) {\n        _this.mutationCache.onOnline();\n\n        _this.queryCache.onOnline();\n      }\n    });\n  };\n\n  _proto.unmount = function unmount() {\n    var _this$unsubscribeFocu, _this$unsubscribeOnli;\n\n    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);\n    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);\n  };\n\n  _proto.isFetching = function isFetching(arg1, arg2) {\n    var _parseFilterArgs = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.parseFilterArgs)(arg1, arg2),\n        filters = _parseFilterArgs[0];\n\n    filters.fetching = true;\n    return this.queryCache.findAll(filters).length;\n  };\n\n  _proto.isMutating = function isMutating(filters) {\n    return this.mutationCache.findAll((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({}, filters, {\n      fetching: true\n    })).length;\n  };\n\n  _proto.getQueryData = function getQueryData(queryKey, filters) {\n    var _this$queryCache$find;\n\n    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;\n  };\n\n  _proto.getQueriesData = function getQueriesData(queryKeyOrFilters) {\n    return this.getQueryCache().findAll(queryKeyOrFilters).map(function (_ref) {\n      var queryKey = _ref.queryKey,\n          state = _ref.state;\n      var data = state.data;\n      return [queryKey, data];\n    });\n  };\n\n  _proto.setQueryData = function setQueryData(queryKey, updater, options) {\n    var parsedOptions = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.parseQueryArgs)(queryKey);\n    var defaultedOptions = this.defaultQueryOptions(parsedOptions);\n    return this.queryCache.build(this, defaultedOptions).setData(updater, options);\n  };\n\n  _proto.setQueriesData = function setQueriesData(queryKeyOrFilters, updater, options) {\n    var _this2 = this;\n\n    return _notifyManager__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(function () {\n      return _this2.getQueryCache().findAll(queryKeyOrFilters).map(function (_ref2) {\n        var queryKey = _ref2.queryKey;\n        return [queryKey, _this2.setQueryData(queryKey, updater, options)];\n      });\n    });\n  };\n\n  _proto.getQueryState = function getQueryState(queryKey, filters) {\n    var _this$queryCache$find2;\n\n    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;\n  };\n\n  _proto.removeQueries = function removeQueries(arg1, arg2) {\n    var _parseFilterArgs2 = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.parseFilterArgs)(arg1, arg2),\n        filters = _parseFilterArgs2[0];\n\n    var queryCache = this.queryCache;\n    _notifyManager__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(function () {\n      queryCache.findAll(filters).forEach(function (query) {\n        queryCache.remove(query);\n      });\n    });\n  };\n\n  _proto.resetQueries = function resetQueries(arg1, arg2, arg3) {\n    var _this3 = this;\n\n    var _parseFilterArgs3 = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.parseFilterArgs)(arg1, arg2, arg3),\n        filters = _parseFilterArgs3[0],\n        options = _parseFilterArgs3[1];\n\n    var queryCache = this.queryCache;\n\n    var refetchFilters = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({}, filters, {\n      active: true\n    });\n\n    return _notifyManager__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(function () {\n      queryCache.findAll(filters).forEach(function (query) {\n        query.reset();\n      });\n      return _this3.refetchQueries(refetchFilters, options);\n    });\n  };\n\n  _proto.cancelQueries = function cancelQueries(arg1, arg2, arg3) {\n    var _this4 = this;\n\n    var _parseFilterArgs4 = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.parseFilterArgs)(arg1, arg2, arg3),\n        filters = _parseFilterArgs4[0],\n        _parseFilterArgs4$ = _parseFilterArgs4[1],\n        cancelOptions = _parseFilterArgs4$ === void 0 ? {} : _parseFilterArgs4$;\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true;\n    }\n\n    var promises = _notifyManager__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(function () {\n      return _this4.queryCache.findAll(filters).map(function (query) {\n        return query.cancel(cancelOptions);\n      });\n    });\n    return Promise.all(promises).then(_utils__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils__WEBPACK_IMPORTED_MODULE_4__.noop);\n  };\n\n  _proto.invalidateQueries = function invalidateQueries(arg1, arg2, arg3) {\n    var _ref3,\n        _filters$refetchActiv,\n        _filters$refetchInact,\n        _this5 = this;\n\n    var _parseFilterArgs5 = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.parseFilterArgs)(arg1, arg2, arg3),\n        filters = _parseFilterArgs5[0],\n        options = _parseFilterArgs5[1];\n\n    var refetchFilters = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({}, filters, {\n      // if filters.refetchActive is not provided and filters.active is explicitly false,\n      // e.g. invalidateQueries({ active: false }), we don't want to refetch active queries\n      active: (_ref3 = (_filters$refetchActiv = filters.refetchActive) != null ? _filters$refetchActiv : filters.active) != null ? _ref3 : true,\n      inactive: (_filters$refetchInact = filters.refetchInactive) != null ? _filters$refetchInact : false\n    });\n\n    return _notifyManager__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(function () {\n      _this5.queryCache.findAll(filters).forEach(function (query) {\n        query.invalidate();\n      });\n\n      return _this5.refetchQueries(refetchFilters, options);\n    });\n  };\n\n  _proto.refetchQueries = function refetchQueries(arg1, arg2, arg3) {\n    var _this6 = this;\n\n    var _parseFilterArgs6 = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.parseFilterArgs)(arg1, arg2, arg3),\n        filters = _parseFilterArgs6[0],\n        options = _parseFilterArgs6[1];\n\n    var promises = _notifyManager__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(function () {\n      return _this6.queryCache.findAll(filters).map(function (query) {\n        return query.fetch(undefined, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({}, options, {\n          meta: {\n            refetchPage: filters == null ? void 0 : filters.refetchPage\n          }\n        }));\n      });\n    });\n    var promise = Promise.all(promises).then(_utils__WEBPACK_IMPORTED_MODULE_4__.noop);\n\n    if (!(options == null ? void 0 : options.throwOnError)) {\n      promise = promise.catch(_utils__WEBPACK_IMPORTED_MODULE_4__.noop);\n    }\n\n    return promise;\n  };\n\n  _proto.fetchQuery = function fetchQuery(arg1, arg2, arg3) {\n    var parsedOptions = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.parseQueryArgs)(arg1, arg2, arg3);\n    var defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652\n\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false;\n    }\n\n    var query = this.queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  };\n\n  _proto.prefetchQuery = function prefetchQuery(arg1, arg2, arg3) {\n    return this.fetchQuery(arg1, arg2, arg3).then(_utils__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils__WEBPACK_IMPORTED_MODULE_4__.noop);\n  };\n\n  _proto.fetchInfiniteQuery = function fetchInfiniteQuery(arg1, arg2, arg3) {\n    var parsedOptions = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.parseQueryArgs)(arg1, arg2, arg3);\n    parsedOptions.behavior = (0,_infiniteQueryBehavior__WEBPACK_IMPORTED_MODULE_7__.infiniteQueryBehavior)();\n    return this.fetchQuery(parsedOptions);\n  };\n\n  _proto.prefetchInfiniteQuery = function prefetchInfiniteQuery(arg1, arg2, arg3) {\n    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(_utils__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils__WEBPACK_IMPORTED_MODULE_4__.noop);\n  };\n\n  _proto.cancelMutations = function cancelMutations() {\n    var _this7 = this;\n\n    var promises = _notifyManager__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(function () {\n      return _this7.mutationCache.getAll().map(function (mutation) {\n        return mutation.cancel();\n      });\n    });\n    return Promise.all(promises).then(_utils__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils__WEBPACK_IMPORTED_MODULE_4__.noop);\n  };\n\n  _proto.resumePausedMutations = function resumePausedMutations() {\n    return this.getMutationCache().resumePausedMutations();\n  };\n\n  _proto.executeMutation = function executeMutation(options) {\n    return this.mutationCache.build(this, options).execute();\n  };\n\n  _proto.getQueryCache = function getQueryCache() {\n    return this.queryCache;\n  };\n\n  _proto.getMutationCache = function getMutationCache() {\n    return this.mutationCache;\n  };\n\n  _proto.getDefaultOptions = function getDefaultOptions() {\n    return this.defaultOptions;\n  };\n\n  _proto.setDefaultOptions = function setDefaultOptions(options) {\n    this.defaultOptions = options;\n  };\n\n  _proto.setQueryDefaults = function setQueryDefaults(queryKey, options) {\n    var result = this.queryDefaults.find(function (x) {\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.hashQueryKey)(queryKey) === (0,_utils__WEBPACK_IMPORTED_MODULE_4__.hashQueryKey)(x.queryKey);\n    });\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.queryDefaults.push({\n        queryKey: queryKey,\n        defaultOptions: options\n      });\n    }\n  };\n\n  _proto.getQueryDefaults = function getQueryDefaults(queryKey) {\n    var _this$queryDefaults$f;\n\n    return queryKey ? (_this$queryDefaults$f = this.queryDefaults.find(function (x) {\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(queryKey, x.queryKey);\n    })) == null ? void 0 : _this$queryDefaults$f.defaultOptions : undefined;\n  };\n\n  _proto.setMutationDefaults = function setMutationDefaults(mutationKey, options) {\n    var result = this.mutationDefaults.find(function (x) {\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.hashQueryKey)(mutationKey) === (0,_utils__WEBPACK_IMPORTED_MODULE_4__.hashQueryKey)(x.mutationKey);\n    });\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.mutationDefaults.push({\n        mutationKey: mutationKey,\n        defaultOptions: options\n      });\n    }\n  };\n\n  _proto.getMutationDefaults = function getMutationDefaults(mutationKey) {\n    var _this$mutationDefault;\n\n    return mutationKey ? (_this$mutationDefault = this.mutationDefaults.find(function (x) {\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(mutationKey, x.mutationKey);\n    })) == null ? void 0 : _this$mutationDefault.defaultOptions : undefined;\n  };\n\n  _proto.defaultQueryOptions = function defaultQueryOptions(options) {\n    if (options == null ? void 0 : options._defaulted) {\n      return options;\n    }\n\n    var defaultedOptions = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({}, this.defaultOptions.queries, this.getQueryDefaults(options == null ? void 0 : options.queryKey), options, {\n      _defaulted: true\n    });\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.hashQueryKeyByOptions)(defaultedOptions.queryKey, defaultedOptions);\n    }\n\n    return defaultedOptions;\n  };\n\n  _proto.defaultQueryObserverOptions = function defaultQueryObserverOptions(options) {\n    return this.defaultQueryOptions(options);\n  };\n\n  _proto.defaultMutationOptions = function defaultMutationOptions(options) {\n    if (options == null ? void 0 : options._defaulted) {\n      return options;\n    }\n\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({}, this.defaultOptions.mutations, this.getMutationDefaults(options == null ? void 0 : options.mutationKey), options, {\n      _defaulted: true\n    });\n  };\n\n  _proto.clear = function clear() {\n    this.queryCache.clear();\n    this.mutationCache.clear();\n  };\n\n  return QueryClient;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/queryClient.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/queryObserver.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-query/es/core/queryObserver.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"QueryObserver\": () => (/* binding */ QueryObserver)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./node_modules/react-query/es/core/utils.js\");\n/* harmony import */ var _notifyManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./notifyManager */ \"./node_modules/react-query/es/core/notifyManager.js\");\n/* harmony import */ var _focusManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./focusManager */ \"./node_modules/react-query/es/core/focusManager.js\");\n/* harmony import */ var _subscribable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./subscribable */ \"./node_modules/react-query/es/core/subscribable.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logger */ \"./node_modules/react-query/es/core/logger.js\");\n/* harmony import */ var _retryer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./retryer */ \"./node_modules/react-query/es/core/retryer.js\");\n\n\n\n\n\n\n\n\nvar QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.selectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    var nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result, defaultedOptions) {\n    var _this2 = this;\n\n    var trackedResult = {};\n\n    var trackProp = function trackProp(key) {\n      if (!_this2.trackedProps.includes(key)) {\n        _this2.trackedProps.push(key);\n      }\n    };\n\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          trackProp(key);\n          return result[key];\n        }\n      });\n    });\n\n    if (defaultedOptions.useErrorBoundary || defaultedOptions.suspense) {\n      trackProp('error');\n    }\n\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, options, {\n      meta: {\n        refetchPage: options == null ? void 0 : options.refetchPage\n      }\n    }));\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(_utils__WEBPACK_IMPORTED_MODULE_2__.noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (_utils__WEBPACK_IMPORTED_MODULE_2__.isServer || this.currentResult.isStale || !(0,_utils__WEBPACK_IMPORTED_MODULE_2__.isValidTimeout)(this.options.staleTime)) {\n      return;\n    }\n\n    var time = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.timeUntilStale)(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.computeRefetchInterval = function computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval(nextInterval) {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (_utils__WEBPACK_IMPORTED_MODULE_2__.isServer || this.options.enabled === false || !(0,_utils__WEBPACK_IMPORTED_MODULE_2__.isValidTimeout)(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || _focusManager__WEBPACK_IMPORTED_MODULE_3__.focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {\n          data = this.selectResult;\n        } else {\n          try {\n            this.selectFn = options.select;\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.replaceEqualDeep)(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.selectResult = data;\n            this.selectError = null;\n          } catch (selectError) {\n            (0,_logger__WEBPACK_IMPORTED_MODULE_4__.getLogger)().error(selectError);\n            this.selectError = selectError;\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && (status === 'loading' || status === 'idle')) {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.replaceEqualDeep)(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.selectError = null;\n          } catch (selectError) {\n            (0,_logger__WEBPACK_IMPORTED_MODULE_4__.getLogger)().error(selectError);\n            this.selectError = selectError;\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError;\n      data = this.selectResult;\n      errorUpdatedAt = Date.now();\n      status = 'error';\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isRefetching: isFetching && status !== 'loading',\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if ((0,_utils__WEBPACK_IMPORTED_MODULE_2__.shallowEqualObjects)(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !(0,_retryer__WEBPACK_IMPORTED_MODULE_5__.isCancelledError)(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    _notifyManager__WEBPACK_IMPORTED_MODULE_6__.notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(_subscribable__WEBPACK_IMPORTED_MODULE_7__.Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    var value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9xdWVyeU9ic2VydmVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9xdWVyeU9ic2VydmVyLmpzPzFlMGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2VcIjtcbmltcG9ydCB7IGlzU2VydmVyLCBpc1ZhbGlkVGltZW91dCwgbm9vcCwgcmVwbGFjZUVxdWFsRGVlcCwgc2hhbGxvd0VxdWFsT2JqZWN0cywgdGltZVVudGlsU3RhbGUgfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCB7IG5vdGlmeU1hbmFnZXIgfSBmcm9tICcuL25vdGlmeU1hbmFnZXInO1xuaW1wb3J0IHsgZm9jdXNNYW5hZ2VyIH0gZnJvbSAnLi9mb2N1c01hbmFnZXInO1xuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSAnLi9zdWJzY3JpYmFibGUnO1xuaW1wb3J0IHsgZ2V0TG9nZ2VyIH0gZnJvbSAnLi9sb2dnZXInO1xuaW1wb3J0IHsgaXNDYW5jZWxsZWRFcnJvciB9IGZyb20gJy4vcmV0cnllcic7XG5leHBvcnQgdmFyIFF1ZXJ5T2JzZXJ2ZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9TdWJzY3JpYmFibGUpIHtcbiAgX2luaGVyaXRzTG9vc2UoUXVlcnlPYnNlcnZlciwgX1N1YnNjcmliYWJsZSk7XG5cbiAgZnVuY3Rpb24gUXVlcnlPYnNlcnZlcihjbGllbnQsIG9wdGlvbnMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9TdWJzY3JpYmFibGUuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgIF90aGlzLmNsaWVudCA9IGNsaWVudDtcbiAgICBfdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICBfdGhpcy50cmFja2VkUHJvcHMgPSBbXTtcbiAgICBfdGhpcy5zZWxlY3RFcnJvciA9IG51bGw7XG5cbiAgICBfdGhpcy5iaW5kTWV0aG9kcygpO1xuXG4gICAgX3RoaXMuc2V0T3B0aW9ucyhvcHRpb25zKTtcblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBRdWVyeU9ic2VydmVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8uYmluZE1ldGhvZHMgPSBmdW5jdGlvbiBiaW5kTWV0aG9kcygpIHtcbiAgICB0aGlzLnJlbW92ZSA9IHRoaXMucmVtb3ZlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5yZWZldGNoID0gdGhpcy5yZWZldGNoLmJpbmQodGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLm9uU3Vic2NyaWJlID0gZnVuY3Rpb24gb25TdWJzY3JpYmUoKSB7XG4gICAgaWYgKHRoaXMubGlzdGVuZXJzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgdGhpcy5jdXJyZW50UXVlcnkuYWRkT2JzZXJ2ZXIodGhpcyk7XG5cbiAgICAgIGlmIChzaG91bGRGZXRjaE9uTW91bnQodGhpcy5jdXJyZW50UXVlcnksIHRoaXMub3B0aW9ucykpIHtcbiAgICAgICAgdGhpcy5leGVjdXRlRmV0Y2goKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy51cGRhdGVUaW1lcnMoKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLm9uVW5zdWJzY3JpYmUgPSBmdW5jdGlvbiBvblVuc3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy5saXN0ZW5lcnMubGVuZ3RoKSB7XG4gICAgICB0aGlzLmRlc3Ryb3koKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnNob3VsZEZldGNoT25SZWNvbm5lY3QgPSBmdW5jdGlvbiBzaG91bGRGZXRjaE9uUmVjb25uZWN0KCkge1xuICAgIHJldHVybiBzaG91bGRGZXRjaE9uKHRoaXMuY3VycmVudFF1ZXJ5LCB0aGlzLm9wdGlvbnMsIHRoaXMub3B0aW9ucy5yZWZldGNoT25SZWNvbm5lY3QpO1xuICB9O1xuXG4gIF9wcm90by5zaG91bGRGZXRjaE9uV2luZG93Rm9jdXMgPSBmdW5jdGlvbiBzaG91bGRGZXRjaE9uV2luZG93Rm9jdXMoKSB7XG4gICAgcmV0dXJuIHNob3VsZEZldGNoT24odGhpcy5jdXJyZW50UXVlcnksIHRoaXMub3B0aW9ucywgdGhpcy5vcHRpb25zLnJlZmV0Y2hPbldpbmRvd0ZvY3VzKTtcbiAgfTtcblxuICBfcHJvdG8uZGVzdHJveSA9IGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMgPSBbXTtcbiAgICB0aGlzLmNsZWFyVGltZXJzKCk7XG4gICAgdGhpcy5jdXJyZW50UXVlcnkucmVtb3ZlT2JzZXJ2ZXIodGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLnNldE9wdGlvbnMgPSBmdW5jdGlvbiBzZXRPcHRpb25zKG9wdGlvbnMsIG5vdGlmeU9wdGlvbnMpIHtcbiAgICB2YXIgcHJldk9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG4gICAgdmFyIHByZXZRdWVyeSA9IHRoaXMuY3VycmVudFF1ZXJ5O1xuICAgIHRoaXMub3B0aW9ucyA9IHRoaXMuY2xpZW50LmRlZmF1bHRRdWVyeU9ic2VydmVyT3B0aW9ucyhvcHRpb25zKTtcblxuICAgIGlmICh0eXBlb2YgdGhpcy5vcHRpb25zLmVuYWJsZWQgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB0aGlzLm9wdGlvbnMuZW5hYmxlZCAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIGVuYWJsZWQgdG8gYmUgYSBib29sZWFuJyk7XG4gICAgfSAvLyBLZWVwIHByZXZpb3VzIHF1ZXJ5IGtleSBpZiB0aGUgdXNlciBkb2VzIG5vdCBzdXBwbHkgb25lXG5cblxuICAgIGlmICghdGhpcy5vcHRpb25zLnF1ZXJ5S2V5KSB7XG4gICAgICB0aGlzLm9wdGlvbnMucXVlcnlLZXkgPSBwcmV2T3B0aW9ucy5xdWVyeUtleTtcbiAgICB9XG5cbiAgICB0aGlzLnVwZGF0ZVF1ZXJ5KCk7XG4gICAgdmFyIG1vdW50ZWQgPSB0aGlzLmhhc0xpc3RlbmVycygpOyAvLyBGZXRjaCBpZiB0aGVyZSBhcmUgc3Vic2NyaWJlcnNcblxuICAgIGlmIChtb3VudGVkICYmIHNob3VsZEZldGNoT3B0aW9uYWxseSh0aGlzLmN1cnJlbnRRdWVyeSwgcHJldlF1ZXJ5LCB0aGlzLm9wdGlvbnMsIHByZXZPcHRpb25zKSkge1xuICAgICAgdGhpcy5leGVjdXRlRmV0Y2goKTtcbiAgICB9IC8vIFVwZGF0ZSByZXN1bHRcblxuXG4gICAgdGhpcy51cGRhdGVSZXN1bHQobm90aWZ5T3B0aW9ucyk7IC8vIFVwZGF0ZSBzdGFsZSBpbnRlcnZhbCBpZiBuZWVkZWRcblxuICAgIGlmIChtb3VudGVkICYmICh0aGlzLmN1cnJlbnRRdWVyeSAhPT0gcHJldlF1ZXJ5IHx8IHRoaXMub3B0aW9ucy5lbmFibGVkICE9PSBwcmV2T3B0aW9ucy5lbmFibGVkIHx8IHRoaXMub3B0aW9ucy5zdGFsZVRpbWUgIT09IHByZXZPcHRpb25zLnN0YWxlVGltZSkpIHtcbiAgICAgIHRoaXMudXBkYXRlU3RhbGVUaW1lb3V0KCk7XG4gICAgfVxuXG4gICAgdmFyIG5leHRSZWZldGNoSW50ZXJ2YWwgPSB0aGlzLmNvbXB1dGVSZWZldGNoSW50ZXJ2YWwoKTsgLy8gVXBkYXRlIHJlZmV0Y2ggaW50ZXJ2YWwgaWYgbmVlZGVkXG5cbiAgICBpZiAobW91bnRlZCAmJiAodGhpcy5jdXJyZW50UXVlcnkgIT09IHByZXZRdWVyeSB8fCB0aGlzLm9wdGlvbnMuZW5hYmxlZCAhPT0gcHJldk9wdGlvbnMuZW5hYmxlZCB8fCBuZXh0UmVmZXRjaEludGVydmFsICE9PSB0aGlzLmN1cnJlbnRSZWZldGNoSW50ZXJ2YWwpKSB7XG4gICAgICB0aGlzLnVwZGF0ZVJlZmV0Y2hJbnRlcnZhbChuZXh0UmVmZXRjaEludGVydmFsKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmdldE9wdGltaXN0aWNSZXN1bHQgPSBmdW5jdGlvbiBnZXRPcHRpbWlzdGljUmVzdWx0KG9wdGlvbnMpIHtcbiAgICB2YXIgZGVmYXVsdGVkT3B0aW9ucyA9IHRoaXMuY2xpZW50LmRlZmF1bHRRdWVyeU9ic2VydmVyT3B0aW9ucyhvcHRpb25zKTtcbiAgICB2YXIgcXVlcnkgPSB0aGlzLmNsaWVudC5nZXRRdWVyeUNhY2hlKCkuYnVpbGQodGhpcy5jbGllbnQsIGRlZmF1bHRlZE9wdGlvbnMpO1xuICAgIHJldHVybiB0aGlzLmNyZWF0ZVJlc3VsdChxdWVyeSwgZGVmYXVsdGVkT3B0aW9ucyk7XG4gIH07XG5cbiAgX3Byb3RvLmdldEN1cnJlbnRSZXN1bHQgPSBmdW5jdGlvbiBnZXRDdXJyZW50UmVzdWx0KCkge1xuICAgIHJldHVybiB0aGlzLmN1cnJlbnRSZXN1bHQ7XG4gIH07XG5cbiAgX3Byb3RvLnRyYWNrUmVzdWx0ID0gZnVuY3Rpb24gdHJhY2tSZXN1bHQocmVzdWx0LCBkZWZhdWx0ZWRPcHRpb25zKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB2YXIgdHJhY2tlZFJlc3VsdCA9IHt9O1xuXG4gICAgdmFyIHRyYWNrUHJvcCA9IGZ1bmN0aW9uIHRyYWNrUHJvcChrZXkpIHtcbiAgICAgIGlmICghX3RoaXMyLnRyYWNrZWRQcm9wcy5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICAgIF90aGlzMi50cmFja2VkUHJvcHMucHVzaChrZXkpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBPYmplY3Qua2V5cyhyZXN1bHQpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRyYWNrZWRSZXN1bHQsIGtleSwge1xuICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgICB0cmFja1Byb3Aoa2V5KTtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0W2tleV07XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgaWYgKGRlZmF1bHRlZE9wdGlvbnMudXNlRXJyb3JCb3VuZGFyeSB8fCBkZWZhdWx0ZWRPcHRpb25zLnN1c3BlbnNlKSB7XG4gICAgICB0cmFja1Byb3AoJ2Vycm9yJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRyYWNrZWRSZXN1bHQ7XG4gIH07XG5cbiAgX3Byb3RvLmdldE5leHRSZXN1bHQgPSBmdW5jdGlvbiBnZXROZXh0UmVzdWx0KG9wdGlvbnMpIHtcbiAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB2YXIgdW5zdWJzY3JpYmUgPSBfdGhpczMuc3Vic2NyaWJlKGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgaWYgKCFyZXN1bHQuaXNGZXRjaGluZykge1xuICAgICAgICAgIHVuc3Vic2NyaWJlKCk7XG5cbiAgICAgICAgICBpZiAocmVzdWx0LmlzRXJyb3IgJiYgKG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMudGhyb3dPbkVycm9yKSkge1xuICAgICAgICAgICAgcmVqZWN0KHJlc3VsdC5lcnJvcik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIF9wcm90by5nZXRDdXJyZW50UXVlcnkgPSBmdW5jdGlvbiBnZXRDdXJyZW50UXVlcnkoKSB7XG4gICAgcmV0dXJuIHRoaXMuY3VycmVudFF1ZXJ5O1xuICB9O1xuXG4gIF9wcm90by5yZW1vdmUgPSBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgdGhpcy5jbGllbnQuZ2V0UXVlcnlDYWNoZSgpLnJlbW92ZSh0aGlzLmN1cnJlbnRRdWVyeSk7XG4gIH07XG5cbiAgX3Byb3RvLnJlZmV0Y2ggPSBmdW5jdGlvbiByZWZldGNoKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5mZXRjaChfZXh0ZW5kcyh7fSwgb3B0aW9ucywge1xuICAgICAgbWV0YToge1xuICAgICAgICByZWZldGNoUGFnZTogb3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5yZWZldGNoUGFnZVxuICAgICAgfVxuICAgIH0pKTtcbiAgfTtcblxuICBfcHJvdG8uZmV0Y2hPcHRpbWlzdGljID0gZnVuY3Rpb24gZmV0Y2hPcHRpbWlzdGljKG9wdGlvbnMpIHtcbiAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgIHZhciBkZWZhdWx0ZWRPcHRpb25zID0gdGhpcy5jbGllbnQuZGVmYXVsdFF1ZXJ5T2JzZXJ2ZXJPcHRpb25zKG9wdGlvbnMpO1xuICAgIHZhciBxdWVyeSA9IHRoaXMuY2xpZW50LmdldFF1ZXJ5Q2FjaGUoKS5idWlsZCh0aGlzLmNsaWVudCwgZGVmYXVsdGVkT3B0aW9ucyk7XG4gICAgcmV0dXJuIHF1ZXJ5LmZldGNoKCkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3RoaXM0LmNyZWF0ZVJlc3VsdChxdWVyeSwgZGVmYXVsdGVkT3B0aW9ucyk7XG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLmZldGNoID0gZnVuY3Rpb24gZmV0Y2goZmV0Y2hPcHRpb25zKSB7XG4gICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICByZXR1cm4gdGhpcy5leGVjdXRlRmV0Y2goZmV0Y2hPcHRpb25zKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzNS51cGRhdGVSZXN1bHQoKTtcblxuICAgICAgcmV0dXJuIF90aGlzNS5jdXJyZW50UmVzdWx0O1xuICAgIH0pO1xuICB9O1xuXG4gIF9wcm90by5leGVjdXRlRmV0Y2ggPSBmdW5jdGlvbiBleGVjdXRlRmV0Y2goZmV0Y2hPcHRpb25zKSB7XG4gICAgLy8gTWFrZSBzdXJlIHdlIHJlZmVyZW5jZSB0aGUgbGF0ZXN0IHF1ZXJ5IGFzIHRoZSBjdXJyZW50IG9uZSBtaWdodCBoYXZlIGJlZW4gcmVtb3ZlZFxuICAgIHRoaXMudXBkYXRlUXVlcnkoKTsgLy8gRmV0Y2hcblxuICAgIHZhciBwcm9taXNlID0gdGhpcy5jdXJyZW50UXVlcnkuZmV0Y2godGhpcy5vcHRpb25zLCBmZXRjaE9wdGlvbnMpO1xuXG4gICAgaWYgKCEoZmV0Y2hPcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBmZXRjaE9wdGlvbnMudGhyb3dPbkVycm9yKSkge1xuICAgICAgcHJvbWlzZSA9IHByb21pc2UuY2F0Y2gobm9vcCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHByb21pc2U7XG4gIH07XG5cbiAgX3Byb3RvLnVwZGF0ZVN0YWxlVGltZW91dCA9IGZ1bmN0aW9uIHVwZGF0ZVN0YWxlVGltZW91dCgpIHtcbiAgICB2YXIgX3RoaXM2ID0gdGhpcztcblxuICAgIHRoaXMuY2xlYXJTdGFsZVRpbWVvdXQoKTtcblxuICAgIGlmIChpc1NlcnZlciB8fCB0aGlzLmN1cnJlbnRSZXN1bHQuaXNTdGFsZSB8fCAhaXNWYWxpZFRpbWVvdXQodGhpcy5vcHRpb25zLnN0YWxlVGltZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgdGltZSA9IHRpbWVVbnRpbFN0YWxlKHRoaXMuY3VycmVudFJlc3VsdC5kYXRhVXBkYXRlZEF0LCB0aGlzLm9wdGlvbnMuc3RhbGVUaW1lKTsgLy8gVGhlIHRpbWVvdXQgaXMgc29tZXRpbWVzIHRyaWdnZXJlZCAxIG1zIGJlZm9yZSB0aGUgc3RhbGUgdGltZSBleHBpcmF0aW9uLlxuICAgIC8vIFRvIG1pdGlnYXRlIHRoaXMgaXNzdWUgd2UgYWx3YXlzIGFkZCAxIG1zIHRvIHRoZSB0aW1lb3V0LlxuXG4gICAgdmFyIHRpbWVvdXQgPSB0aW1lICsgMTtcbiAgICB0aGlzLnN0YWxlVGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIV90aGlzNi5jdXJyZW50UmVzdWx0LmlzU3RhbGUpIHtcbiAgICAgICAgX3RoaXM2LnVwZGF0ZVJlc3VsdCgpO1xuICAgICAgfVxuICAgIH0sIHRpbWVvdXQpO1xuICB9O1xuXG4gIF9wcm90by5jb21wdXRlUmVmZXRjaEludGVydmFsID0gZnVuY3Rpb24gY29tcHV0ZVJlZmV0Y2hJbnRlcnZhbCgpIHtcbiAgICB2YXIgX3RoaXMkb3B0aW9ucyRyZWZldGNoO1xuXG4gICAgcmV0dXJuIHR5cGVvZiB0aGlzLm9wdGlvbnMucmVmZXRjaEludGVydmFsID09PSAnZnVuY3Rpb24nID8gdGhpcy5vcHRpb25zLnJlZmV0Y2hJbnRlcnZhbCh0aGlzLmN1cnJlbnRSZXN1bHQuZGF0YSwgdGhpcy5jdXJyZW50UXVlcnkpIDogKF90aGlzJG9wdGlvbnMkcmVmZXRjaCA9IHRoaXMub3B0aW9ucy5yZWZldGNoSW50ZXJ2YWwpICE9IG51bGwgPyBfdGhpcyRvcHRpb25zJHJlZmV0Y2ggOiBmYWxzZTtcbiAgfTtcblxuICBfcHJvdG8udXBkYXRlUmVmZXRjaEludGVydmFsID0gZnVuY3Rpb24gdXBkYXRlUmVmZXRjaEludGVydmFsKG5leHRJbnRlcnZhbCkge1xuICAgIHZhciBfdGhpczcgPSB0aGlzO1xuXG4gICAgdGhpcy5jbGVhclJlZmV0Y2hJbnRlcnZhbCgpO1xuICAgIHRoaXMuY3VycmVudFJlZmV0Y2hJbnRlcnZhbCA9IG5leHRJbnRlcnZhbDtcblxuICAgIGlmIChpc1NlcnZlciB8fCB0aGlzLm9wdGlvbnMuZW5hYmxlZCA9PT0gZmFsc2UgfHwgIWlzVmFsaWRUaW1lb3V0KHRoaXMuY3VycmVudFJlZmV0Y2hJbnRlcnZhbCkgfHwgdGhpcy5jdXJyZW50UmVmZXRjaEludGVydmFsID09PSAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5yZWZldGNoSW50ZXJ2YWxJZCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChfdGhpczcub3B0aW9ucy5yZWZldGNoSW50ZXJ2YWxJbkJhY2tncm91bmQgfHwgZm9jdXNNYW5hZ2VyLmlzRm9jdXNlZCgpKSB7XG4gICAgICAgIF90aGlzNy5leGVjdXRlRmV0Y2goKTtcbiAgICAgIH1cbiAgICB9LCB0aGlzLmN1cnJlbnRSZWZldGNoSW50ZXJ2YWwpO1xuICB9O1xuXG4gIF9wcm90by51cGRhdGVUaW1lcnMgPSBmdW5jdGlvbiB1cGRhdGVUaW1lcnMoKSB7XG4gICAgdGhpcy51cGRhdGVTdGFsZVRpbWVvdXQoKTtcbiAgICB0aGlzLnVwZGF0ZVJlZmV0Y2hJbnRlcnZhbCh0aGlzLmNvbXB1dGVSZWZldGNoSW50ZXJ2YWwoKSk7XG4gIH07XG5cbiAgX3Byb3RvLmNsZWFyVGltZXJzID0gZnVuY3Rpb24gY2xlYXJUaW1lcnMoKSB7XG4gICAgdGhpcy5jbGVhclN0YWxlVGltZW91dCgpO1xuICAgIHRoaXMuY2xlYXJSZWZldGNoSW50ZXJ2YWwoKTtcbiAgfTtcblxuICBfcHJvdG8uY2xlYXJTdGFsZVRpbWVvdXQgPSBmdW5jdGlvbiBjbGVhclN0YWxlVGltZW91dCgpIHtcbiAgICBpZiAodGhpcy5zdGFsZVRpbWVvdXRJZCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuc3RhbGVUaW1lb3V0SWQpO1xuICAgICAgdGhpcy5zdGFsZVRpbWVvdXRJZCA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmNsZWFyUmVmZXRjaEludGVydmFsID0gZnVuY3Rpb24gY2xlYXJSZWZldGNoSW50ZXJ2YWwoKSB7XG4gICAgaWYgKHRoaXMucmVmZXRjaEludGVydmFsSWQpIHtcbiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5yZWZldGNoSW50ZXJ2YWxJZCk7XG4gICAgICB0aGlzLnJlZmV0Y2hJbnRlcnZhbElkID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uY3JlYXRlUmVzdWx0ID0gZnVuY3Rpb24gY3JlYXRlUmVzdWx0KHF1ZXJ5LCBvcHRpb25zKSB7XG4gICAgdmFyIHByZXZRdWVyeSA9IHRoaXMuY3VycmVudFF1ZXJ5O1xuICAgIHZhciBwcmV2T3B0aW9ucyA9IHRoaXMub3B0aW9ucztcbiAgICB2YXIgcHJldlJlc3VsdCA9IHRoaXMuY3VycmVudFJlc3VsdDtcbiAgICB2YXIgcHJldlJlc3VsdFN0YXRlID0gdGhpcy5jdXJyZW50UmVzdWx0U3RhdGU7XG4gICAgdmFyIHByZXZSZXN1bHRPcHRpb25zID0gdGhpcy5jdXJyZW50UmVzdWx0T3B0aW9ucztcbiAgICB2YXIgcXVlcnlDaGFuZ2UgPSBxdWVyeSAhPT0gcHJldlF1ZXJ5O1xuICAgIHZhciBxdWVyeUluaXRpYWxTdGF0ZSA9IHF1ZXJ5Q2hhbmdlID8gcXVlcnkuc3RhdGUgOiB0aGlzLmN1cnJlbnRRdWVyeUluaXRpYWxTdGF0ZTtcbiAgICB2YXIgcHJldlF1ZXJ5UmVzdWx0ID0gcXVlcnlDaGFuZ2UgPyB0aGlzLmN1cnJlbnRSZXN1bHQgOiB0aGlzLnByZXZpb3VzUXVlcnlSZXN1bHQ7XG4gICAgdmFyIHN0YXRlID0gcXVlcnkuc3RhdGU7XG4gICAgdmFyIGRhdGFVcGRhdGVkQXQgPSBzdGF0ZS5kYXRhVXBkYXRlZEF0LFxuICAgICAgICBlcnJvciA9IHN0YXRlLmVycm9yLFxuICAgICAgICBlcnJvclVwZGF0ZWRBdCA9IHN0YXRlLmVycm9yVXBkYXRlZEF0LFxuICAgICAgICBpc0ZldGNoaW5nID0gc3RhdGUuaXNGZXRjaGluZyxcbiAgICAgICAgc3RhdHVzID0gc3RhdGUuc3RhdHVzO1xuICAgIHZhciBpc1ByZXZpb3VzRGF0YSA9IGZhbHNlO1xuICAgIHZhciBpc1BsYWNlaG9sZGVyRGF0YSA9IGZhbHNlO1xuICAgIHZhciBkYXRhOyAvLyBPcHRpbWlzdGljYWxseSBzZXQgcmVzdWx0IGluIGZldGNoaW5nIHN0YXRlIGlmIG5lZWRlZFxuXG4gICAgaWYgKG9wdGlvbnMub3B0aW1pc3RpY1Jlc3VsdHMpIHtcbiAgICAgIHZhciBtb3VudGVkID0gdGhpcy5oYXNMaXN0ZW5lcnMoKTtcbiAgICAgIHZhciBmZXRjaE9uTW91bnQgPSAhbW91bnRlZCAmJiBzaG91bGRGZXRjaE9uTW91bnQocXVlcnksIG9wdGlvbnMpO1xuICAgICAgdmFyIGZldGNoT3B0aW9uYWxseSA9IG1vdW50ZWQgJiYgc2hvdWxkRmV0Y2hPcHRpb25hbGx5KHF1ZXJ5LCBwcmV2UXVlcnksIG9wdGlvbnMsIHByZXZPcHRpb25zKTtcblxuICAgICAgaWYgKGZldGNoT25Nb3VudCB8fCBmZXRjaE9wdGlvbmFsbHkpIHtcbiAgICAgICAgaXNGZXRjaGluZyA9IHRydWU7XG5cbiAgICAgICAgaWYgKCFkYXRhVXBkYXRlZEF0KSB7XG4gICAgICAgICAgc3RhdHVzID0gJ2xvYWRpbmcnO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSAvLyBLZWVwIHByZXZpb3VzIGRhdGEgaWYgbmVlZGVkXG5cblxuICAgIGlmIChvcHRpb25zLmtlZXBQcmV2aW91c0RhdGEgJiYgIXN0YXRlLmRhdGFVcGRhdGVDb3VudCAmJiAocHJldlF1ZXJ5UmVzdWx0ID09IG51bGwgPyB2b2lkIDAgOiBwcmV2UXVlcnlSZXN1bHQuaXNTdWNjZXNzKSAmJiBzdGF0dXMgIT09ICdlcnJvcicpIHtcbiAgICAgIGRhdGEgPSBwcmV2UXVlcnlSZXN1bHQuZGF0YTtcbiAgICAgIGRhdGFVcGRhdGVkQXQgPSBwcmV2UXVlcnlSZXN1bHQuZGF0YVVwZGF0ZWRBdDtcbiAgICAgIHN0YXR1cyA9IHByZXZRdWVyeVJlc3VsdC5zdGF0dXM7XG4gICAgICBpc1ByZXZpb3VzRGF0YSA9IHRydWU7XG4gICAgfSAvLyBTZWxlY3QgZGF0YSBpZiBuZWVkZWRcbiAgICBlbHNlIGlmIChvcHRpb25zLnNlbGVjdCAmJiB0eXBlb2Ygc3RhdGUuZGF0YSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgLy8gTWVtb2l6ZSBzZWxlY3QgcmVzdWx0XG4gICAgICAgIGlmIChwcmV2UmVzdWx0ICYmIHN0YXRlLmRhdGEgPT09IChwcmV2UmVzdWx0U3RhdGUgPT0gbnVsbCA/IHZvaWQgMCA6IHByZXZSZXN1bHRTdGF0ZS5kYXRhKSAmJiBvcHRpb25zLnNlbGVjdCA9PT0gdGhpcy5zZWxlY3RGbikge1xuICAgICAgICAgIGRhdGEgPSB0aGlzLnNlbGVjdFJlc3VsdDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RGbiA9IG9wdGlvbnMuc2VsZWN0O1xuICAgICAgICAgICAgZGF0YSA9IG9wdGlvbnMuc2VsZWN0KHN0YXRlLmRhdGEpO1xuXG4gICAgICAgICAgICBpZiAob3B0aW9ucy5zdHJ1Y3R1cmFsU2hhcmluZyAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgZGF0YSA9IHJlcGxhY2VFcXVhbERlZXAocHJldlJlc3VsdCA9PSBudWxsID8gdm9pZCAwIDogcHJldlJlc3VsdC5kYXRhLCBkYXRhKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5zZWxlY3RSZXN1bHQgPSBkYXRhO1xuICAgICAgICAgICAgdGhpcy5zZWxlY3RFcnJvciA9IG51bGw7XG4gICAgICAgICAgfSBjYXRjaCAoc2VsZWN0RXJyb3IpIHtcbiAgICAgICAgICAgIGdldExvZ2dlcigpLmVycm9yKHNlbGVjdEVycm9yKTtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0RXJyb3IgPSBzZWxlY3RFcnJvcjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gLy8gVXNlIHF1ZXJ5IGRhdGFcbiAgICAgIGVsc2Uge1xuICAgICAgICAgIGRhdGEgPSBzdGF0ZS5kYXRhO1xuICAgICAgICB9IC8vIFNob3cgcGxhY2Vob2xkZXIgZGF0YSBpZiBuZWVkZWRcblxuXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLnBsYWNlaG9sZGVyRGF0YSAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGRhdGEgPT09ICd1bmRlZmluZWQnICYmIChzdGF0dXMgPT09ICdsb2FkaW5nJyB8fCBzdGF0dXMgPT09ICdpZGxlJykpIHtcbiAgICAgIHZhciBwbGFjZWhvbGRlckRhdGE7IC8vIE1lbW9pemUgcGxhY2Vob2xkZXIgZGF0YVxuXG4gICAgICBpZiAoKHByZXZSZXN1bHQgPT0gbnVsbCA/IHZvaWQgMCA6IHByZXZSZXN1bHQuaXNQbGFjZWhvbGRlckRhdGEpICYmIG9wdGlvbnMucGxhY2Vob2xkZXJEYXRhID09PSAocHJldlJlc3VsdE9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IHByZXZSZXN1bHRPcHRpb25zLnBsYWNlaG9sZGVyRGF0YSkpIHtcbiAgICAgICAgcGxhY2Vob2xkZXJEYXRhID0gcHJldlJlc3VsdC5kYXRhO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGxhY2Vob2xkZXJEYXRhID0gdHlwZW9mIG9wdGlvbnMucGxhY2Vob2xkZXJEYXRhID09PSAnZnVuY3Rpb24nID8gb3B0aW9ucy5wbGFjZWhvbGRlckRhdGEoKSA6IG9wdGlvbnMucGxhY2Vob2xkZXJEYXRhO1xuXG4gICAgICAgIGlmIChvcHRpb25zLnNlbGVjdCAmJiB0eXBlb2YgcGxhY2Vob2xkZXJEYXRhICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBwbGFjZWhvbGRlckRhdGEgPSBvcHRpb25zLnNlbGVjdChwbGFjZWhvbGRlckRhdGEpO1xuXG4gICAgICAgICAgICBpZiAob3B0aW9ucy5zdHJ1Y3R1cmFsU2hhcmluZyAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgcGxhY2Vob2xkZXJEYXRhID0gcmVwbGFjZUVxdWFsRGVlcChwcmV2UmVzdWx0ID09IG51bGwgPyB2b2lkIDAgOiBwcmV2UmVzdWx0LmRhdGEsIHBsYWNlaG9sZGVyRGF0YSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuc2VsZWN0RXJyb3IgPSBudWxsO1xuICAgICAgICAgIH0gY2F0Y2ggKHNlbGVjdEVycm9yKSB7XG4gICAgICAgICAgICBnZXRMb2dnZXIoKS5lcnJvcihzZWxlY3RFcnJvcik7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdEVycm9yID0gc2VsZWN0RXJyb3I7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgcGxhY2Vob2xkZXJEYXRhICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBzdGF0dXMgPSAnc3VjY2Vzcyc7XG4gICAgICAgIGRhdGEgPSBwbGFjZWhvbGRlckRhdGE7XG4gICAgICAgIGlzUGxhY2Vob2xkZXJEYXRhID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodGhpcy5zZWxlY3RFcnJvcikge1xuICAgICAgZXJyb3IgPSB0aGlzLnNlbGVjdEVycm9yO1xuICAgICAgZGF0YSA9IHRoaXMuc2VsZWN0UmVzdWx0O1xuICAgICAgZXJyb3JVcGRhdGVkQXQgPSBEYXRlLm5vdygpO1xuICAgICAgc3RhdHVzID0gJ2Vycm9yJztcbiAgICB9XG5cbiAgICB2YXIgcmVzdWx0ID0ge1xuICAgICAgc3RhdHVzOiBzdGF0dXMsXG4gICAgICBpc0xvYWRpbmc6IHN0YXR1cyA9PT0gJ2xvYWRpbmcnLFxuICAgICAgaXNTdWNjZXNzOiBzdGF0dXMgPT09ICdzdWNjZXNzJyxcbiAgICAgIGlzRXJyb3I6IHN0YXR1cyA9PT0gJ2Vycm9yJyxcbiAgICAgIGlzSWRsZTogc3RhdHVzID09PSAnaWRsZScsXG4gICAgICBkYXRhOiBkYXRhLFxuICAgICAgZGF0YVVwZGF0ZWRBdDogZGF0YVVwZGF0ZWRBdCxcbiAgICAgIGVycm9yOiBlcnJvcixcbiAgICAgIGVycm9yVXBkYXRlZEF0OiBlcnJvclVwZGF0ZWRBdCxcbiAgICAgIGZhaWx1cmVDb3VudDogc3RhdGUuZmV0Y2hGYWlsdXJlQ291bnQsXG4gICAgICBlcnJvclVwZGF0ZUNvdW50OiBzdGF0ZS5lcnJvclVwZGF0ZUNvdW50LFxuICAgICAgaXNGZXRjaGVkOiBzdGF0ZS5kYXRhVXBkYXRlQ291bnQgPiAwIHx8IHN0YXRlLmVycm9yVXBkYXRlQ291bnQgPiAwLFxuICAgICAgaXNGZXRjaGVkQWZ0ZXJNb3VudDogc3RhdGUuZGF0YVVwZGF0ZUNvdW50ID4gcXVlcnlJbml0aWFsU3RhdGUuZGF0YVVwZGF0ZUNvdW50IHx8IHN0YXRlLmVycm9yVXBkYXRlQ291bnQgPiBxdWVyeUluaXRpYWxTdGF0ZS5lcnJvclVwZGF0ZUNvdW50LFxuICAgICAgaXNGZXRjaGluZzogaXNGZXRjaGluZyxcbiAgICAgIGlzUmVmZXRjaGluZzogaXNGZXRjaGluZyAmJiBzdGF0dXMgIT09ICdsb2FkaW5nJyxcbiAgICAgIGlzTG9hZGluZ0Vycm9yOiBzdGF0dXMgPT09ICdlcnJvcicgJiYgc3RhdGUuZGF0YVVwZGF0ZWRBdCA9PT0gMCxcbiAgICAgIGlzUGxhY2Vob2xkZXJEYXRhOiBpc1BsYWNlaG9sZGVyRGF0YSxcbiAgICAgIGlzUHJldmlvdXNEYXRhOiBpc1ByZXZpb3VzRGF0YSxcbiAgICAgIGlzUmVmZXRjaEVycm9yOiBzdGF0dXMgPT09ICdlcnJvcicgJiYgc3RhdGUuZGF0YVVwZGF0ZWRBdCAhPT0gMCxcbiAgICAgIGlzU3RhbGU6IGlzU3RhbGUocXVlcnksIG9wdGlvbnMpLFxuICAgICAgcmVmZXRjaDogdGhpcy5yZWZldGNoLFxuICAgICAgcmVtb3ZlOiB0aGlzLnJlbW92ZVxuICAgIH07XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICBfcHJvdG8uc2hvdWxkTm90aWZ5TGlzdGVuZXJzID0gZnVuY3Rpb24gc2hvdWxkTm90aWZ5TGlzdGVuZXJzKHJlc3VsdCwgcHJldlJlc3VsdCkge1xuICAgIGlmICghcHJldlJlc3VsdCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgdmFyIF90aGlzJG9wdGlvbnMgPSB0aGlzLm9wdGlvbnMsXG4gICAgICAgIG5vdGlmeU9uQ2hhbmdlUHJvcHMgPSBfdGhpcyRvcHRpb25zLm5vdGlmeU9uQ2hhbmdlUHJvcHMsXG4gICAgICAgIG5vdGlmeU9uQ2hhbmdlUHJvcHNFeGNsdXNpb25zID0gX3RoaXMkb3B0aW9ucy5ub3RpZnlPbkNoYW5nZVByb3BzRXhjbHVzaW9ucztcblxuICAgIGlmICghbm90aWZ5T25DaGFuZ2VQcm9wcyAmJiAhbm90aWZ5T25DaGFuZ2VQcm9wc0V4Y2x1c2lvbnMpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGlmIChub3RpZnlPbkNoYW5nZVByb3BzID09PSAndHJhY2tlZCcgJiYgIXRoaXMudHJhY2tlZFByb3BzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgdmFyIGluY2x1ZGVkUHJvcHMgPSBub3RpZnlPbkNoYW5nZVByb3BzID09PSAndHJhY2tlZCcgPyB0aGlzLnRyYWNrZWRQcm9wcyA6IG5vdGlmeU9uQ2hhbmdlUHJvcHM7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKHJlc3VsdCkuc29tZShmdW5jdGlvbiAoa2V5KSB7XG4gICAgICB2YXIgdHlwZWRLZXkgPSBrZXk7XG4gICAgICB2YXIgY2hhbmdlZCA9IHJlc3VsdFt0eXBlZEtleV0gIT09IHByZXZSZXN1bHRbdHlwZWRLZXldO1xuICAgICAgdmFyIGlzSW5jbHVkZWQgPSBpbmNsdWRlZFByb3BzID09IG51bGwgPyB2b2lkIDAgOiBpbmNsdWRlZFByb3BzLnNvbWUoZnVuY3Rpb24gKHgpIHtcbiAgICAgICAgcmV0dXJuIHggPT09IGtleTtcbiAgICAgIH0pO1xuICAgICAgdmFyIGlzRXhjbHVkZWQgPSBub3RpZnlPbkNoYW5nZVByb3BzRXhjbHVzaW9ucyA9PSBudWxsID8gdm9pZCAwIDogbm90aWZ5T25DaGFuZ2VQcm9wc0V4Y2x1c2lvbnMuc29tZShmdW5jdGlvbiAoeCkge1xuICAgICAgICByZXR1cm4geCA9PT0ga2V5O1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gY2hhbmdlZCAmJiAhaXNFeGNsdWRlZCAmJiAoIWluY2x1ZGVkUHJvcHMgfHwgaXNJbmNsdWRlZCk7XG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLnVwZGF0ZVJlc3VsdCA9IGZ1bmN0aW9uIHVwZGF0ZVJlc3VsdChub3RpZnlPcHRpb25zKSB7XG4gICAgdmFyIHByZXZSZXN1bHQgPSB0aGlzLmN1cnJlbnRSZXN1bHQ7XG4gICAgdGhpcy5jdXJyZW50UmVzdWx0ID0gdGhpcy5jcmVhdGVSZXN1bHQodGhpcy5jdXJyZW50UXVlcnksIHRoaXMub3B0aW9ucyk7XG4gICAgdGhpcy5jdXJyZW50UmVzdWx0U3RhdGUgPSB0aGlzLmN1cnJlbnRRdWVyeS5zdGF0ZTtcbiAgICB0aGlzLmN1cnJlbnRSZXN1bHRPcHRpb25zID0gdGhpcy5vcHRpb25zOyAvLyBPbmx5IG5vdGlmeSBpZiBzb21ldGhpbmcgaGFzIGNoYW5nZWRcblxuICAgIGlmIChzaGFsbG93RXF1YWxPYmplY3RzKHRoaXMuY3VycmVudFJlc3VsdCwgcHJldlJlc3VsdCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIERldGVybWluZSB3aGljaCBjYWxsYmFja3MgdG8gdHJpZ2dlclxuXG5cbiAgICB2YXIgZGVmYXVsdE5vdGlmeU9wdGlvbnMgPSB7XG4gICAgICBjYWNoZTogdHJ1ZVxuICAgIH07XG5cbiAgICBpZiAoKG5vdGlmeU9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG5vdGlmeU9wdGlvbnMubGlzdGVuZXJzKSAhPT0gZmFsc2UgJiYgdGhpcy5zaG91bGROb3RpZnlMaXN0ZW5lcnModGhpcy5jdXJyZW50UmVzdWx0LCBwcmV2UmVzdWx0KSkge1xuICAgICAgZGVmYXVsdE5vdGlmeU9wdGlvbnMubGlzdGVuZXJzID0gdHJ1ZTtcbiAgICB9XG5cbiAgICB0aGlzLm5vdGlmeShfZXh0ZW5kcyh7fSwgZGVmYXVsdE5vdGlmeU9wdGlvbnMsIG5vdGlmeU9wdGlvbnMpKTtcbiAgfTtcblxuICBfcHJvdG8udXBkYXRlUXVlcnkgPSBmdW5jdGlvbiB1cGRhdGVRdWVyeSgpIHtcbiAgICB2YXIgcXVlcnkgPSB0aGlzLmNsaWVudC5nZXRRdWVyeUNhY2hlKCkuYnVpbGQodGhpcy5jbGllbnQsIHRoaXMub3B0aW9ucyk7XG5cbiAgICBpZiAocXVlcnkgPT09IHRoaXMuY3VycmVudFF1ZXJ5KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIHByZXZRdWVyeSA9IHRoaXMuY3VycmVudFF1ZXJ5O1xuICAgIHRoaXMuY3VycmVudFF1ZXJ5ID0gcXVlcnk7XG4gICAgdGhpcy5jdXJyZW50UXVlcnlJbml0aWFsU3RhdGUgPSBxdWVyeS5zdGF0ZTtcbiAgICB0aGlzLnByZXZpb3VzUXVlcnlSZXN1bHQgPSB0aGlzLmN1cnJlbnRSZXN1bHQ7XG5cbiAgICBpZiAodGhpcy5oYXNMaXN0ZW5lcnMoKSkge1xuICAgICAgcHJldlF1ZXJ5ID09IG51bGwgPyB2b2lkIDAgOiBwcmV2UXVlcnkucmVtb3ZlT2JzZXJ2ZXIodGhpcyk7XG4gICAgICBxdWVyeS5hZGRPYnNlcnZlcih0aGlzKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLm9uUXVlcnlVcGRhdGUgPSBmdW5jdGlvbiBvblF1ZXJ5VXBkYXRlKGFjdGlvbikge1xuICAgIHZhciBub3RpZnlPcHRpb25zID0ge307XG5cbiAgICBpZiAoYWN0aW9uLnR5cGUgPT09ICdzdWNjZXNzJykge1xuICAgICAgbm90aWZ5T3B0aW9ucy5vblN1Y2Nlc3MgPSB0cnVlO1xuICAgIH0gZWxzZSBpZiAoYWN0aW9uLnR5cGUgPT09ICdlcnJvcicgJiYgIWlzQ2FuY2VsbGVkRXJyb3IoYWN0aW9uLmVycm9yKSkge1xuICAgICAgbm90aWZ5T3B0aW9ucy5vbkVycm9yID0gdHJ1ZTtcbiAgICB9XG5cbiAgICB0aGlzLnVwZGF0ZVJlc3VsdChub3RpZnlPcHRpb25zKTtcblxuICAgIGlmICh0aGlzLmhhc0xpc3RlbmVycygpKSB7XG4gICAgICB0aGlzLnVwZGF0ZVRpbWVycygpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8ubm90aWZ5ID0gZnVuY3Rpb24gbm90aWZ5KG5vdGlmeU9wdGlvbnMpIHtcbiAgICB2YXIgX3RoaXM4ID0gdGhpcztcblxuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goZnVuY3Rpb24gKCkge1xuICAgICAgLy8gRmlyc3QgdHJpZ2dlciB0aGUgY29uZmlndXJhdGlvbiBjYWxsYmFja3NcbiAgICAgIGlmIChub3RpZnlPcHRpb25zLm9uU3VjY2Vzcykge1xuICAgICAgICBfdGhpczgub3B0aW9ucy5vblN1Y2Nlc3MgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzOC5vcHRpb25zLm9uU3VjY2VzcyhfdGhpczguY3VycmVudFJlc3VsdC5kYXRhKTtcbiAgICAgICAgX3RoaXM4Lm9wdGlvbnMub25TZXR0bGVkID09IG51bGwgPyB2b2lkIDAgOiBfdGhpczgub3B0aW9ucy5vblNldHRsZWQoX3RoaXM4LmN1cnJlbnRSZXN1bHQuZGF0YSwgbnVsbCk7XG4gICAgICB9IGVsc2UgaWYgKG5vdGlmeU9wdGlvbnMub25FcnJvcikge1xuICAgICAgICBfdGhpczgub3B0aW9ucy5vbkVycm9yID09IG51bGwgPyB2b2lkIDAgOiBfdGhpczgub3B0aW9ucy5vbkVycm9yKF90aGlzOC5jdXJyZW50UmVzdWx0LmVycm9yKTtcbiAgICAgICAgX3RoaXM4Lm9wdGlvbnMub25TZXR0bGVkID09IG51bGwgPyB2b2lkIDAgOiBfdGhpczgub3B0aW9ucy5vblNldHRsZWQodW5kZWZpbmVkLCBfdGhpczguY3VycmVudFJlc3VsdC5lcnJvcik7XG4gICAgICB9IC8vIFRoZW4gdHJpZ2dlciB0aGUgbGlzdGVuZXJzXG5cblxuICAgICAgaWYgKG5vdGlmeU9wdGlvbnMubGlzdGVuZXJzKSB7XG4gICAgICAgIF90aGlzOC5saXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgICAgICBsaXN0ZW5lcihfdGhpczguY3VycmVudFJlc3VsdCk7XG4gICAgICAgIH0pO1xuICAgICAgfSAvLyBUaGVuIHRoZSBjYWNoZSBsaXN0ZW5lcnNcblxuXG4gICAgICBpZiAobm90aWZ5T3B0aW9ucy5jYWNoZSkge1xuICAgICAgICBfdGhpczguY2xpZW50LmdldFF1ZXJ5Q2FjaGUoKS5ub3RpZnkoe1xuICAgICAgICAgIHF1ZXJ5OiBfdGhpczguY3VycmVudFF1ZXJ5LFxuICAgICAgICAgIHR5cGU6ICdvYnNlcnZlclJlc3VsdHNVcGRhdGVkJ1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUXVlcnlPYnNlcnZlcjtcbn0oU3Vic2NyaWJhYmxlKTtcblxuZnVuY3Rpb24gc2hvdWxkTG9hZE9uTW91bnQocXVlcnksIG9wdGlvbnMpIHtcbiAgcmV0dXJuIG9wdGlvbnMuZW5hYmxlZCAhPT0gZmFsc2UgJiYgIXF1ZXJ5LnN0YXRlLmRhdGFVcGRhdGVkQXQgJiYgIShxdWVyeS5zdGF0ZS5zdGF0dXMgPT09ICdlcnJvcicgJiYgb3B0aW9ucy5yZXRyeU9uTW91bnQgPT09IGZhbHNlKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkRmV0Y2hPbk1vdW50KHF1ZXJ5LCBvcHRpb25zKSB7XG4gIHJldHVybiBzaG91bGRMb2FkT25Nb3VudChxdWVyeSwgb3B0aW9ucykgfHwgcXVlcnkuc3RhdGUuZGF0YVVwZGF0ZWRBdCA+IDAgJiYgc2hvdWxkRmV0Y2hPbihxdWVyeSwgb3B0aW9ucywgb3B0aW9ucy5yZWZldGNoT25Nb3VudCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZEZldGNoT24ocXVlcnksIG9wdGlvbnMsIGZpZWxkKSB7XG4gIGlmIChvcHRpb25zLmVuYWJsZWQgIT09IGZhbHNlKSB7XG4gICAgdmFyIHZhbHVlID0gdHlwZW9mIGZpZWxkID09PSAnZnVuY3Rpb24nID8gZmllbGQocXVlcnkpIDogZmllbGQ7XG4gICAgcmV0dXJuIHZhbHVlID09PSAnYWx3YXlzJyB8fCB2YWx1ZSAhPT0gZmFsc2UgJiYgaXNTdGFsZShxdWVyeSwgb3B0aW9ucyk7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIHNob3VsZEZldGNoT3B0aW9uYWxseShxdWVyeSwgcHJldlF1ZXJ5LCBvcHRpb25zLCBwcmV2T3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucy5lbmFibGVkICE9PSBmYWxzZSAmJiAocXVlcnkgIT09IHByZXZRdWVyeSB8fCBwcmV2T3B0aW9ucy5lbmFibGVkID09PSBmYWxzZSkgJiYgKCFvcHRpb25zLnN1c3BlbnNlIHx8IHF1ZXJ5LnN0YXRlLnN0YXR1cyAhPT0gJ2Vycm9yJykgJiYgaXNTdGFsZShxdWVyeSwgb3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIGlzU3RhbGUocXVlcnksIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHF1ZXJ5LmlzU3RhbGVCeVRpbWUob3B0aW9ucy5zdGFsZVRpbWUpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/queryObserver.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/retryer.js":
/*!*****************************************************!*\
  !*** ./node_modules/react-query/es/core/retryer.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isCancelable\": () => (/* binding */ isCancelable),\n/* harmony export */   \"isCancelledError\": () => (/* binding */ isCancelledError),\n/* harmony export */   \"Retryer\": () => (/* binding */ Retryer)\n/* harmony export */ });\n/* unused harmony export CancelledError */\n/* harmony import */ var _focusManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./focusManager */ \"./node_modules/react-query/es/core/focusManager.js\");\n/* harmony import */ var _onlineManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./onlineManager */ \"./node_modules/react-query/es/core/onlineManager.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/react-query/es/core/utils.js\");\n\n\n\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * Math.pow(2, failureCount), 30000);\n}\n\nfunction isCancelable(value) {\n  return typeof (value == null ? void 0 : value.cancel) === 'function';\n}\nvar CancelledError = function CancelledError(options) {\n  this.revert = options == null ? void 0 : options.revert;\n  this.silent = options == null ? void 0 : options.silent;\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n} // CLASS\n\nvar Retryer = function Retryer(config) {\n  var _this = this;\n\n  var cancelRetry = false;\n  var cancelFn;\n  var continueFn;\n  var promiseResolve;\n  var promiseReject;\n  this.abort = config.abort;\n\n  this.cancel = function (cancelOptions) {\n    return cancelFn == null ? void 0 : cancelFn(cancelOptions);\n  };\n\n  this.cancelRetry = function () {\n    cancelRetry = true;\n  };\n\n  this.continueRetry = function () {\n    cancelRetry = false;\n  };\n\n  this.continue = function () {\n    return continueFn == null ? void 0 : continueFn();\n  };\n\n  this.failureCount = 0;\n  this.isPaused = false;\n  this.isResolved = false;\n  this.isTransportCancelable = false;\n  this.promise = new Promise(function (outerResolve, outerReject) {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  var resolve = function resolve(value) {\n    if (!_this.isResolved) {\n      _this.isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  var reject = function reject(value) {\n    if (!_this.isResolved) {\n      _this.isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  var pause = function pause() {\n    return new Promise(function (continueResolve) {\n      continueFn = continueResolve;\n      _this.isPaused = true;\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(function () {\n      continueFn = undefined;\n      _this.isPaused = false;\n      config.onContinue == null ? void 0 : config.onContinue();\n    });\n  }; // Create loop function\n\n\n  var run = function run() {\n    // Do nothing if already resolved\n    if (_this.isResolved) {\n      return;\n    }\n\n    var promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    } // Create callback to cancel this fetch\n\n\n    cancelFn = function cancelFn(cancelOptions) {\n      if (!_this.isResolved) {\n        reject(new CancelledError(cancelOptions));\n        _this.abort == null ? void 0 : _this.abort(); // Cancel transport if supported\n\n        if (isCancelable(promiseOrValue)) {\n          try {\n            promiseOrValue.cancel();\n          } catch (_unused) {}\n        }\n      }\n    }; // Check if the transport layer support cancellation\n\n\n    _this.isTransportCancelable = isCancelable(promiseOrValue);\n    Promise.resolve(promiseOrValue).then(resolve).catch(function (error) {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (_this.isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      var retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      var retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      var delay = typeof retryDelay === 'function' ? retryDelay(_this.failureCount, error) : retryDelay;\n      var shouldRetry = retry === true || typeof retry === 'number' && _this.failureCount < retry || typeof retry === 'function' && retry(_this.failureCount, error);\n\n      if (cancelRetry || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      _this.failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(_this.failureCount, error); // Delay\n\n      (0,_utils__WEBPACK_IMPORTED_MODULE_0__.sleep)(delay) // Pause if the document is not visible or when the device is offline\n      .then(function () {\n        if (!_focusManager__WEBPACK_IMPORTED_MODULE_1__.focusManager.isFocused() || !_onlineManager__WEBPACK_IMPORTED_MODULE_2__.onlineManager.isOnline()) {\n          return pause();\n        }\n      }).then(function () {\n        if (cancelRetry) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  run();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9yZXRyeWVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9yZXRyeWVyLmpzP2M3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9jdXNNYW5hZ2VyIH0gZnJvbSAnLi9mb2N1c01hbmFnZXInO1xuaW1wb3J0IHsgb25saW5lTWFuYWdlciB9IGZyb20gJy4vb25saW5lTWFuYWdlcic7XG5pbXBvcnQgeyBzbGVlcCB9IGZyb20gJy4vdXRpbHMnO1xuXG5mdW5jdGlvbiBkZWZhdWx0UmV0cnlEZWxheShmYWlsdXJlQ291bnQpIHtcbiAgcmV0dXJuIE1hdGgubWluKDEwMDAgKiBNYXRoLnBvdygyLCBmYWlsdXJlQ291bnQpLCAzMDAwMCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0NhbmNlbGFibGUodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiAodmFsdWUgPT0gbnVsbCA/IHZvaWQgMCA6IHZhbHVlLmNhbmNlbCkgPT09ICdmdW5jdGlvbic7XG59XG5leHBvcnQgdmFyIENhbmNlbGxlZEVycm9yID0gZnVuY3Rpb24gQ2FuY2VsbGVkRXJyb3Iob3B0aW9ucykge1xuICB0aGlzLnJldmVydCA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMucmV2ZXJ0O1xuICB0aGlzLnNpbGVudCA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuc2lsZW50O1xufTtcbmV4cG9ydCBmdW5jdGlvbiBpc0NhbmNlbGxlZEVycm9yKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIENhbmNlbGxlZEVycm9yO1xufSAvLyBDTEFTU1xuXG5leHBvcnQgdmFyIFJldHJ5ZXIgPSBmdW5jdGlvbiBSZXRyeWVyKGNvbmZpZykge1xuICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gIHZhciBjYW5jZWxSZXRyeSA9IGZhbHNlO1xuICB2YXIgY2FuY2VsRm47XG4gIHZhciBjb250aW51ZUZuO1xuICB2YXIgcHJvbWlzZVJlc29sdmU7XG4gIHZhciBwcm9taXNlUmVqZWN0O1xuICB0aGlzLmFib3J0ID0gY29uZmlnLmFib3J0O1xuXG4gIHRoaXMuY2FuY2VsID0gZnVuY3Rpb24gKGNhbmNlbE9wdGlvbnMpIHtcbiAgICByZXR1cm4gY2FuY2VsRm4gPT0gbnVsbCA/IHZvaWQgMCA6IGNhbmNlbEZuKGNhbmNlbE9wdGlvbnMpO1xuICB9O1xuXG4gIHRoaXMuY2FuY2VsUmV0cnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgY2FuY2VsUmV0cnkgPSB0cnVlO1xuICB9O1xuXG4gIHRoaXMuY29udGludWVSZXRyeSA9IGZ1bmN0aW9uICgpIHtcbiAgICBjYW5jZWxSZXRyeSA9IGZhbHNlO1xuICB9O1xuXG4gIHRoaXMuY29udGludWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGNvbnRpbnVlRm4gPT0gbnVsbCA/IHZvaWQgMCA6IGNvbnRpbnVlRm4oKTtcbiAgfTtcblxuICB0aGlzLmZhaWx1cmVDb3VudCA9IDA7XG4gIHRoaXMuaXNQYXVzZWQgPSBmYWxzZTtcbiAgdGhpcy5pc1Jlc29sdmVkID0gZmFsc2U7XG4gIHRoaXMuaXNUcmFuc3BvcnRDYW5jZWxhYmxlID0gZmFsc2U7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChvdXRlclJlc29sdmUsIG91dGVyUmVqZWN0KSB7XG4gICAgcHJvbWlzZVJlc29sdmUgPSBvdXRlclJlc29sdmU7XG4gICAgcHJvbWlzZVJlamVjdCA9IG91dGVyUmVqZWN0O1xuICB9KTtcblxuICB2YXIgcmVzb2x2ZSA9IGZ1bmN0aW9uIHJlc29sdmUodmFsdWUpIHtcbiAgICBpZiAoIV90aGlzLmlzUmVzb2x2ZWQpIHtcbiAgICAgIF90aGlzLmlzUmVzb2x2ZWQgPSB0cnVlO1xuICAgICAgY29uZmlnLm9uU3VjY2VzcyA9PSBudWxsID8gdm9pZCAwIDogY29uZmlnLm9uU3VjY2Vzcyh2YWx1ZSk7XG4gICAgICBjb250aW51ZUZuID09IG51bGwgPyB2b2lkIDAgOiBjb250aW51ZUZuKCk7XG4gICAgICBwcm9taXNlUmVzb2x2ZSh2YWx1ZSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciByZWplY3QgPSBmdW5jdGlvbiByZWplY3QodmFsdWUpIHtcbiAgICBpZiAoIV90aGlzLmlzUmVzb2x2ZWQpIHtcbiAgICAgIF90aGlzLmlzUmVzb2x2ZWQgPSB0cnVlO1xuICAgICAgY29uZmlnLm9uRXJyb3IgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5vbkVycm9yKHZhbHVlKTtcbiAgICAgIGNvbnRpbnVlRm4gPT0gbnVsbCA/IHZvaWQgMCA6IGNvbnRpbnVlRm4oKTtcbiAgICAgIHByb21pc2VSZWplY3QodmFsdWUpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgcGF1c2UgPSBmdW5jdGlvbiBwYXVzZSgpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKGNvbnRpbnVlUmVzb2x2ZSkge1xuICAgICAgY29udGludWVGbiA9IGNvbnRpbnVlUmVzb2x2ZTtcbiAgICAgIF90aGlzLmlzUGF1c2VkID0gdHJ1ZTtcbiAgICAgIGNvbmZpZy5vblBhdXNlID09IG51bGwgPyB2b2lkIDAgOiBjb25maWcub25QYXVzZSgpO1xuICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgY29udGludWVGbiA9IHVuZGVmaW5lZDtcbiAgICAgIF90aGlzLmlzUGF1c2VkID0gZmFsc2U7XG4gICAgICBjb25maWcub25Db250aW51ZSA9PSBudWxsID8gdm9pZCAwIDogY29uZmlnLm9uQ29udGludWUoKTtcbiAgICB9KTtcbiAgfTsgLy8gQ3JlYXRlIGxvb3AgZnVuY3Rpb25cblxuXG4gIHZhciBydW4gPSBmdW5jdGlvbiBydW4oKSB7XG4gICAgLy8gRG8gbm90aGluZyBpZiBhbHJlYWR5IHJlc29sdmVkXG4gICAgaWYgKF90aGlzLmlzUmVzb2x2ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgcHJvbWlzZU9yVmFsdWU7IC8vIEV4ZWN1dGUgcXVlcnlcblxuICAgIHRyeSB7XG4gICAgICBwcm9taXNlT3JWYWx1ZSA9IGNvbmZpZy5mbigpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBwcm9taXNlT3JWYWx1ZSA9IFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICB9IC8vIENyZWF0ZSBjYWxsYmFjayB0byBjYW5jZWwgdGhpcyBmZXRjaFxuXG5cbiAgICBjYW5jZWxGbiA9IGZ1bmN0aW9uIGNhbmNlbEZuKGNhbmNlbE9wdGlvbnMpIHtcbiAgICAgIGlmICghX3RoaXMuaXNSZXNvbHZlZCkge1xuICAgICAgICByZWplY3QobmV3IENhbmNlbGxlZEVycm9yKGNhbmNlbE9wdGlvbnMpKTtcbiAgICAgICAgX3RoaXMuYWJvcnQgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzLmFib3J0KCk7IC8vIENhbmNlbCB0cmFuc3BvcnQgaWYgc3VwcG9ydGVkXG5cbiAgICAgICAgaWYgKGlzQ2FuY2VsYWJsZShwcm9taXNlT3JWYWx1ZSkpIHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgcHJvbWlzZU9yVmFsdWUuY2FuY2VsKCk7XG4gICAgICAgICAgfSBjYXRjaCAoX3VudXNlZCkge31cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07IC8vIENoZWNrIGlmIHRoZSB0cmFuc3BvcnQgbGF5ZXIgc3VwcG9ydCBjYW5jZWxsYXRpb25cblxuXG4gICAgX3RoaXMuaXNUcmFuc3BvcnRDYW5jZWxhYmxlID0gaXNDYW5jZWxhYmxlKHByb21pc2VPclZhbHVlKTtcbiAgICBQcm9taXNlLnJlc29sdmUocHJvbWlzZU9yVmFsdWUpLnRoZW4ocmVzb2x2ZSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICB2YXIgX2NvbmZpZyRyZXRyeSwgX2NvbmZpZyRyZXRyeURlbGF5O1xuXG4gICAgICAvLyBTdG9wIGlmIHRoZSBmZXRjaCBpcyBhbHJlYWR5IHJlc29sdmVkXG4gICAgICBpZiAoX3RoaXMuaXNSZXNvbHZlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9IC8vIERvIHdlIG5lZWQgdG8gcmV0cnkgdGhlIHJlcXVlc3Q/XG5cblxuICAgICAgdmFyIHJldHJ5ID0gKF9jb25maWckcmV0cnkgPSBjb25maWcucmV0cnkpICE9IG51bGwgPyBfY29uZmlnJHJldHJ5IDogMztcbiAgICAgIHZhciByZXRyeURlbGF5ID0gKF9jb25maWckcmV0cnlEZWxheSA9IGNvbmZpZy5yZXRyeURlbGF5KSAhPSBudWxsID8gX2NvbmZpZyRyZXRyeURlbGF5IDogZGVmYXVsdFJldHJ5RGVsYXk7XG4gICAgICB2YXIgZGVsYXkgPSB0eXBlb2YgcmV0cnlEZWxheSA9PT0gJ2Z1bmN0aW9uJyA/IHJldHJ5RGVsYXkoX3RoaXMuZmFpbHVyZUNvdW50LCBlcnJvcikgOiByZXRyeURlbGF5O1xuICAgICAgdmFyIHNob3VsZFJldHJ5ID0gcmV0cnkgPT09IHRydWUgfHwgdHlwZW9mIHJldHJ5ID09PSAnbnVtYmVyJyAmJiBfdGhpcy5mYWlsdXJlQ291bnQgPCByZXRyeSB8fCB0eXBlb2YgcmV0cnkgPT09ICdmdW5jdGlvbicgJiYgcmV0cnkoX3RoaXMuZmFpbHVyZUNvdW50LCBlcnJvcik7XG5cbiAgICAgIGlmIChjYW5jZWxSZXRyeSB8fCAhc2hvdWxkUmV0cnkpIHtcbiAgICAgICAgLy8gV2UgYXJlIGRvbmUgaWYgdGhlIHF1ZXJ5IGRvZXMgbm90IG5lZWQgdG8gYmUgcmV0cmllZFxuICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIF90aGlzLmZhaWx1cmVDb3VudCsrOyAvLyBOb3RpZnkgb24gZmFpbFxuXG4gICAgICBjb25maWcub25GYWlsID09IG51bGwgPyB2b2lkIDAgOiBjb25maWcub25GYWlsKF90aGlzLmZhaWx1cmVDb3VudCwgZXJyb3IpOyAvLyBEZWxheVxuXG4gICAgICBzbGVlcChkZWxheSkgLy8gUGF1c2UgaWYgdGhlIGRvY3VtZW50IGlzIG5vdCB2aXNpYmxlIG9yIHdoZW4gdGhlIGRldmljZSBpcyBvZmZsaW5lXG4gICAgICAudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghZm9jdXNNYW5hZ2VyLmlzRm9jdXNlZCgpIHx8ICFvbmxpbmVNYW5hZ2VyLmlzT25saW5lKCkpIHtcbiAgICAgICAgICByZXR1cm4gcGF1c2UoKTtcbiAgICAgICAgfVxuICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChjYW5jZWxSZXRyeSkge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcnVuKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9OyAvLyBTdGFydCBsb29wXG5cblxuICBydW4oKTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/retryer.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/subscribable.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-query/es/core/subscribable.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Subscribable\": () => (/* binding */ Subscribable)\n/* harmony export */ });\nvar Subscribable = /*#__PURE__*/function () {\n  function Subscribable() {\n    this.listeners = [];\n  }\n\n  var _proto = Subscribable.prototype;\n\n  _proto.subscribe = function subscribe(listener) {\n    var _this = this;\n\n    var callback = listener || function () {\n      return undefined;\n    };\n\n    this.listeners.push(callback);\n    this.onSubscribe();\n    return function () {\n      _this.listeners = _this.listeners.filter(function (x) {\n        return x !== callback;\n      });\n\n      _this.onUnsubscribe();\n    };\n  };\n\n  _proto.hasListeners = function hasListeners() {\n    return this.listeners.length > 0;\n  };\n\n  _proto.onSubscribe = function onSubscribe() {// Do nothing\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {// Do nothing\n  };\n\n  return Subscribable;\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvY29yZS9zdWJzY3JpYmFibGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9yZWFjdC1xdWVyeS9lcy9jb3JlL3N1YnNjcmliYWJsZS5qcz80YmFjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgU3Vic2NyaWJhYmxlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU3Vic2NyaWJhYmxlKCkge1xuICAgIHRoaXMubGlzdGVuZXJzID0gW107XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3Vic2NyaWJhYmxlLnByb3RvdHlwZTtcblxuICBfcHJvdG8uc3Vic2NyaWJlID0gZnVuY3Rpb24gc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHZhciBjYWxsYmFjayA9IGxpc3RlbmVyIHx8IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfTtcblxuICAgIHRoaXMubGlzdGVuZXJzLnB1c2goY2FsbGJhY2spO1xuICAgIHRoaXMub25TdWJzY3JpYmUoKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMubGlzdGVuZXJzID0gX3RoaXMubGlzdGVuZXJzLmZpbHRlcihmdW5jdGlvbiAoeCkge1xuICAgICAgICByZXR1cm4geCAhPT0gY2FsbGJhY2s7XG4gICAgICB9KTtcblxuICAgICAgX3RoaXMub25VbnN1YnNjcmliZSgpO1xuICAgIH07XG4gIH07XG5cbiAgX3Byb3RvLmhhc0xpc3RlbmVycyA9IGZ1bmN0aW9uIGhhc0xpc3RlbmVycygpIHtcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5lcnMubGVuZ3RoID4gMDtcbiAgfTtcblxuICBfcHJvdG8ub25TdWJzY3JpYmUgPSBmdW5jdGlvbiBvblN1YnNjcmliZSgpIHsvLyBEbyBub3RoaW5nXG4gIH07XG5cbiAgX3Byb3RvLm9uVW5zdWJzY3JpYmUgPSBmdW5jdGlvbiBvblVuc3Vic2NyaWJlKCkgey8vIERvIG5vdGhpbmdcbiAgfTtcblxuICByZXR1cm4gU3Vic2NyaWJhYmxlO1xufSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/subscribable.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/core/types.js":
/*!***************************************************!*\
  !*** ./node_modules/react-query/es/core/types.js ***!
  \***************************************************/
/***/ (() => {



/***/ }),

/***/ "./node_modules/react-query/es/core/utils.js":
/*!***************************************************!*\
  !*** ./node_modules/react-query/es/core/utils.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isServer\": () => (/* binding */ isServer),\n/* harmony export */   \"noop\": () => (/* binding */ noop),\n/* harmony export */   \"functionalUpdate\": () => (/* binding */ functionalUpdate),\n/* harmony export */   \"isValidTimeout\": () => (/* binding */ isValidTimeout),\n/* harmony export */   \"ensureQueryKeyArray\": () => (/* binding */ ensureQueryKeyArray),\n/* harmony export */   \"timeUntilStale\": () => (/* binding */ timeUntilStale),\n/* harmony export */   \"parseQueryArgs\": () => (/* binding */ parseQueryArgs),\n/* harmony export */   \"parseFilterArgs\": () => (/* binding */ parseFilterArgs),\n/* harmony export */   \"matchQuery\": () => (/* binding */ matchQuery),\n/* harmony export */   \"matchMutation\": () => (/* binding */ matchMutation),\n/* harmony export */   \"hashQueryKeyByOptions\": () => (/* binding */ hashQueryKeyByOptions),\n/* harmony export */   \"hashQueryKey\": () => (/* binding */ hashQueryKey),\n/* harmony export */   \"partialMatchKey\": () => (/* binding */ partialMatchKey),\n/* harmony export */   \"replaceEqualDeep\": () => (/* binding */ replaceEqualDeep),\n/* harmony export */   \"shallowEqualObjects\": () => (/* binding */ shallowEqualObjects),\n/* harmony export */   \"sleep\": () => (/* binding */ sleep),\n/* harmony export */   \"scheduleMicrotask\": () => (/* binding */ scheduleMicrotask),\n/* harmony export */   \"getAbortController\": () => (/* binding */ getAbortController)\n/* harmony export */ });\n/* unused harmony exports difference, replaceAt, parseMutationArgs, parseMutationFilterArgs, mapQueryStatusFilter, stableValueHash, partialDeepEqual, isPlainObject, isQueryKey, isError */\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n\n// TYPES\n// UTILS\nvar isServer = typeof window === 'undefined';\nfunction noop() {\n  return undefined;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nfunction ensureQueryKeyArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nfunction difference(array1, array2) {\n  return array1.filter(function (x) {\n    return array2.indexOf(x) === -1;\n  });\n}\nfunction replaceAt(array, index, value) {\n  var copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, arg3, {\n      queryKey: arg1,\n      queryFn: arg2\n    });\n  }\n\n  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, arg2, {\n    queryKey: arg1\n  });\n}\nfunction parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, arg3, {\n        mutationKey: arg1,\n        mutationFn: arg2\n      });\n    }\n\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, arg2, {\n      mutationKey: arg1\n    });\n  }\n\n  if (typeof arg1 === 'function') {\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, arg2, {\n      mutationFn: arg1\n    });\n  }\n\n  return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, arg1);\n}\nfunction parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [(0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, arg2, {\n    queryKey: arg1\n  }), arg3] : [arg1 || {}, arg2];\n}\nfunction parseMutationFilterArgs(arg1, arg2) {\n  return isQueryKey(arg1) ? (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, arg2, {\n    mutationKey: arg1\n  }) : arg1;\n}\nfunction mapQueryStatusFilter(active, inactive) {\n  if (active === true && inactive === true || active == null && inactive == null) {\n    return 'all';\n  } else if (active === false && inactive === false) {\n    return 'none';\n  } else {\n    // At this point, active|inactive can only be true|false or false|true\n    // so, when only one value is provided, the missing one has to be the negated value\n    var isActive = active != null ? active : !inactive;\n    return isActive ? 'active' : 'inactive';\n  }\n}\nfunction matchQuery(filters, query) {\n  var active = filters.active,\n      exact = filters.exact,\n      fetching = filters.fetching,\n      inactive = filters.inactive,\n      predicate = filters.predicate,\n      queryKey = filters.queryKey,\n      stale = filters.stale;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  var queryStatusFilter = mapQueryStatusFilter(active, inactive);\n\n  if (queryStatusFilter === 'none') {\n    return false;\n  } else if (queryStatusFilter !== 'all') {\n    var isActive = query.isActive();\n\n    if (queryStatusFilter === 'active' && !isActive) {\n      return false;\n    }\n\n    if (queryStatusFilter === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetching === 'boolean' && query.isFetching() !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  var exact = filters.exact,\n      fetching = filters.fetching,\n      predicate = filters.predicate,\n      mutationKey = filters.mutationKey;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  var hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n */\n\nfunction hashQueryKey(queryKey) {\n  var asArray = ensureQueryKeyArray(queryKey);\n  return stableValueHash(asArray);\n}\n/**\n * Hashes the value into a stable hash.\n */\n\nfunction stableValueHash(value) {\n  return JSON.stringify(value, function (_, val) {\n    return isPlainObject(val) ? Object.keys(val).sort().reduce(function (result, key) {\n      result[key] = val[key];\n      return result;\n    }, {}) : val;\n  });\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nfunction partialMatchKey(a, b) {\n  return partialDeepEqual(ensureQueryKeyArray(a), ensureQueryKeyArray(b));\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nfunction partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(function (key) {\n      return !partialDeepEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  var array = Array.isArray(a) && Array.isArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    var aSize = array ? a.length : Object.keys(a).length;\n    var bItems = array ? b : Object.keys(b);\n    var bSize = bItems.length;\n    var copy = array ? [] : {};\n    var equalItems = 0;\n\n    for (var i = 0; i < bSize; i++) {\n      var key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nfunction shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (var key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  var ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  var prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isQueryKey(value) {\n  return typeof value === 'string' || Array.isArray(value);\n}\nfunction isError(value) {\n  return value instanceof Error;\n}\nfunction sleep(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nfunction scheduleMicrotask(callback) {\n  Promise.resolve().then(callback).catch(function (error) {\n    return setTimeout(function () {\n      throw error;\n    });\n  });\n}\nfunction getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/core/utils.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/index.js":
/*!**********************************************!*\
  !*** ./node_modules/react-query/es/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"QueryClient\": () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.QueryClient),\n/* harmony export */   \"QueryClientProvider\": () => (/* reexport safe */ _react__WEBPACK_IMPORTED_MODULE_1__.QueryClientProvider),\n/* harmony export */   \"useQuery\": () => (/* reexport safe */ _react__WEBPACK_IMPORTED_MODULE_1__.useQuery)\n/* harmony export */ });\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core */ \"./node_modules/react-query/es/core/index.js\");\n/* harmony reexport (checked) */ if(__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__, \"QueryClientProvider\")) __webpack_require__.d(__webpack_exports__, { \"QueryClientProvider\": function() { return _core__WEBPACK_IMPORTED_MODULE_0__.QueryClientProvider; } });\n/* harmony reexport (checked) */ if(__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__, \"useQuery\")) __webpack_require__.d(__webpack_exports__, { \"useQuery\": function() { return _core__WEBPACK_IMPORTED_MODULE_0__.useQuery; } });\n/* harmony import */ var _react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./react */ \"./node_modules/react-query/es/react/index.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9yZWFjdC1xdWVyeS9lcy9pbmRleC5qcz9kNTkwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vY29yZSc7XG5leHBvcnQgKiBmcm9tICcuL3JlYWN0JzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/index.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/react/QueryClientProvider.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-query/es/react/QueryClientProvider.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useQueryClient\": () => (/* binding */ useQueryClient),\n/* harmony export */   \"QueryClientProvider\": () => (/* binding */ QueryClientProvider)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar defaultContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(undefined);\nvar QueryClientSharingContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(false); // if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(contextSharing) {\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nvar useQueryClient = function useQueryClient() {\n  var queryClient = react__WEBPACK_IMPORTED_MODULE_0__.useContext(getQueryClientContext(react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nvar QueryClientProvider = function QueryClientProvider(_ref) {\n  var client = _ref.client,\n      _ref$contextSharing = _ref.contextSharing,\n      contextSharing = _ref$contextSharing === void 0 ? false : _ref$contextSharing,\n      children = _ref.children;\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {\n    client.mount();\n    return function () {\n      client.unmount();\n    };\n  }, [client]);\n  var Context = getQueryClientContext(contextSharing);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(QueryClientSharingContext.Provider, {\n    value: contextSharing\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Context.Provider, {\n    value: client\n  }, children));\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvcmVhY3QvUXVlcnlDbGllbnRQcm92aWRlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LXF1ZXJ5L2VzL3JlYWN0L1F1ZXJ5Q2xpZW50UHJvdmlkZXIuanM/ZjkwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xudmFyIGRlZmF1bHRDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUNvbnRleHQodW5kZWZpbmVkKTtcbnZhciBRdWVyeUNsaWVudFNoYXJpbmdDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUNvbnRleHQoZmFsc2UpOyAvLyBpZiBjb250ZXh0U2hhcmluZyBpcyBvbiwgd2Ugc2hhcmUgdGhlIGZpcnN0IGFuZCBhdCBsZWFzdCBvbmVcbi8vIGluc3RhbmNlIG9mIHRoZSBjb250ZXh0IGFjcm9zcyB0aGUgd2luZG93XG4vLyB0byBlbnN1cmUgdGhhdCBpZiBSZWFjdCBRdWVyeSBpcyB1c2VkIGFjcm9zc1xuLy8gZGlmZmVyZW50IGJ1bmRsZXMgb3IgbWljcm9mcm9udGVuZHMgdGhleSB3aWxsXG4vLyBhbGwgdXNlIHRoZSBzYW1lICoqaW5zdGFuY2UqKiBvZiBjb250ZXh0LCByZWdhcmRsZXNzXG4vLyBvZiBtb2R1bGUgc2NvcGluZy5cblxuZnVuY3Rpb24gZ2V0UXVlcnlDbGllbnRDb250ZXh0KGNvbnRleHRTaGFyaW5nKSB7XG4gIGlmIChjb250ZXh0U2hhcmluZyAmJiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgIGlmICghd2luZG93LlJlYWN0UXVlcnlDbGllbnRDb250ZXh0KSB7XG4gICAgICB3aW5kb3cuUmVhY3RRdWVyeUNsaWVudENvbnRleHQgPSBkZWZhdWx0Q29udGV4dDtcbiAgICB9XG5cbiAgICByZXR1cm4gd2luZG93LlJlYWN0UXVlcnlDbGllbnRDb250ZXh0O1xuICB9XG5cbiAgcmV0dXJuIGRlZmF1bHRDb250ZXh0O1xufVxuXG5leHBvcnQgdmFyIHVzZVF1ZXJ5Q2xpZW50ID0gZnVuY3Rpb24gdXNlUXVlcnlDbGllbnQoKSB7XG4gIHZhciBxdWVyeUNsaWVudCA9IFJlYWN0LnVzZUNvbnRleHQoZ2V0UXVlcnlDbGllbnRDb250ZXh0KFJlYWN0LnVzZUNvbnRleHQoUXVlcnlDbGllbnRTaGFyaW5nQ29udGV4dCkpKTtcblxuICBpZiAoIXF1ZXJ5Q2xpZW50KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdObyBRdWVyeUNsaWVudCBzZXQsIHVzZSBRdWVyeUNsaWVudFByb3ZpZGVyIHRvIHNldCBvbmUnKTtcbiAgfVxuXG4gIHJldHVybiBxdWVyeUNsaWVudDtcbn07XG5leHBvcnQgdmFyIFF1ZXJ5Q2xpZW50UHJvdmlkZXIgPSBmdW5jdGlvbiBRdWVyeUNsaWVudFByb3ZpZGVyKF9yZWYpIHtcbiAgdmFyIGNsaWVudCA9IF9yZWYuY2xpZW50LFxuICAgICAgX3JlZiRjb250ZXh0U2hhcmluZyA9IF9yZWYuY29udGV4dFNoYXJpbmcsXG4gICAgICBjb250ZXh0U2hhcmluZyA9IF9yZWYkY29udGV4dFNoYXJpbmcgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRjb250ZXh0U2hhcmluZyxcbiAgICAgIGNoaWxkcmVuID0gX3JlZi5jaGlsZHJlbjtcbiAgUmVhY3QudXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBjbGllbnQubW91bnQoKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgY2xpZW50LnVubW91bnQoKTtcbiAgICB9O1xuICB9LCBbY2xpZW50XSk7XG4gIHZhciBDb250ZXh0ID0gZ2V0UXVlcnlDbGllbnRDb250ZXh0KGNvbnRleHRTaGFyaW5nKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFF1ZXJ5Q2xpZW50U2hhcmluZ0NvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogY29udGV4dFNoYXJpbmdcbiAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBjbGllbnRcbiAgfSwgY2hpbGRyZW4pKTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/react/QueryClientProvider.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/react/QueryErrorResetBoundary.js":
/*!**********************************************************************!*\
  !*** ./node_modules/react-query/es/react/QueryErrorResetBoundary.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useQueryErrorResetBoundary\": () => (/* binding */ useQueryErrorResetBoundary)\n/* harmony export */ });\n/* unused harmony export QueryErrorResetBoundary */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(createValue()); // HOOK\n\nvar useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nvar QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvcmVhY3QvUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvcmVhY3QvUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkuanM/ODk0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnOyAvLyBDT05URVhUXG5cbmZ1bmN0aW9uIGNyZWF0ZVZhbHVlKCkge1xuICB2YXIgX2lzUmVzZXQgPSBmYWxzZTtcbiAgcmV0dXJuIHtcbiAgICBjbGVhclJlc2V0OiBmdW5jdGlvbiBjbGVhclJlc2V0KCkge1xuICAgICAgX2lzUmVzZXQgPSBmYWxzZTtcbiAgICB9LFxuICAgIHJlc2V0OiBmdW5jdGlvbiByZXNldCgpIHtcbiAgICAgIF9pc1Jlc2V0ID0gdHJ1ZTtcbiAgICB9LFxuICAgIGlzUmVzZXQ6IGZ1bmN0aW9uIGlzUmVzZXQoKSB7XG4gICAgICByZXR1cm4gX2lzUmVzZXQ7XG4gICAgfVxuICB9O1xufVxuXG52YXIgUXVlcnlFcnJvclJlc2V0Qm91bmRhcnlDb250ZXh0ID0gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUNvbnRleHQoY3JlYXRlVmFsdWUoKSk7IC8vIEhPT0tcblxuZXhwb3J0IHZhciB1c2VRdWVyeUVycm9yUmVzZXRCb3VuZGFyeSA9IGZ1bmN0aW9uIHVzZVF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5KCkge1xuICByZXR1cm4gUmVhY3QudXNlQ29udGV4dChRdWVyeUVycm9yUmVzZXRCb3VuZGFyeUNvbnRleHQpO1xufTsgLy8gQ09NUE9ORU5UXG5cbmV4cG9ydCB2YXIgUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkgPSBmdW5jdGlvbiBRdWVyeUVycm9yUmVzZXRCb3VuZGFyeShfcmVmKSB7XG4gIHZhciBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW47XG4gIHZhciB2YWx1ZSA9IFJlYWN0LnVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBjcmVhdGVWYWx1ZSgpO1xuICB9LCBbXSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChRdWVyeUVycm9yUmVzZXRCb3VuZGFyeUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICB2YWx1ZTogdmFsdWVcbiAgfSwgdHlwZW9mIGNoaWxkcmVuID09PSAnZnVuY3Rpb24nID8gY2hpbGRyZW4odmFsdWUpIDogY2hpbGRyZW4pO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/react/QueryErrorResetBoundary.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/react/index.js":
/*!****************************************************!*\
  !*** ./node_modules/react-query/es/react/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"QueryClientProvider\": () => (/* reexport safe */ _QueryClientProvider__WEBPACK_IMPORTED_MODULE_2__.QueryClientProvider),\n/* harmony export */   \"useQuery\": () => (/* reexport safe */ _useQuery__WEBPACK_IMPORTED_MODULE_3__.useQuery)\n/* harmony export */ });\n/* harmony import */ var _setBatchUpdatesFn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setBatchUpdatesFn */ \"./node_modules/react-query/es/react/setBatchUpdatesFn.js\");\n/* harmony import */ var _setLogger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./setLogger */ \"./node_modules/react-query/es/react/setLogger.js\");\n/* harmony import */ var _QueryClientProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./QueryClientProvider */ \"./node_modules/react-query/es/react/QueryClientProvider.js\");\n/* harmony import */ var _useQuery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useQuery */ \"./node_modules/react-query/es/react/useQuery.js\");\n// Side effects\n\n\n\n\n\n\n\n\n\n\n // Types\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvcmVhY3QvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LXF1ZXJ5L2VzL3JlYWN0L2luZGV4LmpzPzJhZGMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU2lkZSBlZmZlY3RzXG5pbXBvcnQgJy4vc2V0QmF0Y2hVcGRhdGVzRm4nO1xuaW1wb3J0ICcuL3NldExvZ2dlcic7XG5leHBvcnQgeyBRdWVyeUNsaWVudFByb3ZpZGVyLCB1c2VRdWVyeUNsaWVudCB9IGZyb20gJy4vUXVlcnlDbGllbnRQcm92aWRlcic7XG5leHBvcnQgeyBRdWVyeUVycm9yUmVzZXRCb3VuZGFyeSwgdXNlUXVlcnlFcnJvclJlc2V0Qm91bmRhcnkgfSBmcm9tICcuL1F1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5JztcbmV4cG9ydCB7IHVzZUlzRmV0Y2hpbmcgfSBmcm9tICcuL3VzZUlzRmV0Y2hpbmcnO1xuZXhwb3J0IHsgdXNlSXNNdXRhdGluZyB9IGZyb20gJy4vdXNlSXNNdXRhdGluZyc7XG5leHBvcnQgeyB1c2VNdXRhdGlvbiB9IGZyb20gJy4vdXNlTXV0YXRpb24nO1xuZXhwb3J0IHsgdXNlUXVlcnkgfSBmcm9tICcuL3VzZVF1ZXJ5JztcbmV4cG9ydCB7IHVzZVF1ZXJpZXMgfSBmcm9tICcuL3VzZVF1ZXJpZXMnO1xuZXhwb3J0IHsgdXNlSW5maW5pdGVRdWVyeSB9IGZyb20gJy4vdXNlSW5maW5pdGVRdWVyeSc7XG5leHBvcnQgeyB1c2VIeWRyYXRlLCBIeWRyYXRlIH0gZnJvbSAnLi9IeWRyYXRlJzsgLy8gVHlwZXNcblxuZXhwb3J0ICogZnJvbSAnLi90eXBlcyc7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/react/index.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/react/logger.js":
/*!*****************************************************!*\
  !*** ./node_modules/react-query/es/react/logger.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logger\": () => (/* binding */ logger)\n/* harmony export */ });\nvar logger = console;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvcmVhY3QvbG9nZ2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvcmVhY3QvbG9nZ2VyLmpzP2NlNTMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBsb2dnZXIgPSBjb25zb2xlOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/react/logger.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/react/reactBatchedUpdates.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-query/es/react/reactBatchedUpdates.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unstable_batchedUpdates\": () => (/* binding */ unstable_batchedUpdates)\n/* harmony export */ });\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_0__);\n\nvar unstable_batchedUpdates = (react_dom__WEBPACK_IMPORTED_MODULE_0___default().unstable_batchedUpdates);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvcmVhY3QvcmVhY3RCYXRjaGVkVXBkYXRlcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9yZWFjdC1xdWVyeS9lcy9yZWFjdC9yZWFjdEJhdGNoZWRVcGRhdGVzLmpzPzJlZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5leHBvcnQgdmFyIHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzID0gUmVhY3RET00udW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/react/reactBatchedUpdates.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/react/setBatchUpdatesFn.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-query/es/react/setBatchUpdatesFn.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core */ \"./node_modules/react-query/es/core/notifyManager.js\");\n/* harmony import */ var _reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reactBatchedUpdates */ \"./node_modules/react-query/es/react/reactBatchedUpdates.js\");\n\n\n_core__WEBPACK_IMPORTED_MODULE_0__.notifyManager.setBatchNotifyFunction(_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_1__.unstable_batchedUpdates);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvcmVhY3Qvc2V0QmF0Y2hVcGRhdGVzRm4uanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9yZWFjdC1xdWVyeS9lcy9yZWFjdC9zZXRCYXRjaFVwZGF0ZXNGbi5qcz9kNWE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5vdGlmeU1hbmFnZXIgfSBmcm9tICcuLi9jb3JlJztcbmltcG9ydCB7IHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIH0gZnJvbSAnLi9yZWFjdEJhdGNoZWRVcGRhdGVzJztcbm5vdGlmeU1hbmFnZXIuc2V0QmF0Y2hOb3RpZnlGdW5jdGlvbih1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/react/setBatchUpdatesFn.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/react/setLogger.js":
/*!********************************************************!*\
  !*** ./node_modules/react-query/es/react/setLogger.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core */ \"./node_modules/react-query/es/core/logger.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"./node_modules/react-query/es/react/logger.js\");\n\n\n(0,_core__WEBPACK_IMPORTED_MODULE_0__.setLogger)(_logger__WEBPACK_IMPORTED_MODULE_1__.logger);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvcmVhY3Qvc2V0TG9nZ2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvcmVhY3Qvc2V0TG9nZ2VyLmpzP2M0ZTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2V0TG9nZ2VyIH0gZnJvbSAnLi4vY29yZSc7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuL2xvZ2dlcic7XG5zZXRMb2dnZXIobG9nZ2VyKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/react/setLogger.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/react/useBaseQuery.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-query/es/react/useBaseQuery.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useBaseQuery\": () => (/* binding */ useBaseQuery)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _core_notifyManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/notifyManager */ \"./node_modules/react-query/es/core/notifyManager.js\");\n/* harmony import */ var _QueryErrorResetBoundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./QueryErrorResetBoundary */ \"./node_modules/react-query/es/react/QueryErrorResetBoundary.js\");\n/* harmony import */ var _QueryClientProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./QueryClientProvider */ \"./node_modules/react-query/es/react/QueryClientProvider.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"./node_modules/react-query/es/react/utils.js\");\n\n\n\n\n\nfunction useBaseQuery(options, Observer) {\n  var mountedRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(false);\n\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = (0,_QueryClientProvider__WEBPACK_IMPORTED_MODULE_1__.useQueryClient)();\n  var errorResetBoundary = (0,_QueryErrorResetBoundary__WEBPACK_IMPORTED_MODULE_2__.useQueryErrorResetBoundary)();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = _core_notifyManager__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = _core_notifyManager__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = _core_notifyManager__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    } // Set cache time to 1 if the option has been set to 0\n    // when using suspense to prevent infinite loop of fetches\n\n\n    if (defaultedOptions.cacheTime === 0) {\n      defaultedOptions.cacheTime = 1;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = react__WEBPACK_IMPORTED_MODULE_0__.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(_core_notifyManager__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && (0,_utils__WEBPACK_IMPORTED_MODULE_4__.shouldThrowError)(defaultedOptions.suspense, defaultedOptions.useErrorBoundary, [result.error, observer.getCurrentQuery()])) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result, defaultedOptions);\n  }\n\n  return result;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvcmVhY3QvdXNlQmFzZVF1ZXJ5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL25vZGVfbW9kdWxlcy9yZWFjdC1xdWVyeS9lcy9yZWFjdC91c2VCYXNlUXVlcnkuanM/ZTg5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbm90aWZ5TWFuYWdlciB9IGZyb20gJy4uL2NvcmUvbm90aWZ5TWFuYWdlcic7XG5pbXBvcnQgeyB1c2VRdWVyeUVycm9yUmVzZXRCb3VuZGFyeSB9IGZyb20gJy4vUXVlcnlFcnJvclJlc2V0Qm91bmRhcnknO1xuaW1wb3J0IHsgdXNlUXVlcnlDbGllbnQgfSBmcm9tICcuL1F1ZXJ5Q2xpZW50UHJvdmlkZXInO1xuaW1wb3J0IHsgc2hvdWxkVGhyb3dFcnJvciB9IGZyb20gJy4vdXRpbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUJhc2VRdWVyeShvcHRpb25zLCBPYnNlcnZlcikge1xuICB2YXIgbW91bnRlZFJlZiA9IFJlYWN0LnVzZVJlZihmYWxzZSk7XG5cbiAgdmFyIF9SZWFjdCR1c2VTdGF0ZSA9IFJlYWN0LnVzZVN0YXRlKDApLFxuICAgICAgZm9yY2VVcGRhdGUgPSBfUmVhY3QkdXNlU3RhdGVbMV07XG5cbiAgdmFyIHF1ZXJ5Q2xpZW50ID0gdXNlUXVlcnlDbGllbnQoKTtcbiAgdmFyIGVycm9yUmVzZXRCb3VuZGFyeSA9IHVzZVF1ZXJ5RXJyb3JSZXNldEJvdW5kYXJ5KCk7XG4gIHZhciBkZWZhdWx0ZWRPcHRpb25zID0gcXVlcnlDbGllbnQuZGVmYXVsdFF1ZXJ5T2JzZXJ2ZXJPcHRpb25zKG9wdGlvbnMpOyAvLyBNYWtlIHN1cmUgcmVzdWx0cyBhcmUgb3B0aW1pc3RpY2FsbHkgc2V0IGluIGZldGNoaW5nIHN0YXRlIGJlZm9yZSBzdWJzY3JpYmluZyBvciB1cGRhdGluZyBvcHRpb25zXG5cbiAgZGVmYXVsdGVkT3B0aW9ucy5vcHRpbWlzdGljUmVzdWx0cyA9IHRydWU7IC8vIEluY2x1ZGUgY2FsbGJhY2tzIGluIGJhdGNoIHJlbmRlcnNcblxuICBpZiAoZGVmYXVsdGVkT3B0aW9ucy5vbkVycm9yKSB7XG4gICAgZGVmYXVsdGVkT3B0aW9ucy5vbkVycm9yID0gbm90aWZ5TWFuYWdlci5iYXRjaENhbGxzKGRlZmF1bHRlZE9wdGlvbnMub25FcnJvcik7XG4gIH1cblxuICBpZiAoZGVmYXVsdGVkT3B0aW9ucy5vblN1Y2Nlc3MpIHtcbiAgICBkZWZhdWx0ZWRPcHRpb25zLm9uU3VjY2VzcyA9IG5vdGlmeU1hbmFnZXIuYmF0Y2hDYWxscyhkZWZhdWx0ZWRPcHRpb25zLm9uU3VjY2Vzcyk7XG4gIH1cblxuICBpZiAoZGVmYXVsdGVkT3B0aW9ucy5vblNldHRsZWQpIHtcbiAgICBkZWZhdWx0ZWRPcHRpb25zLm9uU2V0dGxlZCA9IG5vdGlmeU1hbmFnZXIuYmF0Y2hDYWxscyhkZWZhdWx0ZWRPcHRpb25zLm9uU2V0dGxlZCk7XG4gIH1cblxuICBpZiAoZGVmYXVsdGVkT3B0aW9ucy5zdXNwZW5zZSkge1xuICAgIC8vIEFsd2F5cyBzZXQgc3RhbGUgdGltZSB3aGVuIHVzaW5nIHN1c3BlbnNlIHRvIHByZXZlbnRcbiAgICAvLyBmZXRjaGluZyBhZ2FpbiB3aGVuIGRpcmVjdGx5IG1vdW50aW5nIGFmdGVyIHN1c3BlbmRpbmdcbiAgICBpZiAodHlwZW9mIGRlZmF1bHRlZE9wdGlvbnMuc3RhbGVUaW1lICE9PSAnbnVtYmVyJykge1xuICAgICAgZGVmYXVsdGVkT3B0aW9ucy5zdGFsZVRpbWUgPSAxMDAwO1xuICAgIH0gLy8gU2V0IGNhY2hlIHRpbWUgdG8gMSBpZiB0aGUgb3B0aW9uIGhhcyBiZWVuIHNldCB0byAwXG4gICAgLy8gd2hlbiB1c2luZyBzdXNwZW5zZSB0byBwcmV2ZW50IGluZmluaXRlIGxvb3Agb2YgZmV0Y2hlc1xuXG5cbiAgICBpZiAoZGVmYXVsdGVkT3B0aW9ucy5jYWNoZVRpbWUgPT09IDApIHtcbiAgICAgIGRlZmF1bHRlZE9wdGlvbnMuY2FjaGVUaW1lID0gMTtcbiAgICB9XG4gIH1cblxuICBpZiAoZGVmYXVsdGVkT3B0aW9ucy5zdXNwZW5zZSB8fCBkZWZhdWx0ZWRPcHRpb25zLnVzZUVycm9yQm91bmRhcnkpIHtcbiAgICAvLyBQcmV2ZW50IHJldHJ5aW5nIGZhaWxlZCBxdWVyeSBpZiB0aGUgZXJyb3IgYm91bmRhcnkgaGFzIG5vdCBiZWVuIHJlc2V0IHlldFxuICAgIGlmICghZXJyb3JSZXNldEJvdW5kYXJ5LmlzUmVzZXQoKSkge1xuICAgICAgZGVmYXVsdGVkT3B0aW9ucy5yZXRyeU9uTW91bnQgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICB2YXIgX1JlYWN0JHVzZVN0YXRlMiA9IFJlYWN0LnVzZVN0YXRlKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gbmV3IE9ic2VydmVyKHF1ZXJ5Q2xpZW50LCBkZWZhdWx0ZWRPcHRpb25zKTtcbiAgfSksXG4gICAgICBvYnNlcnZlciA9IF9SZWFjdCR1c2VTdGF0ZTJbMF07XG5cbiAgdmFyIHJlc3VsdCA9IG9ic2VydmVyLmdldE9wdGltaXN0aWNSZXN1bHQoZGVmYXVsdGVkT3B0aW9ucyk7XG4gIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgbW91bnRlZFJlZi5jdXJyZW50ID0gdHJ1ZTtcbiAgICBlcnJvclJlc2V0Qm91bmRhcnkuY2xlYXJSZXNldCgpO1xuICAgIHZhciB1bnN1YnNjcmliZSA9IG9ic2VydmVyLnN1YnNjcmliZShub3RpZnlNYW5hZ2VyLmJhdGNoQ2FsbHMoZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKG1vdW50ZWRSZWYuY3VycmVudCkge1xuICAgICAgICBmb3JjZVVwZGF0ZShmdW5jdGlvbiAoeCkge1xuICAgICAgICAgIHJldHVybiB4ICsgMTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSkpOyAvLyBVcGRhdGUgcmVzdWx0IHRvIG1ha2Ugc3VyZSB3ZSBkaWQgbm90IG1pc3MgYW55IHF1ZXJ5IHVwZGF0ZXNcbiAgICAvLyBiZXR3ZWVuIGNyZWF0aW5nIHRoZSBvYnNlcnZlciBhbmQgc3Vic2NyaWJpbmcgdG8gaXQuXG5cbiAgICBvYnNlcnZlci51cGRhdGVSZXN1bHQoKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgbW91bnRlZFJlZi5jdXJyZW50ID0gZmFsc2U7XG4gICAgICB1bnN1YnNjcmliZSgpO1xuICAgIH07XG4gIH0sIFtlcnJvclJlc2V0Qm91bmRhcnksIG9ic2VydmVyXSk7XG4gIFJlYWN0LnVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgLy8gRG8gbm90IG5vdGlmeSBvbiB1cGRhdGVzIGJlY2F1c2Ugb2YgY2hhbmdlcyBpbiB0aGUgb3B0aW9ucyBiZWNhdXNlXG4gICAgLy8gdGhlc2UgY2hhbmdlcyBzaG91bGQgYWxyZWFkeSBiZSByZWZsZWN0ZWQgaW4gdGhlIG9wdGltaXN0aWMgcmVzdWx0LlxuICAgIG9ic2VydmVyLnNldE9wdGlvbnMoZGVmYXVsdGVkT3B0aW9ucywge1xuICAgICAgbGlzdGVuZXJzOiBmYWxzZVxuICAgIH0pO1xuICB9LCBbZGVmYXVsdGVkT3B0aW9ucywgb2JzZXJ2ZXJdKTsgLy8gSGFuZGxlIHN1c3BlbnNlXG5cbiAgaWYgKGRlZmF1bHRlZE9wdGlvbnMuc3VzcGVuc2UgJiYgcmVzdWx0LmlzTG9hZGluZykge1xuICAgIHRocm93IG9ic2VydmVyLmZldGNoT3B0aW1pc3RpYyhkZWZhdWx0ZWRPcHRpb25zKS50aGVuKGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgICB2YXIgZGF0YSA9IF9yZWYuZGF0YTtcbiAgICAgIGRlZmF1bHRlZE9wdGlvbnMub25TdWNjZXNzID09IG51bGwgPyB2b2lkIDAgOiBkZWZhdWx0ZWRPcHRpb25zLm9uU3VjY2VzcyhkYXRhKTtcbiAgICAgIGRlZmF1bHRlZE9wdGlvbnMub25TZXR0bGVkID09IG51bGwgPyB2b2lkIDAgOiBkZWZhdWx0ZWRPcHRpb25zLm9uU2V0dGxlZChkYXRhLCBudWxsKTtcbiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgIGVycm9yUmVzZXRCb3VuZGFyeS5jbGVhclJlc2V0KCk7XG4gICAgICBkZWZhdWx0ZWRPcHRpb25zLm9uRXJyb3IgPT0gbnVsbCA/IHZvaWQgMCA6IGRlZmF1bHRlZE9wdGlvbnMub25FcnJvcihlcnJvcik7XG4gICAgICBkZWZhdWx0ZWRPcHRpb25zLm9uU2V0dGxlZCA9PSBudWxsID8gdm9pZCAwIDogZGVmYXVsdGVkT3B0aW9ucy5vblNldHRsZWQodW5kZWZpbmVkLCBlcnJvcik7XG4gICAgfSk7XG4gIH0gLy8gSGFuZGxlIGVycm9yIGJvdW5kYXJ5XG5cblxuICBpZiAocmVzdWx0LmlzRXJyb3IgJiYgIWVycm9yUmVzZXRCb3VuZGFyeS5pc1Jlc2V0KCkgJiYgIXJlc3VsdC5pc0ZldGNoaW5nICYmIHNob3VsZFRocm93RXJyb3IoZGVmYXVsdGVkT3B0aW9ucy5zdXNwZW5zZSwgZGVmYXVsdGVkT3B0aW9ucy51c2VFcnJvckJvdW5kYXJ5LCBbcmVzdWx0LmVycm9yLCBvYnNlcnZlci5nZXRDdXJyZW50UXVlcnkoKV0pKSB7XG4gICAgdGhyb3cgcmVzdWx0LmVycm9yO1xuICB9IC8vIEhhbmRsZSByZXN1bHQgcHJvcGVydHkgdXNhZ2UgdHJhY2tpbmdcblxuXG4gIGlmIChkZWZhdWx0ZWRPcHRpb25zLm5vdGlmeU9uQ2hhbmdlUHJvcHMgPT09ICd0cmFja2VkJykge1xuICAgIHJlc3VsdCA9IG9ic2VydmVyLnRyYWNrUmVzdWx0KHJlc3VsdCwgZGVmYXVsdGVkT3B0aW9ucyk7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/react/useBaseQuery.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/react/useQuery.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-query/es/react/useQuery.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useQuery\": () => (/* binding */ useQuery)\n/* harmony export */ });\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core */ \"./node_modules/react-query/es/core/queryObserver.js\");\n/* harmony import */ var _core_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils */ \"./node_modules/react-query/es/core/utils.js\");\n/* harmony import */ var _useBaseQuery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useBaseQuery */ \"./node_modules/react-query/es/react/useBaseQuery.js\");\n\n\n // HOOK\n\nfunction useQuery(arg1, arg2, arg3) {\n  var parsedOptions = (0,_core_utils__WEBPACK_IMPORTED_MODULE_0__.parseQueryArgs)(arg1, arg2, arg3);\n  return (0,_useBaseQuery__WEBPACK_IMPORTED_MODULE_1__.useBaseQuery)(parsedOptions, _core__WEBPACK_IMPORTED_MODULE_2__.QueryObserver);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvcmVhY3QvdXNlUXVlcnkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LXF1ZXJ5L2VzL3JlYWN0L3VzZVF1ZXJ5LmpzPzUyZmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUXVlcnlPYnNlcnZlciB9IGZyb20gJy4uL2NvcmUnO1xuaW1wb3J0IHsgcGFyc2VRdWVyeUFyZ3MgfSBmcm9tICcuLi9jb3JlL3V0aWxzJztcbmltcG9ydCB7IHVzZUJhc2VRdWVyeSB9IGZyb20gJy4vdXNlQmFzZVF1ZXJ5JzsgLy8gSE9PS1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlUXVlcnkoYXJnMSwgYXJnMiwgYXJnMykge1xuICB2YXIgcGFyc2VkT3B0aW9ucyA9IHBhcnNlUXVlcnlBcmdzKGFyZzEsIGFyZzIsIGFyZzMpO1xuICByZXR1cm4gdXNlQmFzZVF1ZXJ5KHBhcnNlZE9wdGlvbnMsIFF1ZXJ5T2JzZXJ2ZXIpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/react/useQuery.js\n");

/***/ }),

/***/ "./node_modules/react-query/es/react/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/react-query/es/react/utils.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"shouldThrowError\": () => (/* binding */ shouldThrowError)\n/* harmony export */ });\nfunction shouldThrowError(suspense, _useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary.apply(void 0, params);\n  } // Allow useErrorBoundary to override suspense's throwing behavior\n\n\n  if (typeof _useErrorBoundary === 'boolean') return _useErrorBoundary; // If suspense is enabled default to throwing errors\n\n  return !!suspense;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVlcnkvZXMvcmVhY3QvdXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vbm9kZV9tb2R1bGVzL3JlYWN0LXF1ZXJ5L2VzL3JlYWN0L3V0aWxzLmpzPzlmNjAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHNob3VsZFRocm93RXJyb3Ioc3VzcGVuc2UsIF91c2VFcnJvckJvdW5kYXJ5LCBwYXJhbXMpIHtcbiAgLy8gQWxsb3cgdXNlRXJyb3JCb3VuZGFyeSBmdW5jdGlvbiB0byBvdmVycmlkZSB0aHJvd2luZyBiZWhhdmlvciBvbiBhIHBlci1lcnJvciBiYXNpc1xuICBpZiAodHlwZW9mIF91c2VFcnJvckJvdW5kYXJ5ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIF91c2VFcnJvckJvdW5kYXJ5LmFwcGx5KHZvaWQgMCwgcGFyYW1zKTtcbiAgfSAvLyBBbGxvdyB1c2VFcnJvckJvdW5kYXJ5IHRvIG92ZXJyaWRlIHN1c3BlbnNlJ3MgdGhyb3dpbmcgYmVoYXZpb3JcblxuXG4gIGlmICh0eXBlb2YgX3VzZUVycm9yQm91bmRhcnkgPT09ICdib29sZWFuJykgcmV0dXJuIF91c2VFcnJvckJvdW5kYXJ5OyAvLyBJZiBzdXNwZW5zZSBpcyBlbmFibGVkIGRlZmF1bHQgdG8gdGhyb3dpbmcgZXJyb3JzXG5cbiAgcmV0dXJuICEhc3VzcGVuc2U7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-query/es/react/utils.js\n");

/***/ }),

/***/ "./src/components/Badge/index.tsx":
/*!****************************************!*\
  !*** ./src/components/Badge/index.tsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! antd */ \"./node_modules/antd/es/badge/index.js\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\nconst Badge = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_1__.styled)((\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_ref) => {let { textColor, ...props } = _ref;return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__.jsx)(antd__WEBPACK_IMPORTED_MODULE_3__[\"default\"], props);})`\n  & > sup {\n    padding: 0 ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit * 2;}}px;\n    background: ${(_ref3) => {let { theme, color } = _ref3;return color || theme.colors.primary.base;}};\n    color: ${(_ref4) => {let { theme, textColor } = _ref4;return textColor || theme.colors.grayscale.light5;}};\n  }\n`;const _default =\nBadge;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Badge, \"Badge\", \"/app/superset-frontend/src/components/Badge/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/Badge/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9CYWRnZS9pbmRleC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBO0FBQ0E7QUFDQTtBQU9BO0FBRUE7QUFEQTs7QUFNQTtBQUNBO0FBQ0E7O0FBVEE7QUFjQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vc3JjL2NvbXBvbmVudHMvQmFkZ2UvaW5kZXgudHN4P2MzOGIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcclxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXHJcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXHJcbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcclxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxyXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcclxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXHJcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXHJcbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXHJcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxyXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXHJcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xyXG5pbXBvcnQgeyBCYWRnZSBhcyBBbnRkQmFkZ2UgfSBmcm9tICdhbnRkJztcclxuaW1wb3J0IHsgQmFkZ2VQcm9wcyBhcyBBbnRkQmFkZ2VQcm9wcyB9IGZyb20gJ2FudGQvbGliL2JhZGdlJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQmFkZ2VQcm9wcyBleHRlbmRzIEFudGRCYWRnZVByb3BzIHtcclxuICB0ZXh0Q29sb3I/OiBzdHJpbmc7XHJcbn1cclxuXHJcbmNvbnN0IEJhZGdlID0gc3R5bGVkKFxyXG4gIChcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcclxuICAgIHsgdGV4dENvbG9yLCAuLi5wcm9wcyB9OiBCYWRnZVByb3BzLFxyXG4gICkgPT4gPEFudGRCYWRnZSB7Li4ucHJvcHN9IC8+LFxyXG4pYFxyXG4gICYgPiBzdXAge1xyXG4gICAgcGFkZGluZzogMCAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0ICogMn1weDtcclxuICAgIGJhY2tncm91bmQ6ICR7KHsgdGhlbWUsIGNvbG9yIH0pID0+IGNvbG9yIHx8IHRoZW1lLmNvbG9ycy5wcmltYXJ5LmJhc2V9O1xyXG4gICAgY29sb3I6ICR7KHsgdGhlbWUsIHRleHRDb2xvciB9KSA9PlxyXG4gICAgICB0ZXh0Q29sb3IgfHwgdGhlbWUuY29sb3JzLmdyYXlzY2FsZS5saWdodDV9O1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEJhZGdlO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Badge/index.tsx\n");

/***/ }),

/***/ "./src/components/Card/index.tsx":
/*!***************************************!*\
  !*** ./src/components/Card/index.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime-corejs3/helpers/extends */ \"./node_modules/@babel/runtime-corejs3/helpers/extends.js\");\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var antd_lib_card__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! antd/lib/card */ \"./node_modules/antd/lib/card/index.js\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nconst Card = (_ref) => {let { padded, ...props } = _ref;return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_2__.jsx)(antd_lib_card__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({}, props, { css: (theme) => ({\n      backgroundColor: theme.colors.grayscale.light4,\n      borderRadius: theme.borderRadius,\n      '.ant-card-body': {\n        padding: padded ? theme.gridUnit * 4 : theme.gridUnit } }) }));};const _default =\n\n\nCard;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Card, \"Card\", \"/app/superset-frontend/src/components/Card/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/Card/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9DYXJkL2luZGV4LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBO0FBRUE7QUFNQTtBQUlBO0FBQ0E7QUFDQTtBQUNBOzs7QUFNQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vc3JjL2NvbXBvbmVudHMvQ2FyZC9pbmRleC50c3g/OGU3MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuICogdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBTdXBlcnNldFRoZW1lIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xyXG5pbXBvcnQgQW50ZENhcmQsIHsgQ2FyZFByb3BzIGFzIEFudGRDYXJkUHJvcHMgfSBmcm9tICdhbnRkL2xpYi9jYXJkJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ2FyZFByb3BzIGV4dGVuZHMgQW50ZENhcmRQcm9wcyB7XHJcbiAgcGFkZGVkPzogYm9vbGVhbjtcclxufVxyXG5cclxuY29uc3QgQ2FyZCA9ICh7IHBhZGRlZCwgLi4ucHJvcHMgfTogQ2FyZFByb3BzKSA9PiAoXHJcbiAgPEFudGRDYXJkXHJcbiAgICB7Li4ucHJvcHN9XHJcbiAgICBjc3M9eyh0aGVtZTogU3VwZXJzZXRUaGVtZSkgPT4gKHtcclxuICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmxpZ2h0NCxcclxuICAgICAgYm9yZGVyUmFkaXVzOiB0aGVtZS5ib3JkZXJSYWRpdXMsXHJcbiAgICAgICcuYW50LWNhcmQtYm9keSc6IHtcclxuICAgICAgICBwYWRkaW5nOiBwYWRkZWQgPyB0aGVtZS5ncmlkVW5pdCAqIDQgOiB0aGVtZS5ncmlkVW5pdCxcclxuICAgICAgfSxcclxuICAgIH0pfVxyXG4gIC8+XHJcbik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDYXJkO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Card/index.tsx\n");

/***/ }),

/***/ "./src/components/CertifiedBadge/index.tsx":
/*!*************************************************!*\
  !*** ./src/components/CertifiedBadge/index.tsx ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var src_components_Tooltip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Tooltip */ \"./src/components/Tooltip/index.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\nfunction CertifiedBadge(_ref) {let { certifiedBy, details, size = 'l' } = _ref;\n  const theme = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.useTheme)();\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(src_components_Tooltip__WEBPACK_IMPORTED_MODULE_2__.Tooltip, { id: \"certified-details-tooltip\", title: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,\n    certifiedBy && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"strong\", null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.t)('Certified by %s', certifiedBy))),\n\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"div\", null, details)) },\n\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_1__[\"default\"].Certified, { iconColor: theme.colors.primary.base, iconSize: size }));\n\n}__signature__(CertifiedBadge, \"useTheme{theme}\", () => [_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.useTheme]);const _default =\nCertifiedBadge;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CertifiedBadge, \"CertifiedBadge\", \"/app/superset-frontend/src/components/CertifiedBadge/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/CertifiedBadge/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9DZXJ0aWZpZWRCYWRnZS9pbmRleC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUtBO0FBRUE7QUFLQTtBQUVBOztBQUdBOztBQUlBOztBQUdBO0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3NyYy9jb21wb25lbnRzL0NlcnRpZmllZEJhZGdlL2luZGV4LnRzeD9hZTU3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXHJcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxyXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxyXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXHJcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcclxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXHJcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxyXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxyXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxyXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcclxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xyXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHQsIHVzZVRoZW1lIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xyXG5pbXBvcnQgSWNvbnMsIHsgSWNvblR5cGUgfSBmcm9tICdzcmMvY29tcG9uZW50cy9JY29ucyc7XHJcbmltcG9ydCB7IFRvb2x0aXAgfSBmcm9tICdzcmMvY29tcG9uZW50cy9Ub29sdGlwJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ2VydGlmaWVkQmFkZ2VQcm9wcyB7XHJcbiAgY2VydGlmaWVkQnk/OiBzdHJpbmc7XHJcbiAgZGV0YWlscz86IHN0cmluZztcclxuICBzaXplPzogSWNvblR5cGVbJ2ljb25TaXplJ107XHJcbn1cclxuXHJcbmZ1bmN0aW9uIENlcnRpZmllZEJhZGdlKHtcclxuICBjZXJ0aWZpZWRCeSxcclxuICBkZXRhaWxzLFxyXG4gIHNpemUgPSAnbCcsXHJcbn06IENlcnRpZmllZEJhZGdlUHJvcHMpIHtcclxuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8VG9vbHRpcFxyXG4gICAgICBpZD1cImNlcnRpZmllZC1kZXRhaWxzLXRvb2x0aXBcIlxyXG4gICAgICB0aXRsZT17XHJcbiAgICAgICAgPD5cclxuICAgICAgICAgIHtjZXJ0aWZpZWRCeSAmJiAoXHJcbiAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgPHN0cm9uZz57dCgnQ2VydGlmaWVkIGJ5ICVzJywgY2VydGlmaWVkQnkpfTwvc3Ryb25nPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICl9XHJcbiAgICAgICAgICA8ZGl2PntkZXRhaWxzfTwvZGl2PlxyXG4gICAgICAgIDwvPlxyXG4gICAgICB9XHJcbiAgICA+XHJcbiAgICAgIDxJY29ucy5DZXJ0aWZpZWQgaWNvbkNvbG9yPXt0aGVtZS5jb2xvcnMucHJpbWFyeS5iYXNlfSBpY29uU2l6ZT17c2l6ZX0gLz5cclxuICAgIDwvVG9vbHRpcD5cclxuICApO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDZXJ0aWZpZWRCYWRnZTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/CertifiedBadge/index.tsx\n");

/***/ }),

/***/ "./src/components/DatabaseSelector/index.tsx":
/*!***************************************************!*\
  !*** ./src/components/DatabaseSelector/index.tsx ***!
  \***************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DatabaseSelector)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/connection/SupersetClient.ts\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rison */ \"./node_modules/rison/js/rison.js\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(rison__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var src_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components */ \"./src/components/index.ts\");\n/* harmony import */ var src_components_Label__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/Label */ \"./src/components/Label/index.tsx\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* harmony import */ var src_components_RefreshLabel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/RefreshLabel */ \"./src/components/RefreshLabel/index.tsx\");\n/* harmony import */ var src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/components/MessageToasts/withToasts */ \"./src/components/MessageToasts/withToasts.tsx\");\n/* harmony import */ var src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/utils/getClientErrorObject */ \"./src/utils/getClientErrorObject.ts\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\n\n\n\nconst DatabaseSelectorWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_8__.styled.div`\n  ${(_ref) => {let { theme } = _ref;return `\n    .refresh {\n      display: flex;\n      align-items: center;\n      width: 30px;\n      margin-left: ${theme.gridUnit}px;\n      margin-top: ${theme.gridUnit * 5}px;\n    }\n\n    .section {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n    }\n\n    .select {\n      width: calc(100% - 30px - ${theme.gridUnit}px);\n      flex: 1;\n    }\n\n    & > div {\n      margin-bottom: ${theme.gridUnit * 4}px;\n    }\n  `;}}\n`;\nconst LabelStyle = _superset_ui_core__WEBPACK_IMPORTED_MODULE_8__.styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit - 2;}}px;\n\n  .backend {\n    overflow: visible;\n  }\n\n  .name {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\nconst SelectLabel = (_ref3) => {let { backend, databaseName } = _ref3;return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(LabelStyle, null,\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components_Label__WEBPACK_IMPORTED_MODULE_3__[\"default\"], { className: \"backend\" }, backend),\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"span\", { className: \"name\", title: databaseName },\n  databaseName));};\n\n\nfunction DatabaseSelector(_ref4) {let { db, formMode = false, emptyState, getDbList, handleError, isDatabaseSelectEnabled = true, onDbChange, onEmptyResults, onSchemaChange, onSchemasLoad, readOnly = false, schema, sqlLabMode = false } = _ref4;\n  const [loadingSchemas, setLoadingSchemas] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [schemaOptions, setSchemaOptions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n  const [currentDb, setCurrentDb] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  const [currentSchema, setCurrentSchema] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(schema ? { label: schema, value: schema } : undefined);\n  const [refresh, setRefresh] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const { addSuccessToast } = (0,src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_6__.useToasts)();\n  const loadDatabases = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => async (search, page, pageSize) => {\n    const queryParams = rison__WEBPACK_IMPORTED_MODULE_1___default().encode({\n      order_columns: 'database_name',\n      order_direction: 'asc',\n      page,\n      page_size: pageSize,\n      ...(formMode || !sqlLabMode ?\n      { filters: [{ col: 'database_name', opr: 'ct', value: search }] } :\n      {\n        filters: [\n        { col: 'database_name', opr: 'ct', value: search },\n        {\n          col: 'expose_in_sqllab',\n          opr: 'eq',\n          value: true }] }) });\n\n\n\n\n    const endpoint = `/api/v1/database/?q=${queryParams}`;\n    return _superset_ui_core__WEBPACK_IMPORTED_MODULE_10__[\"default\"].get({ endpoint }).then((_ref5) => {let { json } = _ref5;\n      const { result } = json;\n      if (getDbList) {\n        getDbList(result);\n      }\n      if (result.length === 0) {\n        if (onEmptyResults)\n        onEmptyResults(search);\n      }\n      const options = result.map((row) => ({\n        label: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(SelectLabel, { backend: row.backend, databaseName: row.database_name }),\n        value: row.id,\n        id: row.id,\n        database_name: row.database_name,\n        backend: row.backend }));\n\n      return {\n        data: options,\n        totalCount: options.length };\n\n    });\n  }, [formMode, getDbList, sqlLabMode]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    setCurrentDb((current) => (current == null ? void 0 : current.id) !== (db == null ? void 0 : db.id) ?\n    db ?\n    {\n      label: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(SelectLabel, { backend: db.backend, databaseName: db.database_name }),\n      value: db.id,\n      ...db } :\n\n    undefined :\n    current);\n  }, [db]);\n  function changeSchema(schema) {\n    setCurrentSchema(schema);\n    if (onSchemaChange) {\n      onSchemaChange(schema.value);\n    }\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (currentDb) {\n      setLoadingSchemas(true);\n      const queryParams = rison__WEBPACK_IMPORTED_MODULE_1___default().encode({ force: refresh > 0 });\n      const endpoint = `/api/v1/database/${currentDb.value}/schemas/?q=${queryParams}`;\n      // TODO: Would be nice to add pagination in a follow-up. Needs endpoint changes.\n      _superset_ui_core__WEBPACK_IMPORTED_MODULE_10__[\"default\"].get({ endpoint }).\n      then((_ref6) => {let { json } = _ref6;\n        const options = json.result.map((s) => ({\n          value: s,\n          label: s,\n          title: s }));\n\n        if (onSchemasLoad) {\n          onSchemasLoad(options);\n        }\n        setSchemaOptions(options);\n        setLoadingSchemas(false);\n        if (options.length === 1)\n        changeSchema(options[0]);\n        if (refresh > 0)\n        addSuccessToast('List refreshed');\n      }).\n      catch((err) => {\n        setLoadingSchemas(false);\n        (0,src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_7__.getClientErrorObject)(err).then((clientError) => {\n          handleError((0,src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_7__.getClientErrorMessage)((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('There was an error loading the schemas'), clientError));\n        });\n      });\n    }\n  }, [currentDb, onSchemasLoad, refresh]);\n  function changeDataBase(value, database) {\n    setCurrentDb(database);\n    setCurrentSchema(undefined);\n    if (onDbChange) {\n      onDbChange(database);\n    }\n    if (onSchemaChange) {\n      onSchemaChange(undefined);\n    }\n  }\n  function renderSelectRow(select, refreshBtn) {\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"div\", { className: \"section\" },\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"span\", { className: \"select\" }, select),\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"span\", { className: \"refresh\" }, refreshBtn));\n\n  }\n  function renderDatabaseSelect() {\n    return renderSelectRow((0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_2__.AsyncSelect, { ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('Select database or type database name'), optionFilterProps: ['database_name', 'value'], \"data-test\": \"select-database\", header: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_4__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('Database')), lazyLoading: false, notFoundContent: emptyState, onChange: changeDataBase, value: currentDb, placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('Select database or type database name'), disabled: !isDatabaseSelectEnabled || readOnly, options: loadDatabases }), null);\n  }\n  function renderSchemaSelect() {\n    const refreshIcon = !readOnly && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components_RefreshLabel__WEBPACK_IMPORTED_MODULE_5__[\"default\"], { onClick: () => setRefresh(refresh + 1), tooltipContent: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('Force refresh schema list') });\n    return renderSelectRow((0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_2__.Select, { ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('Select schema or type schema name'), disabled: !currentDb || readOnly, header: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_4__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('Schema')), labelInValue: true, loading: loadingSchemas, name: \"select-schema\", placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_11__.t)('Select schema or type schema name'), onChange: (item) => changeSchema(item), options: schemaOptions, showSearch: true, value: currentSchema }), refreshIcon);\n  }\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(DatabaseSelectorWrapper, { \"data-test\": \"DatabaseSelector\" },\n  renderDatabaseSelect(),\n  renderSchemaSelect());\n\n}__signature__(DatabaseSelector, \"useState{[loadingSchemas, setLoadingSchemas](false)}\\nuseState{[schemaOptions, setSchemaOptions]([])}\\nuseState{[currentDb, setCurrentDb]}\\nuseState{[currentSchema, setCurrentSchema](schema ? { label: schema, value: schema } : undefined)}\\nuseState{[refresh, setRefresh](0)}\\nuseToasts{{ addSuccessToast }}\\nuseMemo{loadDatabases}\\nuseEffect{}\\nuseEffect{}\", () => [src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_6__.useToasts]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatabaseSelectorWrapper, \"DatabaseSelectorWrapper\", \"/app/superset-frontend/src/components/DatabaseSelector/index.tsx\");reactHotLoader.register(LabelStyle, \"LabelStyle\", \"/app/superset-frontend/src/components/DatabaseSelector/index.tsx\");reactHotLoader.register(SelectLabel, \"SelectLabel\", \"/app/superset-frontend/src/components/DatabaseSelector/index.tsx\");reactHotLoader.register(DatabaseSelector, \"DatabaseSelector\", \"/app/superset-frontend/src/components/DatabaseSelector/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9EYXRhYmFzZVNlbGVjdG9yL2luZGV4LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTs7Ozs7QUFLQTtBQUNBOzs7Ozs7Ozs7O0FBVUE7Ozs7O0FBS0E7O0FBckJBO0FBREE7QUEyQkE7Ozs7QUFJQTs7Ozs7Ozs7OztBQUpBO0FBZ0RBO0FBUUE7QUFDQTtBQUNBOzs7QUFLQTtBQWVBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUVBO0FBVUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUlBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFNQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBOztBQUdBO0FBRUE7QUFDQTtBQWdCQTtBQUVBO0FBQ0E7QUFNQTtBQWdCQTtBQUVBO0FBRUE7QUFDQTs7QUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vc3JjL2NvbXBvbmVudHMvRGF0YWJhc2VTZWxlY3Rvci9pbmRleC50c3g/ZTkwMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuICogdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgUmVhY3QsIHsgUmVhY3ROb2RlLCB1c2VTdGF0ZSwgdXNlTWVtbywgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBzdHlsZWQsIFN1cGVyc2V0Q2xpZW50LCB0IH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xyXG5pbXBvcnQgcmlzb24gZnJvbSAncmlzb24nO1xyXG5pbXBvcnQgeyBBc3luY1NlbGVjdCwgU2VsZWN0IH0gZnJvbSAnc3JjL2NvbXBvbmVudHMnO1xyXG5pbXBvcnQgTGFiZWwgZnJvbSAnc3JjL2NvbXBvbmVudHMvTGFiZWwnO1xyXG5pbXBvcnQgeyBGb3JtTGFiZWwgfSBmcm9tICdzcmMvY29tcG9uZW50cy9Gb3JtJztcclxuaW1wb3J0IFJlZnJlc2hMYWJlbCBmcm9tICdzcmMvY29tcG9uZW50cy9SZWZyZXNoTGFiZWwnO1xyXG5pbXBvcnQgeyB1c2VUb2FzdHMgfSBmcm9tICdzcmMvY29tcG9uZW50cy9NZXNzYWdlVG9hc3RzL3dpdGhUb2FzdHMnO1xyXG5pbXBvcnQge1xyXG4gIGdldENsaWVudEVycm9yTWVzc2FnZSxcclxuICBnZXRDbGllbnRFcnJvck9iamVjdCxcclxufSBmcm9tICdzcmMvdXRpbHMvZ2V0Q2xpZW50RXJyb3JPYmplY3QnO1xyXG5cclxuY29uc3QgRGF0YWJhc2VTZWxlY3RvcldyYXBwZXIgPSBzdHlsZWQuZGl2YFxyXG4gICR7KHsgdGhlbWUgfSkgPT4gYFxyXG4gICAgLnJlZnJlc2gge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICB3aWR0aDogMzBweDtcclxuICAgICAgbWFyZ2luLWxlZnQ6ICR7dGhlbWUuZ3JpZFVuaXR9cHg7XHJcbiAgICAgIG1hcmdpbi10b3A6ICR7dGhlbWUuZ3JpZFVuaXQgKiA1fXB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5zZWN0aW9uIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICAuc2VsZWN0IHtcclxuICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDMwcHggLSAke3RoZW1lLmdyaWRVbml0fXB4KTtcclxuICAgICAgZmxleDogMTtcclxuICAgIH1cclxuXHJcbiAgICAmID4gZGl2IHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogJHt0aGVtZS5ncmlkVW5pdCAqIDR9cHg7XHJcbiAgICB9XHJcbiAgYH1cclxuYDtcclxuXHJcbmNvbnN0IExhYmVsU3R5bGUgPSBzdHlsZWQuZGl2YFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIG1hcmdpbi1sZWZ0OiAkeyh7IHRoZW1lIH0pID0+IHRoZW1lLmdyaWRVbml0IC0gMn1weDtcclxuXHJcbiAgLmJhY2tlbmQge1xyXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbiAgfVxyXG5cclxuICAubmFtZSB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgfVxyXG5gO1xyXG5cclxudHlwZSBEYXRhYmFzZVZhbHVlID0ge1xyXG4gIGxhYmVsOiBSZWFjdC5SZWFjdE5vZGU7XHJcbiAgdmFsdWU6IG51bWJlcjtcclxuICBpZDogbnVtYmVyO1xyXG4gIGRhdGFiYXNlX25hbWU6IHN0cmluZztcclxuICBiYWNrZW5kOiBzdHJpbmc7XHJcbn07XHJcblxyXG5leHBvcnQgdHlwZSBEYXRhYmFzZU9iamVjdCA9IHtcclxuICBpZDogbnVtYmVyO1xyXG4gIGRhdGFiYXNlX25hbWU6IHN0cmluZztcclxuICBiYWNrZW5kOiBzdHJpbmc7XHJcbn07XHJcblxyXG50eXBlIFNjaGVtYVZhbHVlID0geyBsYWJlbDogc3RyaW5nOyB2YWx1ZTogc3RyaW5nIH07XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGFiYXNlU2VsZWN0b3JQcm9wcyB7XHJcbiAgZGI/OiBEYXRhYmFzZU9iamVjdCB8IG51bGw7XHJcbiAgZW1wdHlTdGF0ZT86IFJlYWN0Tm9kZTtcclxuICBmb3JtTW9kZT86IGJvb2xlYW47XHJcbiAgZ2V0RGJMaXN0PzogKGFyZzA6IGFueSkgPT4gdm9pZDtcclxuICBoYW5kbGVFcnJvcjogKG1zZzogc3RyaW5nKSA9PiB2b2lkO1xyXG4gIGlzRGF0YWJhc2VTZWxlY3RFbmFibGVkPzogYm9vbGVhbjtcclxuICBvbkRiQ2hhbmdlPzogKGRiOiBEYXRhYmFzZU9iamVjdCkgPT4gdm9pZDtcclxuICBvbkVtcHR5UmVzdWx0cz86IChzZWFyY2hUZXh0Pzogc3RyaW5nKSA9PiB2b2lkO1xyXG4gIG9uU2NoZW1hQ2hhbmdlPzogKHNjaGVtYT86IHN0cmluZykgPT4gdm9pZDtcclxuICBvblNjaGVtYXNMb2FkPzogKHNjaGVtYXM6IEFycmF5PG9iamVjdD4pID0+IHZvaWQ7XHJcbiAgcmVhZE9ubHk/OiBib29sZWFuO1xyXG4gIHNjaGVtYT86IHN0cmluZztcclxuICBzcWxMYWJNb2RlPzogYm9vbGVhbjtcclxufVxyXG5cclxuY29uc3QgU2VsZWN0TGFiZWwgPSAoe1xyXG4gIGJhY2tlbmQsXHJcbiAgZGF0YWJhc2VOYW1lLFxyXG59OiB7XHJcbiAgYmFja2VuZDogc3RyaW5nO1xyXG4gIGRhdGFiYXNlTmFtZTogc3RyaW5nO1xyXG59KSA9PiAoXHJcbiAgPExhYmVsU3R5bGU+XHJcbiAgICA8TGFiZWwgY2xhc3NOYW1lPVwiYmFja2VuZFwiPntiYWNrZW5kfTwvTGFiZWw+XHJcbiAgICA8c3BhbiBjbGFzc05hbWU9XCJuYW1lXCIgdGl0bGU9e2RhdGFiYXNlTmFtZX0+XHJcbiAgICAgIHtkYXRhYmFzZU5hbWV9XHJcbiAgICA8L3NwYW4+XHJcbiAgPC9MYWJlbFN0eWxlPlxyXG4pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRGF0YWJhc2VTZWxlY3Rvcih7XHJcbiAgZGIsXHJcbiAgZm9ybU1vZGUgPSBmYWxzZSxcclxuICBlbXB0eVN0YXRlLFxyXG4gIGdldERiTGlzdCxcclxuICBoYW5kbGVFcnJvcixcclxuICBpc0RhdGFiYXNlU2VsZWN0RW5hYmxlZCA9IHRydWUsXHJcbiAgb25EYkNoYW5nZSxcclxuICBvbkVtcHR5UmVzdWx0cyxcclxuICBvblNjaGVtYUNoYW5nZSxcclxuICBvblNjaGVtYXNMb2FkLFxyXG4gIHJlYWRPbmx5ID0gZmFsc2UsXHJcbiAgc2NoZW1hLFxyXG4gIHNxbExhYk1vZGUgPSBmYWxzZSxcclxufTogRGF0YWJhc2VTZWxlY3RvclByb3BzKSB7XHJcbiAgY29uc3QgW2xvYWRpbmdTY2hlbWFzLCBzZXRMb2FkaW5nU2NoZW1hc10gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgY29uc3QgW3NjaGVtYU9wdGlvbnMsIHNldFNjaGVtYU9wdGlvbnNdID0gdXNlU3RhdGU8U2NoZW1hVmFsdWVbXT4oW10pO1xyXG4gIGNvbnN0IFtjdXJyZW50RGIsIHNldEN1cnJlbnREYl0gPSB1c2VTdGF0ZTxEYXRhYmFzZVZhbHVlIHwgdW5kZWZpbmVkPigpO1xyXG4gIGNvbnN0IFtjdXJyZW50U2NoZW1hLCBzZXRDdXJyZW50U2NoZW1hXSA9IHVzZVN0YXRlPFNjaGVtYVZhbHVlIHwgdW5kZWZpbmVkPihcclxuICAgIHNjaGVtYSA/IHsgbGFiZWw6IHNjaGVtYSwgdmFsdWU6IHNjaGVtYSB9IDogdW5kZWZpbmVkLFxyXG4gICk7XHJcbiAgY29uc3QgW3JlZnJlc2gsIHNldFJlZnJlc2hdID0gdXNlU3RhdGUoMCk7XHJcbiAgY29uc3QgeyBhZGRTdWNjZXNzVG9hc3QgfSA9IHVzZVRvYXN0cygpO1xyXG5cclxuICBjb25zdCBsb2FkRGF0YWJhc2VzID0gdXNlTWVtbyhcclxuICAgICgpID0+XHJcbiAgICAgIGFzeW5jIChcclxuICAgICAgICBzZWFyY2g6IHN0cmluZyxcclxuICAgICAgICBwYWdlOiBudW1iZXIsXHJcbiAgICAgICAgcGFnZVNpemU6IG51bWJlcixcclxuICAgICAgKTogUHJvbWlzZTx7XHJcbiAgICAgICAgZGF0YTogRGF0YWJhc2VWYWx1ZVtdO1xyXG4gICAgICAgIHRvdGFsQ291bnQ6IG51bWJlcjtcclxuICAgICAgfT4gPT4ge1xyXG4gICAgICAgIGNvbnN0IHF1ZXJ5UGFyYW1zID0gcmlzb24uZW5jb2RlKHtcclxuICAgICAgICAgIG9yZGVyX2NvbHVtbnM6ICdkYXRhYmFzZV9uYW1lJyxcclxuICAgICAgICAgIG9yZGVyX2RpcmVjdGlvbjogJ2FzYycsXHJcbiAgICAgICAgICBwYWdlLFxyXG4gICAgICAgICAgcGFnZV9zaXplOiBwYWdlU2l6ZSxcclxuICAgICAgICAgIC4uLihmb3JtTW9kZSB8fCAhc3FsTGFiTW9kZVxyXG4gICAgICAgICAgICA/IHsgZmlsdGVyczogW3sgY29sOiAnZGF0YWJhc2VfbmFtZScsIG9wcjogJ2N0JywgdmFsdWU6IHNlYXJjaCB9XSB9XHJcbiAgICAgICAgICAgIDoge1xyXG4gICAgICAgICAgICAgICAgZmlsdGVyczogW1xyXG4gICAgICAgICAgICAgICAgICB7IGNvbDogJ2RhdGFiYXNlX25hbWUnLCBvcHI6ICdjdCcsIHZhbHVlOiBzZWFyY2ggfSxcclxuICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbDogJ2V4cG9zZV9pbl9zcWxsYWInLFxyXG4gICAgICAgICAgICAgICAgICAgIG9wcjogJ2VxJyxcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgICAgfSksXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgY29uc3QgZW5kcG9pbnQgPSBgL2FwaS92MS9kYXRhYmFzZS8/cT0ke3F1ZXJ5UGFyYW1zfWA7XHJcbiAgICAgICAgcmV0dXJuIFN1cGVyc2V0Q2xpZW50LmdldCh7IGVuZHBvaW50IH0pLnRoZW4oKHsganNvbiB9KSA9PiB7XHJcbiAgICAgICAgICBjb25zdCB7IHJlc3VsdCB9ID0ganNvbjtcclxuICAgICAgICAgIGlmIChnZXREYkxpc3QpIHtcclxuICAgICAgICAgICAgZ2V0RGJMaXN0KHJlc3VsdCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBpZiAocmVzdWx0Lmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICBpZiAob25FbXB0eVJlc3VsdHMpIG9uRW1wdHlSZXN1bHRzKHNlYXJjaCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBjb25zdCBvcHRpb25zID0gcmVzdWx0Lm1hcCgocm93OiBEYXRhYmFzZU9iamVjdCkgPT4gKHtcclxuICAgICAgICAgICAgbGFiZWw6IChcclxuICAgICAgICAgICAgICA8U2VsZWN0TGFiZWxcclxuICAgICAgICAgICAgICAgIGJhY2tlbmQ9e3Jvdy5iYWNrZW5kfVxyXG4gICAgICAgICAgICAgICAgZGF0YWJhc2VOYW1lPXtyb3cuZGF0YWJhc2VfbmFtZX1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICApLFxyXG4gICAgICAgICAgICB2YWx1ZTogcm93LmlkLFxyXG4gICAgICAgICAgICBpZDogcm93LmlkLFxyXG4gICAgICAgICAgICBkYXRhYmFzZV9uYW1lOiByb3cuZGF0YWJhc2VfbmFtZSxcclxuICAgICAgICAgICAgYmFja2VuZDogcm93LmJhY2tlbmQsXHJcbiAgICAgICAgICB9KSk7XHJcblxyXG4gICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgZGF0YTogb3B0aW9ucyxcclxuICAgICAgICAgICAgdG90YWxDb3VudDogb3B0aW9ucy5sZW5ndGgsXHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9LFxyXG4gICAgW2Zvcm1Nb2RlLCBnZXREYkxpc3QsIHNxbExhYk1vZGVdLFxyXG4gICk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBzZXRDdXJyZW50RGIoY3VycmVudCA9PlxyXG4gICAgICBjdXJyZW50Py5pZCAhPT0gZGI/LmlkXHJcbiAgICAgICAgPyBkYlxyXG4gICAgICAgICAgPyB7XHJcbiAgICAgICAgICAgICAgbGFiZWw6IChcclxuICAgICAgICAgICAgICAgIDxTZWxlY3RMYWJlbFxyXG4gICAgICAgICAgICAgICAgICBiYWNrZW5kPXtkYi5iYWNrZW5kfVxyXG4gICAgICAgICAgICAgICAgICBkYXRhYmFzZU5hbWU9e2RiLmRhdGFiYXNlX25hbWV9XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICksXHJcbiAgICAgICAgICAgICAgdmFsdWU6IGRiLmlkLFxyXG4gICAgICAgICAgICAgIC4uLmRiLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICA6IHVuZGVmaW5lZFxyXG4gICAgICAgIDogY3VycmVudCxcclxuICAgICk7XHJcbiAgfSwgW2RiXSk7XHJcblxyXG4gIGZ1bmN0aW9uIGNoYW5nZVNjaGVtYShzY2hlbWE6IFNjaGVtYVZhbHVlKSB7XHJcbiAgICBzZXRDdXJyZW50U2NoZW1hKHNjaGVtYSk7XHJcbiAgICBpZiAob25TY2hlbWFDaGFuZ2UpIHtcclxuICAgICAgb25TY2hlbWFDaGFuZ2Uoc2NoZW1hLnZhbHVlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAoY3VycmVudERiKSB7XHJcbiAgICAgIHNldExvYWRpbmdTY2hlbWFzKHRydWUpO1xyXG4gICAgICBjb25zdCBxdWVyeVBhcmFtcyA9IHJpc29uLmVuY29kZSh7IGZvcmNlOiByZWZyZXNoID4gMCB9KTtcclxuICAgICAgY29uc3QgZW5kcG9pbnQgPSBgL2FwaS92MS9kYXRhYmFzZS8ke2N1cnJlbnREYi52YWx1ZX0vc2NoZW1hcy8/cT0ke3F1ZXJ5UGFyYW1zfWA7XHJcblxyXG4gICAgICAvLyBUT0RPOiBXb3VsZCBiZSBuaWNlIHRvIGFkZCBwYWdpbmF0aW9uIGluIGEgZm9sbG93LXVwLiBOZWVkcyBlbmRwb2ludCBjaGFuZ2VzLlxyXG4gICAgICBTdXBlcnNldENsaWVudC5nZXQoeyBlbmRwb2ludCB9KVxyXG4gICAgICAgIC50aGVuKCh7IGpzb24gfSkgPT4ge1xyXG4gICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IGpzb24ucmVzdWx0Lm1hcCgoczogc3RyaW5nKSA9PiAoe1xyXG4gICAgICAgICAgICB2YWx1ZTogcyxcclxuICAgICAgICAgICAgbGFiZWw6IHMsXHJcbiAgICAgICAgICAgIHRpdGxlOiBzLFxyXG4gICAgICAgICAgfSkpO1xyXG4gICAgICAgICAgaWYgKG9uU2NoZW1hc0xvYWQpIHtcclxuICAgICAgICAgICAgb25TY2hlbWFzTG9hZChvcHRpb25zKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIHNldFNjaGVtYU9wdGlvbnMob3B0aW9ucyk7XHJcbiAgICAgICAgICBzZXRMb2FkaW5nU2NoZW1hcyhmYWxzZSk7XHJcbiAgICAgICAgICBpZiAob3B0aW9ucy5sZW5ndGggPT09IDEpIGNoYW5nZVNjaGVtYShvcHRpb25zWzBdKTtcclxuICAgICAgICAgIGlmIChyZWZyZXNoID4gMCkgYWRkU3VjY2Vzc1RvYXN0KCdMaXN0IHJlZnJlc2hlZCcpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKGVyciA9PiB7XHJcbiAgICAgICAgICBzZXRMb2FkaW5nU2NoZW1hcyhmYWxzZSk7XHJcbiAgICAgICAgICBnZXRDbGllbnRFcnJvck9iamVjdChlcnIpLnRoZW4oY2xpZW50RXJyb3IgPT4ge1xyXG4gICAgICAgICAgICBoYW5kbGVFcnJvcihcclxuICAgICAgICAgICAgICBnZXRDbGllbnRFcnJvck1lc3NhZ2UoXHJcbiAgICAgICAgICAgICAgICB0KCdUaGVyZSB3YXMgYW4gZXJyb3IgbG9hZGluZyB0aGUgc2NoZW1hcycpLFxyXG4gICAgICAgICAgICAgICAgY2xpZW50RXJyb3IsXHJcbiAgICAgICAgICAgICAgKSxcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0sIFtjdXJyZW50RGIsIG9uU2NoZW1hc0xvYWQsIHJlZnJlc2hdKTtcclxuXHJcbiAgZnVuY3Rpb24gY2hhbmdlRGF0YUJhc2UoXHJcbiAgICB2YWx1ZTogeyBsYWJlbDogc3RyaW5nOyB2YWx1ZTogbnVtYmVyIH0sXHJcbiAgICBkYXRhYmFzZTogRGF0YWJhc2VWYWx1ZSxcclxuICApIHtcclxuICAgIHNldEN1cnJlbnREYihkYXRhYmFzZSk7XHJcbiAgICBzZXRDdXJyZW50U2NoZW1hKHVuZGVmaW5lZCk7XHJcbiAgICBpZiAob25EYkNoYW5nZSkge1xyXG4gICAgICBvbkRiQ2hhbmdlKGRhdGFiYXNlKTtcclxuICAgIH1cclxuICAgIGlmIChvblNjaGVtYUNoYW5nZSkge1xyXG4gICAgICBvblNjaGVtYUNoYW5nZSh1bmRlZmluZWQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcmVuZGVyU2VsZWN0Um93KHNlbGVjdDogUmVhY3ROb2RlLCByZWZyZXNoQnRuOiBSZWFjdE5vZGUpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2VjdGlvblwiPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInNlbGVjdFwiPntzZWxlY3R9PC9zcGFuPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInJlZnJlc2hcIj57cmVmcmVzaEJ0bn08L3NwYW4+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHJlbmRlckRhdGFiYXNlU2VsZWN0KCkge1xyXG4gICAgcmV0dXJuIHJlbmRlclNlbGVjdFJvdyhcclxuICAgICAgPEFzeW5jU2VsZWN0XHJcbiAgICAgICAgYXJpYUxhYmVsPXt0KCdTZWxlY3QgZGF0YWJhc2Ugb3IgdHlwZSBkYXRhYmFzZSBuYW1lJyl9XHJcbiAgICAgICAgb3B0aW9uRmlsdGVyUHJvcHM9e1snZGF0YWJhc2VfbmFtZScsICd2YWx1ZSddfVxyXG4gICAgICAgIGRhdGEtdGVzdD1cInNlbGVjdC1kYXRhYmFzZVwiXHJcbiAgICAgICAgaGVhZGVyPXs8Rm9ybUxhYmVsPnt0KCdEYXRhYmFzZScpfTwvRm9ybUxhYmVsPn1cclxuICAgICAgICBsYXp5TG9hZGluZz17ZmFsc2V9XHJcbiAgICAgICAgbm90Rm91bmRDb250ZW50PXtlbXB0eVN0YXRlfVxyXG4gICAgICAgIG9uQ2hhbmdlPXtjaGFuZ2VEYXRhQmFzZX1cclxuICAgICAgICB2YWx1ZT17Y3VycmVudERifVxyXG4gICAgICAgIHBsYWNlaG9sZGVyPXt0KCdTZWxlY3QgZGF0YWJhc2Ugb3IgdHlwZSBkYXRhYmFzZSBuYW1lJyl9XHJcbiAgICAgICAgZGlzYWJsZWQ9eyFpc0RhdGFiYXNlU2VsZWN0RW5hYmxlZCB8fCByZWFkT25seX1cclxuICAgICAgICBvcHRpb25zPXtsb2FkRGF0YWJhc2VzfVxyXG4gICAgICAvPixcclxuICAgICAgbnVsbCxcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiByZW5kZXJTY2hlbWFTZWxlY3QoKSB7XHJcbiAgICBjb25zdCByZWZyZXNoSWNvbiA9ICFyZWFkT25seSAmJiAoXHJcbiAgICAgIDxSZWZyZXNoTGFiZWxcclxuICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRSZWZyZXNoKHJlZnJlc2ggKyAxKX1cclxuICAgICAgICB0b29sdGlwQ29udGVudD17dCgnRm9yY2UgcmVmcmVzaCBzY2hlbWEgbGlzdCcpfVxyXG4gICAgICAvPlxyXG4gICAgKTtcclxuICAgIHJldHVybiByZW5kZXJTZWxlY3RSb3coXHJcbiAgICAgIDxTZWxlY3RcclxuICAgICAgICBhcmlhTGFiZWw9e3QoJ1NlbGVjdCBzY2hlbWEgb3IgdHlwZSBzY2hlbWEgbmFtZScpfVxyXG4gICAgICAgIGRpc2FibGVkPXshY3VycmVudERiIHx8IHJlYWRPbmx5fVxyXG4gICAgICAgIGhlYWRlcj17PEZvcm1MYWJlbD57dCgnU2NoZW1hJyl9PC9Gb3JtTGFiZWw+fVxyXG4gICAgICAgIGxhYmVsSW5WYWx1ZVxyXG4gICAgICAgIGxvYWRpbmc9e2xvYWRpbmdTY2hlbWFzfVxyXG4gICAgICAgIG5hbWU9XCJzZWxlY3Qtc2NoZW1hXCJcclxuICAgICAgICBwbGFjZWhvbGRlcj17dCgnU2VsZWN0IHNjaGVtYSBvciB0eXBlIHNjaGVtYSBuYW1lJyl9XHJcbiAgICAgICAgb25DaGFuZ2U9e2l0ZW0gPT4gY2hhbmdlU2NoZW1hKGl0ZW0gYXMgU2NoZW1hVmFsdWUpfVxyXG4gICAgICAgIG9wdGlvbnM9e3NjaGVtYU9wdGlvbnN9XHJcbiAgICAgICAgc2hvd1NlYXJjaFxyXG4gICAgICAgIHZhbHVlPXtjdXJyZW50U2NoZW1hfVxyXG4gICAgICAvPixcclxuICAgICAgcmVmcmVzaEljb24sXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxEYXRhYmFzZVNlbGVjdG9yV3JhcHBlciBkYXRhLXRlc3Q9XCJEYXRhYmFzZVNlbGVjdG9yXCI+XHJcbiAgICAgIHtyZW5kZXJEYXRhYmFzZVNlbGVjdCgpfVxyXG4gICAgICB7cmVuZGVyU2NoZW1hU2VsZWN0KCl9XHJcbiAgICA8L0RhdGFiYXNlU2VsZWN0b3JXcmFwcGVyPlxyXG4gICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/DatabaseSelector/index.tsx\n");

/***/ }),

/***/ "./src/components/Datasource/CollectionTable.tsx":
/*!*******************************************************!*\
  !*** ./src/components/Datasource/CollectionTable.tsx ***!
  \*******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CRUDCollection)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime-corejs3/helpers/extends */ \"./node_modules/@babel/runtime-corejs3/helpers/extends.js\");\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime-corejs3/core-js-stable/instance/includes */ \"./node_modules/@babel/runtime-corejs3/core-js-stable/instance/includes.js\");\n/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! shortid */ \"./node_modules/shortid/index.js\");\n/* harmony import */ var shortid__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(shortid__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var src_components_Button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/Button */ \"./src/components/Button/index.tsx\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var _Fieldset__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Fieldset */ \"./src/components/Datasource/Fieldset.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils */ \"./src/components/Datasource/utils.js\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\n\nvar SortOrder;\n(function (SortOrder) {\n  SortOrder[SortOrder[\"asc\"] = 1] = \"asc\";\n  SortOrder[SortOrder[\"desc\"] = 2] = \"desc\";\n  SortOrder[SortOrder[\"unsort\"] = 0] = \"unsort\";\n})(SortOrder || (SortOrder = {}));\nfunction createCollectionArray(collection) {\n  return Object.keys(collection).map((k) => collection[k]);\n}\nfunction createKeyedCollection(arr) {\n  const collectionArray = arr.map((o) => ({\n    ...o,\n    id: o.id || shortid__WEBPACK_IMPORTED_MODULE_3___default().generate() }));\n\n  const collection = {};\n  collectionArray.forEach((o) => {\n    collection[o.id] = o;\n  });\n  return {\n    collection,\n    collectionArray };\n\n}\nconst CrudTableWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_8__.styled.div`\n  ${(_ref) => {let { stickyHeader } = _ref;return stickyHeader &&\n  `\n      height: 350px;\n      overflow-y: auto;\n      overflow-x: auto;\n\n      .table {\n        min-width: 800px;\n      }\n      thead th {\n        background: #fff;\n        position: sticky;\n        top: 0;\n        z-index: 9;\n        min\n      }\n    `;}}\n  ${(_ref2) => {let { theme } = _ref2;return `\n    th span {\n      vertical-align: ${theme.gridUnit * -2}px;\n    }\n    .text-right {\n      text-align: right;\n    }\n    .empty-collection {\n      padding: ${theme.gridUnit * 2 + 2}px;\n    }\n    .tiny-cell {\n      width: ${theme.gridUnit + 1}px;\n    }\n    i.fa-caret-down,\n    i.fa-caret-up {\n      width: ${theme.gridUnit + 1}px;\n    }\n    td.expanded {\n      border-top: 0;\n      padding: 0;\n    }\n  `;}}\n`;\nconst CrudButtonWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_8__.styled.div`\n  text-align: right;\n  ${(_ref3) => {let { theme } = _ref3;return `margin-bottom: ${theme.gridUnit * 2}px`;}}\n`;\nconst StyledButtonWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_8__.styled.span`\n  ${(_ref4) => {let { theme } = _ref4;return `\n    margin-top: ${theme.gridUnit * 3}px;\n    margin-left: ${theme.gridUnit * 3}px;\n  `;}}\n`;\nclass CRUDCollection extends react__WEBPACK_IMPORTED_MODULE_2__.PureComponent {\n  constructor(props) {\n    super(props);\n    const { collection, collectionArray } = createKeyedCollection(props.collection);\n    this.state = {\n      expandedColumns: {},\n      collection,\n      collectionArray,\n      sortColumn: '',\n      sort: 0 };\n\n    this.renderItem = this.renderItem.bind(this);\n    this.onAddItem = this.onAddItem.bind(this);\n    this.renderExpandableSection = this.renderExpandableSection.bind(this);\n    this.getLabel = this.getLabel.bind(this);\n    this.onFieldsetChange = this.onFieldsetChange.bind(this);\n    this.renderTableBody = this.renderTableBody.bind(this);\n    this.changeCollection = this.changeCollection.bind(this);\n    this.sortColumn = this.sortColumn.bind(this);\n    this.renderSortIcon = this.renderSortIcon.bind(this);\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.collection !== this.props.collection) {\n      const { collection, collectionArray } = createKeyedCollection(nextProps.collection);\n      this.setState({\n        collection,\n        collectionArray });\n\n    }\n  }\n  onCellChange(id, col, val) {\n    this.changeCollection({\n      ...this.state.collection,\n      [id]: {\n        ...this.state.collection[id],\n        [col]: val } });\n\n\n  }\n  onAddItem() {\n    if (this.props.itemGenerator) {\n      let newItem = this.props.itemGenerator();\n      if (!newItem.id) {\n        newItem = { ...newItem, id: shortid__WEBPACK_IMPORTED_MODULE_3___default().generate() };\n      }\n      this.changeCollection(this.state.collection, newItem);\n    }\n  }\n  onFieldsetChange(item) {\n    this.changeCollection({\n      ...this.state.collection,\n      [item.id]: item });\n\n  }\n  getLabel(col) {\n    const { columnLabels } = this.props;\n    let label = columnLabels != null && columnLabels[col] ? columnLabels[col] : col;\n    if (label.startsWith('__')) {\n      // special label-free columns (ie: caret for expand, delete cross)\n      label = '';\n    }\n    return label;\n  }\n  changeCollection(collection, newItem) {\n    this.setState({ collection });\n    if (this.props.onChange) {\n      const collectionArray = this.state.collectionArray.\n      map((c) => collection[c.id])\n      // filter out removed items\n      .filter((c) => c !== undefined);\n      if (newItem) {\n        collectionArray.unshift(newItem);\n      }\n      this.props.onChange(collectionArray);\n    }\n  }\n  deleteItem(id) {\n    const newColl = { ...this.state.collection };\n    delete newColl[id];\n    this.changeCollection(newColl);\n  }\n  effectiveTableColumns() {\n    const { tableColumns, allowDeletes, expandFieldset } = this.props;\n    const cols = allowDeletes ?\n    tableColumns.concat(['__actions']) :\n    tableColumns;\n    return expandFieldset ? ['__expand'].concat(cols) : cols;\n  }\n  toggleExpand(id) {\n    this.onCellChange(id, '__expanded', false);\n    this.setState((prevState) => ({\n      expandedColumns: {\n        ...prevState.expandedColumns,\n        [id]: !prevState.expandedColumns[id] } }));\n\n\n  }\n  sortColumn(col, sort) {if (sort === void 0) {sort = SortOrder.unsort;}\n    const { sortColumns } = this.props;\n    // default sort logic sorting string, boolean and number\n    const compareSort = (m, n) => {\n      if (typeof m === 'string') {\n        return (m || ' ').localeCompare(n);\n      }\n      return m - n;\n    };\n    return () => {\n      if (sortColumns != null && _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_1___default()(sortColumns).call(sortColumns, col)) {\n        // display in unsorted order if no sort specified\n        if (sort === SortOrder.unsort) {\n          const { collection } = createKeyedCollection(this.props.collection);\n          const collectionArray = createCollectionArray(collection);\n          this.setState({\n            collectionArray,\n            sortColumn: '',\n            sort });\n\n          return;\n        }\n        // newly ordered collection\n        const sorted = [...this.state.collectionArray].sort((a, b) => compareSort(a[col], b[col]));\n        const newCollection = sort === SortOrder.asc ? sorted : sorted.reverse();\n        this.setState((prevState) => ({\n          ...prevState,\n          collectionArray: newCollection,\n          sortColumn: col,\n          sort }));\n\n      }\n    };\n  }\n  renderSortIcon(col) {\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.asc) {\n      return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_5__[\"default\"].SortAsc, { onClick: this.sortColumn(col, 2) });\n    }\n    if (this.state.sortColumn === col && this.state.sort === SortOrder.desc) {\n      return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_5__[\"default\"].SortDesc, { onClick: this.sortColumn(col, 0) });\n    }\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Sort, { onClick: this.sortColumn(col, 1) });\n  }\n  renderHeaderRow() {\n    const cols = this.effectiveTableColumns();\n    const { allowDeletes, expandFieldset, extraButtons, sortColumns } = this.props;\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"thead\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"tr\", null,\n    expandFieldset && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"th\", { \"aria-label\": \"Expand\", className: \"tiny-cell\" }),\n    cols.map((col) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"th\", { key: col },\n    this.getLabel(col),\n    (sortColumns == null ? void 0 : _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_1___default()(sortColumns).call(sortColumns, col)) && this.renderSortIcon(col))),\n\n    extraButtons,\n    allowDeletes && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"th\", { key: \"delete-item\", \"aria-label\": \"Delete\", className: \"tiny-cell\" })));\n\n\n  }\n  renderExpandableSection(item) {\n    const propsGenerator = () => ({ item, onChange: this.onFieldsetChange });\n    return (0,_utils__WEBPACK_IMPORTED_MODULE_7__.recurseReactClone)(this.props.expandFieldset, _Fieldset__WEBPACK_IMPORTED_MODULE_6__[\"default\"], propsGenerator);\n  }\n  getCellProps(record, col) {var _this$props$itemCellP;\n    const cellPropsFn = (_this$props$itemCellP = this.props.itemCellProps) == null ? void 0 : _this$props$itemCellP[col];\n    const val = record[col];\n    return cellPropsFn ? cellPropsFn(val, this.getLabel(col), record) : {};\n  }\n  renderCell(record, col) {var _this$props$itemRende;\n    const renderer = (_this$props$itemRende = this.props.itemRenderers) == null ? void 0 : _this$props$itemRende[col];\n    const val = record[col];\n    const onChange = this.onCellChange.bind(this, record.id, col);\n    return renderer ? renderer(val, onChange, this.getLabel(col), record) : val;\n  }\n  renderItem(record) {\n    const { allowAddItem, allowDeletes, expandFieldset, tableColumns } = this.props;\n    /* eslint-disable no-underscore-dangle */\n    const isExpanded = !!this.state.expandedColumns[record.id] || record.__expanded;\n    let tds = [];\n    if (expandFieldset) {\n      tds.push((0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"td\", { key: \"__expand\", className: \"expand\" },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"i\", { role: \"button\", \"aria-label\": \"Toggle expand\", tabIndex: 0, className: `fa fa-caret-${isExpanded ? 'down' : 'right'} text-primary pointer`, onClick: this.toggleExpand.bind(this, record.id) })));\n\n    }\n    tds = tds.concat(tableColumns.map((col) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"td\", _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({}, this.getCellProps(record, col), { key: col }),\n    this.renderCell(record, col))));\n\n    if (allowAddItem) {\n      tds.push((0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"td\", { key: \"add\" }));\n    }\n    if (allowDeletes) {\n      tds.push((0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"td\", { key: \"__actions\", \"data-test\": \"crud-delete-option\", className: \"text-primary\" },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Trash, { \"aria-label\": \"Delete item\", className: \"pointer\", \"data-test\": \"crud-delete-icon\", role: \"button\", tabIndex: 0, onClick: this.deleteItem.bind(this, record.id) })));\n\n    }\n    const trs = [\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"tr\", { 'data-test': 'table-row', className: \"row\", key: record.id },\n    tds)];\n\n\n    if (isExpanded) {\n      trs.push((0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"tr\", { className: \"exp\", key: `exp__${record.id}` },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"td\", { colSpan: this.effectiveTableColumns().length, className: \"expanded\" },\n      (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"div\", null, this.renderExpandableSection(record)))));\n\n\n    }\n    return trs;\n  }\n  renderEmptyCell() {\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"tr\", null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"td\", { className: \"empty-collection\" }, this.props.emptyMessage));\n\n  }\n  renderTableBody() {\n    const data = this.state.collectionArray;\n    const content = data.length ?\n    data.map((d) => this.renderItem(d)) :\n    this.renderEmptyCell();\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"tbody\", { \"data-test\": \"table-content-rows\" }, content);\n  }\n  render() {\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(react__WEBPACK_IMPORTED_MODULE_2__.Fragment, null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(CrudButtonWrapper, null,\n    this.props.allowAddItem && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(StyledButtonWrapper, null,\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(src_components_Button__WEBPACK_IMPORTED_MODULE_4__[\"default\"], { buttonSize: \"small\", buttonStyle: \"tertiary\", onClick: this.onAddItem, \"data-test\": \"add-item-button\" },\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"i\", { \"data-test\": \"crud-add-table-item\", className: \"fa fa-plus\" }), ' ',\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_10__.t)('Add item')))),\n\n\n\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(CrudTableWrapper, { className: \"CRUD\", stickyHeader: this.props.stickyHeader },\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"table\", { \"data-test\": \"crud-table\", className: \"table\" },\n    this.renderHeaderRow(),\n    this.renderTableBody())));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SortOrder, \"SortOrder\", \"/app/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(createCollectionArray, \"createCollectionArray\", \"/app/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(createKeyedCollection, \"createKeyedCollection\", \"/app/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(CrudTableWrapper, \"CrudTableWrapper\", \"/app/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(CrudButtonWrapper, \"CrudButtonWrapper\", \"/app/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(StyledButtonWrapper, \"StyledButtonWrapper\", \"/app/superset-frontend/src/components/Datasource/CollectionTable.tsx\");reactHotLoader.register(CRUDCollection, \"CRUDCollection\", \"/app/superset-frontend/src/components/Datasource/CollectionTable.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/Datasource/CollectionTable.tsx\n");

/***/ }),

/***/ "./src/components/Datasource/Field.tsx":
/*!*********************************************!*\
  !*** ./src/components/Datasource/Field.tsx ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Field)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* harmony import */ var src_components_Tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/Tooltip */ \"./src/components/Tooltip/index.tsx\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\nconst formItemInlineCss = _superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.css`\n  .ant-form-item-control-input-content {\n    display: flex;\n    flex-direction: row;\n  }\n`;\nfunction Field(_ref) {let { fieldKey, value, label, description = null, control, onChange = () => {}, compact = false, inline } = _ref;\n  const onControlChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((newValue) => {\n    onChange(fieldKey, newValue);\n  }, [onChange, fieldKey]);\n  const hookedControl = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(control, {\n    value,\n    onChange: onControlChange });\n\n  return (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_2__.FormItem, { label: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_2__.FormLabel, { className: \"m-r-5\" },\n    label || fieldKey,\n    compact && description && (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Tooltip__WEBPACK_IMPORTED_MODULE_1__.Tooltip, { id: \"field-descr\", placement: \"right\", title: description },\n    (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"i\", { className: \"fa fa-info-circle m-l-5\" }))),\n\n    css: inline && formItemInlineCss },\n  hookedControl,\n  !compact && description && (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_3__.jsx)(\"div\", { css: (theme) => ({\n      color: theme.colors.grayscale.base,\n      [inline ? 'marginLeft' : 'marginTop']: theme.gridUnit }) },\n\n  description));\n\n\n}__signature__(Field, \"useCallback{onControlChange}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(formItemInlineCss, \"formItemInlineCss\", \"/app/superset-frontend/src/components/Datasource/Field.tsx\");reactHotLoader.register(Field, \"Field\", \"/app/superset-frontend/src/components/Datasource/Field.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9EYXRhc291cmNlL0ZpZWxkLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7QUFBQTtBQWtCQTtBQVVBO0FBRUE7QUFDQTtBQUlBO0FBQ0E7QUFDQTs7QUFFQTtBQUlBO0FBQ0E7QUFFQTs7QUFLQTtBQUVBO0FBQ0E7QUFHQTtBQUNBOztBQUdBOzs7QUFLQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vc3JjL2NvbXBvbmVudHMvRGF0YXNvdXJjZS9GaWVsZC50c3g/YjA1OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuICogdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgUmVhY3QsIHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IGNzcywgU3VwZXJzZXRUaGVtZSB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcclxuaW1wb3J0IHsgVG9vbHRpcCB9IGZyb20gJ3NyYy9jb21wb25lbnRzL1Rvb2x0aXAnO1xyXG5pbXBvcnQgeyBGb3JtSXRlbSwgRm9ybUxhYmVsIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvRm9ybSc7XHJcblxyXG5jb25zdCBmb3JtSXRlbUlubGluZUNzcyA9IGNzc2BcclxuICAuYW50LWZvcm0taXRlbS1jb250cm9sLWlucHV0LWNvbnRlbnQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgfVxyXG5gO1xyXG5cclxuaW50ZXJmYWNlIEZpZWxkUHJvcHM8Vj4ge1xyXG4gIGZpZWxkS2V5OiBzdHJpbmc7XHJcbiAgdmFsdWU/OiBWO1xyXG4gIGxhYmVsOiBzdHJpbmc7XHJcbiAgZGVzY3JpcHRpb24/OiBSZWFjdC5SZWFjdE5vZGU7XHJcbiAgY29udHJvbDogUmVhY3QuUmVhY3RFbGVtZW50O1xyXG4gIG9uQ2hhbmdlOiAoZmllbGRLZXk6IHN0cmluZywgbmV3VmFsdWU6IFYpID0+IHZvaWQ7XHJcbiAgY29tcGFjdDogYm9vbGVhbjtcclxuICBpbmxpbmU6IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEZpZWxkPFY+KHtcclxuICBmaWVsZEtleSxcclxuICB2YWx1ZSxcclxuICBsYWJlbCxcclxuICBkZXNjcmlwdGlvbiA9IG51bGwsXHJcbiAgY29udHJvbCxcclxuICBvbkNoYW5nZSA9ICgpID0+IHt9LFxyXG4gIGNvbXBhY3QgPSBmYWxzZSxcclxuICBpbmxpbmUsXHJcbn06IEZpZWxkUHJvcHM8Vj4pIHtcclxuICBjb25zdCBvbkNvbnRyb2xDaGFuZ2UgPSB1c2VDYWxsYmFjayhcclxuICAgIG5ld1ZhbHVlID0+IHtcclxuICAgICAgb25DaGFuZ2UoZmllbGRLZXksIG5ld1ZhbHVlKTtcclxuICAgIH0sXHJcbiAgICBbb25DaGFuZ2UsIGZpZWxkS2V5XSxcclxuICApO1xyXG5cclxuICBjb25zdCBob29rZWRDb250cm9sID0gUmVhY3QuY2xvbmVFbGVtZW50KGNvbnRyb2wsIHtcclxuICAgIHZhbHVlLFxyXG4gICAgb25DaGFuZ2U6IG9uQ29udHJvbENoYW5nZSxcclxuICB9KTtcclxuICByZXR1cm4gKFxyXG4gICAgPEZvcm1JdGVtXHJcbiAgICAgIGxhYmVsPXtcclxuICAgICAgICA8Rm9ybUxhYmVsIGNsYXNzTmFtZT1cIm0tci01XCI+XHJcbiAgICAgICAgICB7bGFiZWwgfHwgZmllbGRLZXl9XHJcbiAgICAgICAgICB7Y29tcGFjdCAmJiBkZXNjcmlwdGlvbiAmJiAoXHJcbiAgICAgICAgICAgIDxUb29sdGlwIGlkPVwiZmllbGQtZGVzY3JcIiBwbGFjZW1lbnQ9XCJyaWdodFwiIHRpdGxlPXtkZXNjcmlwdGlvbn0+XHJcbiAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtaW5mby1jaXJjbGUgbS1sLTVcIiAvPlxyXG4gICAgICAgICAgICA8L1Rvb2x0aXA+XHJcbiAgICAgICAgICApfVxyXG4gICAgICAgIDwvRm9ybUxhYmVsPlxyXG4gICAgICB9XHJcbiAgICAgIGNzcz17aW5saW5lICYmIGZvcm1JdGVtSW5saW5lQ3NzfVxyXG4gICAgPlxyXG4gICAgICB7aG9va2VkQ29udHJvbH1cclxuICAgICAgeyFjb21wYWN0ICYmIGRlc2NyaXB0aW9uICYmIChcclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9eyh0aGVtZTogU3VwZXJzZXRUaGVtZSkgPT4gKHtcclxuICAgICAgICAgICAgY29sb3I6IHRoZW1lLmNvbG9ycy5ncmF5c2NhbGUuYmFzZSxcclxuICAgICAgICAgICAgW2lubGluZSA/ICdtYXJnaW5MZWZ0JyA6ICdtYXJnaW5Ub3AnXTogdGhlbWUuZ3JpZFVuaXQsXHJcbiAgICAgICAgICB9KX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICB7ZGVzY3JpcHRpb259XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICl9XHJcbiAgICA8L0Zvcm1JdGVtPlxyXG4gICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/Datasource/Field.tsx\n");

/***/ }),

/***/ "./src/components/Datasource/Fieldset.tsx":
/*!************************************************!*\
  !*** ./src/components/Datasource/Fieldset.tsx ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Fieldset)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./src/components/Datasource/utils.js\");\n/* harmony import */ var _Field__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Field */ \"./src/components/Datasource/Field.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\nclass Fieldset extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent {\n\n\n\n\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n  onChange(fieldKey, val) {\n    return this.props.onChange({\n      ...this.props.item,\n      [fieldKey]: val });\n\n  }\n  render() {\n    const { title } = this.props;\n    const propExtender = (field) => ({\n      onChange: this.onChange,\n      value: this.props.item[field.props.fieldKey],\n      compact: this.props.compact });\n\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_1__.Form, { className: \"CRUD\", layout: \"vertical\" },\n    title && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_4__.jsx)(\"legend\", null, title),\n    (0,_utils__WEBPACK_IMPORTED_MODULE_2__.recurseReactClone)(this.props.children, _Field__WEBPACK_IMPORTED_MODULE_3__[\"default\"], propExtender));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}Fieldset.defaultProps = { compact: false, title: null };;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Fieldset, \"Fieldset\", \"/app/superset-frontend/src/components/Datasource/Fieldset.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9EYXRhc291cmNlL0ZpZWxkc2V0LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBO0FBQ0E7QUFFQTtBQUNBO0FBWUE7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBO0FBQ0E7O0FBR0E7QUEvQkE7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vc3JjL2NvbXBvbmVudHMvRGF0YXNvdXJjZS9GaWVsZHNldC50c3g/OTBiNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuICogdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBGb3JtIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvRm9ybSc7XHJcblxyXG5pbXBvcnQgeyByZWN1cnNlUmVhY3RDbG9uZSB9IGZyb20gJy4vdXRpbHMnO1xyXG5pbXBvcnQgRmllbGQgZnJvbSAnLi9GaWVsZCc7XHJcblxyXG5pbnRlcmZhY2UgRmllbGRzZXRQcm9wcyB7XHJcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcclxuICBvbkNoYW5nZTogRnVuY3Rpb247XHJcbiAgaXRlbTogUmVjb3JkPHN0cmluZywgYW55PjtcclxuICB0aXRsZTogUmVhY3QuUmVhY3ROb2RlO1xyXG4gIGNvbXBhY3Q6IGJvb2xlYW47XHJcbn1cclxuXHJcbnR5cGUgZmllbGRLZXlUeXBlID0gc3RyaW5nIHwgbnVtYmVyO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRmllbGRzZXQgZXh0ZW5kcyBSZWFjdC5QdXJlQ29tcG9uZW50PEZpZWxkc2V0UHJvcHM+IHtcclxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xyXG4gICAgY29tcGFjdDogZmFsc2UsXHJcbiAgICB0aXRsZTogbnVsbCxcclxuICB9O1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcm9wczogRmllbGRzZXRQcm9wcykge1xyXG4gICAgc3VwZXIocHJvcHMpO1xyXG4gICAgdGhpcy5vbkNoYW5nZSA9IHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKTtcclxuICB9XHJcblxyXG4gIG9uQ2hhbmdlKGZpZWxkS2V5OiBmaWVsZEtleVR5cGUsIHZhbDogYW55KSB7XHJcbiAgICByZXR1cm4gdGhpcy5wcm9wcy5vbkNoYW5nZSh7XHJcbiAgICAgIC4uLnRoaXMucHJvcHMuaXRlbSxcclxuICAgICAgW2ZpZWxkS2V5XTogdmFsLFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoKSB7XHJcbiAgICBjb25zdCB7IHRpdGxlIH0gPSB0aGlzLnByb3BzO1xyXG4gICAgY29uc3QgcHJvcEV4dGVuZGVyID0gKGZpZWxkOiB7IHByb3BzOiB7IGZpZWxkS2V5OiBmaWVsZEtleVR5cGUgfSB9KSA9PiAoe1xyXG4gICAgICBvbkNoYW5nZTogdGhpcy5vbkNoYW5nZSxcclxuICAgICAgdmFsdWU6IHRoaXMucHJvcHMuaXRlbVtmaWVsZC5wcm9wcy5maWVsZEtleV0sXHJcbiAgICAgIGNvbXBhY3Q6IHRoaXMucHJvcHMuY29tcGFjdCxcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPEZvcm0gY2xhc3NOYW1lPVwiQ1JVRFwiIGxheW91dD1cInZlcnRpY2FsXCI+XHJcbiAgICAgICAge3RpdGxlICYmIDxsZWdlbmQ+e3RpdGxlfTwvbGVnZW5kPn1cclxuICAgICAgICB7cmVjdXJzZVJlYWN0Q2xvbmUodGhpcy5wcm9wcy5jaGlsZHJlbiwgRmllbGQsIHByb3BFeHRlbmRlcil9XHJcbiAgICAgIDwvRm9ybT5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Datasource/Fieldset.tsx\n");

/***/ }),

/***/ "./src/components/EditableTitle/index.tsx":
/*!************************************************!*\
  !*** ./src/components/EditableTitle/index.tsx ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EditableTitle)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime-corejs3/helpers/extends */ \"./node_modules/@babel/runtime-corejs3/helpers/extends.js\");\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router-dom/esm/react-router-dom.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* harmony import */ var src_components_Tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components/Tooltip */ \"./src/components/Tooltip/index.tsx\");\n/* harmony import */ var _CertifiedBadge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../CertifiedBadge */ \"./src/components/CertifiedBadge/index.tsx\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\nconst StyledCertifiedBadge = (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_5__.styled)(_CertifiedBadge__WEBPACK_IMPORTED_MODULE_4__[\"default\"])`\n  vertical-align: middle;\n`;\nfunction EditableTitle(_ref)\n\n{let { canEdit = false, editing = false, extraClasses, multiLine = false, noPermitTooltip, onSaveTitle, showTooltip = true, style, title = '', defaultTitle = '', placeholder = '', certifiedBy, certificationDetails, url, // rest is related to title tooltip\n    ...rest } = _ref;const [isEditing, setIsEditing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(editing);\n  const [currentTitle, setCurrentTitle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(title);\n  const [lastTitle, setLastTitle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(title);\n  const [contentBoundingRect, setContentBoundingRect] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  // Used so we can access the DOM element if a user clicks on this component.\n  const contentRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (title !== currentTitle) {\n      setLastTitle(currentTitle);\n      setCurrentTitle(title);\n    }\n  }, [title]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (isEditing) {\n      contentRef.current.focus();\n      // move cursor and scroll to the end\n      if (contentRef.current.setSelectionRange) {\n        const { length } = contentRef.current.value;\n        contentRef.current.setSelectionRange(length, length);\n        contentRef.current.scrollLeft = contentRef.current.scrollWidth;\n        contentRef.current.scrollTop = contentRef.current.scrollHeight;\n      }\n    }\n  }, [isEditing]);\n  function handleClick() {\n    if (!canEdit || isEditing) {\n      return;\n    }\n    // For multi-line values, save the actual rendered size of the displayed text.\n    // Later, if a textarea is constructed for editing the value, we'll need this.\n    const contentBounding = contentRef.current ?\n    contentRef.current.getBoundingClientRect() :\n    null;\n    setIsEditing(true);\n    setContentBoundingRect(contentBounding);\n  }\n  function handleBlur() {\n    const formattedTitle = currentTitle.trim();\n    if (!canEdit) {\n      return;\n    }\n    setIsEditing(false);\n    if (!formattedTitle.length) {\n      setCurrentTitle(lastTitle);\n      return;\n    }\n    if (lastTitle !== formattedTitle) {\n      setLastTitle(formattedTitle);\n    }\n    if (title !== formattedTitle) {\n      onSaveTitle(formattedTitle);\n    }\n  }\n  // tl;dr when a EditableTitle is being edited, typically the Tab that wraps it has been\n  // clicked and is focused/active. For accessibility, when the focused tab anchor intercepts\n  // the ' ' key (among others, including all arrows) the onChange() doesn't fire. Somehow\n  // keydown is still called so we can detect this and manually add a ' ' to the current title\n  function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.stopPropagation();\n    }\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleBlur();\n    }\n  }\n  function handleChange(ev) {\n    if (!canEdit) {\n      return;\n    }\n    setCurrentTitle(ev.target.value);\n  }\n  function handleKeyPress(ev) {\n    if (ev.key === 'Enter') {\n      ev.preventDefault();\n      handleBlur();\n    }\n  }\n  let value;\n  value = currentTitle;\n  if (!isEditing && !currentTitle) {\n    value = defaultTitle || title;\n  }\n  // Construct an inline style based on previously-saved height of the rendered label. Only\n  // used in multi-line contexts.\n  const editStyle = isEditing && contentBoundingRect ?\n  { height: `${contentBoundingRect.height}px` } :\n  undefined;\n  // Create a textarea when we're editing a multi-line value, otherwise create an input (which may\n  // be text or a button).\n  let titleComponent = multiLine && isEditing ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"textarea\", { \"data-test\": \"editable-title-input\", ref: contentRef, value: value, className: !title ? 'text-muted' : undefined, onKeyDown: handleKeyDown, onChange: handleChange, onBlur: handleBlur, onClick: handleClick, onKeyPress: handleKeyPress, placeholder: placeholder, style: editStyle }) : (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"input\", { \"data-test\": \"editable-title-input\", ref: contentRef, type: isEditing ? 'text' : 'button', value: value, className: !title ? 'text-muted' : undefined, onKeyDown: handleKeyDown, onChange: handleChange, onBlur: handleBlur, onClick: handleClick, onKeyPress: handleKeyPress, placeholder: placeholder });\n  if (showTooltip && !isEditing) {\n    titleComponent = (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(src_components_Tooltip__WEBPACK_IMPORTED_MODULE_3__.Tooltip, { id: \"title-tooltip\", title: canEdit ?\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_7__.t)('Click to edit') :\n      noPermitTooltip ||\n      (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_7__.t)(\"You don't have the rights to alter this title.\") },\n    titleComponent);\n\n  }\n  if (!canEdit) {\n    // don't actually want an input in this case\n    titleComponent = url ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_8__.Link, { to: url, \"data-test\": \"editable-title-input\", css: (theme) => _emotion_react__WEBPACK_IMPORTED_MODULE_6__.css`\n          color: ${theme.colors.grayscale.dark1};\n          text-decoration: none;\n          :hover {\n            text-decoration: underline;\n          }\n        ` },\n    value) :\n    (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"span\", { \"data-test\": \"editable-title-input\" }, value);\n  }\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(\"span\", _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({ \"data-test\": \"editable-title\", className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('editable-title', extraClasses, canEdit && 'editable-title--editable', isEditing && 'editable-title--editing'), style: style }, rest),\n  certifiedBy && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, null,\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_6__.jsx)(StyledCertifiedBadge, { certifiedBy: certifiedBy, details: certificationDetails, size: \"xl\" }), ' '),\n\n  titleComponent);\n\n}__signature__(EditableTitle, \"useState{[isEditing, setIsEditing](editing)}\\nuseState{[currentTitle, setCurrentTitle](title)}\\nuseState{[lastTitle, setLastTitle](title)}\\nuseState{[contentBoundingRect, setContentBoundingRect](null)}\\nuseRef{contentRef}\\nuseEffect{}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledCertifiedBadge, \"StyledCertifiedBadge\", \"/app/superset-frontend/src/components/EditableTitle/index.tsx\");reactHotLoader.register(EditableTitle, \"EditableTitle\", \"/app/superset-frontend/src/components/EditableTitle/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/EditableTitle/index.tsx\n");

/***/ }),

/***/ "./src/components/RefreshLabel/index.tsx":
/*!***********************************************!*\
  !*** ./src/components/RefreshLabel/index.tsx ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var src_components_Tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/components/Tooltip */ \"./src/components/Tooltip/index.tsx\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\nconst RefreshLabel = (_ref) => {let { onClick, tooltipContent } = _ref;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const IconWithoutRef = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((props, ref) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Refresh, props));\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_3__.jsx)(src_components_Tooltip__WEBPACK_IMPORTED_MODULE_1__.Tooltip, { title: tooltipContent },\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_3__.jsx)(IconWithoutRef, { role: \"button\", onClick: onClick, css: (theme) => ({\n      cursor: 'pointer',\n      color: theme.colors.grayscale.base,\n      '&:hover': { color: theme.colors.primary.base } }) }));\n\n\n};const _default =\nRefreshLabel;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RefreshLabel, \"RefreshLabel\", \"/app/superset-frontend/src/components/RefreshLabel/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/RefreshLabel/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9SZWZyZXNoTGFiZWwvaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTtBQUVBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFJQTtBQUVBO0FBSUE7QUFDQTtBQUNBOzs7QUFLQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9zcmMvY29tcG9uZW50cy9SZWZyZXNoTGFiZWwvaW5kZXgudHN4P2IyNjkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcclxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXHJcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXHJcbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcclxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxyXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcclxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXHJcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXHJcbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXHJcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxyXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXHJcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IFJlYWN0LCB7IE1vdXNlRXZlbnRIYW5kbGVyLCBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgeyBTdXBlcnNldFRoZW1lIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xyXG5pbXBvcnQgeyBUb29sdGlwIH0gZnJvbSAnc3JjL2NvbXBvbmVudHMvVG9vbHRpcCc7XHJcbmltcG9ydCBJY29ucywgeyBJY29uVHlwZSB9IGZyb20gJ3NyYy9jb21wb25lbnRzL0ljb25zJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVmcmVzaExhYmVsUHJvcHMge1xyXG4gIG9uQ2xpY2s6IE1vdXNlRXZlbnRIYW5kbGVyPEhUTUxTcGFuRWxlbWVudD47XHJcbiAgdG9vbHRpcENvbnRlbnQ6IHN0cmluZztcclxufVxyXG5cclxuY29uc3QgUmVmcmVzaExhYmVsID0gKHsgb25DbGljaywgdG9vbHRpcENvbnRlbnQgfTogUmVmcmVzaExhYmVsUHJvcHMpID0+IHtcclxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXHJcbiAgY29uc3QgSWNvbldpdGhvdXRSZWYgPSBmb3J3YXJkUmVmKChwcm9wczogSWNvblR5cGUsIHJlZjogYW55KSA9PiAoXHJcbiAgICA8SWNvbnMuUmVmcmVzaCB7Li4ucHJvcHN9IC8+XHJcbiAgKSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8VG9vbHRpcCB0aXRsZT17dG9vbHRpcENvbnRlbnR9PlxyXG4gICAgICA8SWNvbldpdGhvdXRSZWZcclxuICAgICAgICByb2xlPVwiYnV0dG9uXCJcclxuICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxyXG4gICAgICAgIGNzcz17KHRoZW1lOiBTdXBlcnNldFRoZW1lKSA9PiAoe1xyXG4gICAgICAgICAgY3Vyc29yOiAncG9pbnRlcicsXHJcbiAgICAgICAgICBjb2xvcjogdGhlbWUuY29sb3JzLmdyYXlzY2FsZS5iYXNlLFxyXG4gICAgICAgICAgJyY6aG92ZXInOiB7IGNvbG9yOiB0aGVtZS5jb2xvcnMucHJpbWFyeS5iYXNlIH0sXHJcbiAgICAgICAgfSl9XHJcbiAgICAgIC8+XHJcbiAgICA8L1Rvb2x0aXA+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFJlZnJlc2hMYWJlbDtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/RefreshLabel/index.tsx\n");

/***/ }),

/***/ "./src/components/TableSelector/index.tsx":
/*!************************************************!*\
  !*** ./src/components/TableSelector/index.tsx ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TableOption\": () => (/* binding */ TableOption),\n/* harmony export */   \"TableSelectorMultiple\": () => (/* binding */ TableSelectorMultiple),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime-corejs3/helpers/extends */ \"./node_modules/@babel/runtime-corejs3/helpers/extends.js\");\n/* harmony import */ var _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime-corejs3/core-js-stable/instance/includes */ \"./node_modules/@babel/runtime-corejs3/core-js-stable/instance/includes.js\");\n/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/style/index.tsx\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/translation/TranslatorSingleton.ts\");\n/* harmony import */ var src_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/components */ \"./src/components/index.ts\");\n/* harmony import */ var src_components_Form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/components/Form */ \"./src/components/Form/index.tsx\");\n/* harmony import */ var src_components_Icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/components/Icons */ \"./src/components/Icons/index.tsx\");\n/* harmony import */ var src_components_DatabaseSelector__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/components/DatabaseSelector */ \"./src/components/DatabaseSelector/index.tsx\");\n/* harmony import */ var src_components_RefreshLabel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/components/RefreshLabel */ \"./src/components/RefreshLabel/index.tsx\");\n/* harmony import */ var src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/components/CertifiedBadge */ \"./src/components/CertifiedBadge/index.tsx\");\n/* harmony import */ var src_components_WarningIconWithTooltip__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/components/WarningIconWithTooltip */ \"./src/components/WarningIconWithTooltip/index.tsx\");\n/* harmony import */ var src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/components/MessageToasts/withToasts */ \"./src/components/MessageToasts/withToasts.tsx\");\n/* harmony import */ var src_hooks_apiResources__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/hooks/apiResources */ \"./src/hooks/apiResources/index.ts\");\n/* harmony import */ var src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/utils/getClientErrorObject */ \"./src/utils/getClientErrorObject.ts\");\n/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @emotion/react */ \"./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\n\n\n\n\n\n\n\n\n\nconst REFRESH_WIDTH = 30;\nconst TableSelectorWrapper = _superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.styled.div`\n  ${(_ref) => {let { theme } = _ref;return `\n    .refresh {\n      display: flex;\n      align-items: center;\n      width: ${REFRESH_WIDTH}px;\n      margin-left: ${theme.gridUnit}px;\n      margin-top: ${theme.gridUnit * 5}px;\n    }\n\n    .section {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n    }\n\n    .divider {\n      border-bottom: 1px solid ${theme.colors.secondary.light5};\n      margin: 15px 0;\n    }\n\n    .table-length {\n      color: ${theme.colors.grayscale.light1};\n    }\n\n    .select {\n      flex: 1;\n      max-width: calc(100% - ${theme.gridUnit + REFRESH_WIDTH}px)\n    }\n  `;}}\n`;\nconst TableLabel = _superset_ui_core__WEBPACK_IMPORTED_MODULE_13__.styled.span`\n  align-items: center;\n  display: flex;\n  white-space: nowrap;\n\n  svg,\n  small {\n    margin-right: ${(_ref2) => {let { theme } = _ref2;return theme.gridUnit;}}px;\n  }\n`;\nconst TableOption = (_ref3) => {let { table } = _ref3;\n  const { value, type, extra } = table;\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(TableLabel, { title: value },\n  type === 'view' ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Eye, { iconSize: \"m\" }) : (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_Icons__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Table, { iconSize: \"m\" }),\n  (extra == null ? void 0 : extra.certification) && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_CertifiedBadge__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { certifiedBy: extra.certification.certified_by, details: extra.certification.details, size: \"l\" }),\n  (extra == null ? void 0 : extra.warning_markdown) && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_WarningIconWithTooltip__WEBPACK_IMPORTED_MODULE_9__[\"default\"], { warningMarkdown: extra.warning_markdown, size: \"l\" }),\n  value);\n\n};\nfunction renderSelectRow(select, refreshBtn) {\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", { className: \"section\" },\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"span\", { className: \"select\" }, select),\n  (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"span\", { className: \"refresh\" }, refreshBtn));\n\n}\nconst TableSelector = (_ref4) => {let { database, emptyState, formMode = false, getDbList, handleError, isDatabaseSelectEnabled = true, onDbChange, onSchemaChange, onSchemasLoad, onTablesLoad, readOnly = false, onEmptyResults, schema, sqlLabMode = true, tableSelectMode = 'single', tableValue = undefined, onTableSelectChange } = _ref4;\n  const { addSuccessToast } = (0,src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_10__.useToasts)();\n  const [currentSchema, setCurrentSchema] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(schema);\n  const [tableSelectValue, setTableSelectValue] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(undefined);\n  const { data, isFetching: loadingTables, isFetched, refetch } = (0,src_hooks_apiResources__WEBPACK_IMPORTED_MODULE_11__.useTables)({\n    dbId: database == null ? void 0 : database.id,\n    schema: currentSchema,\n    onSuccess: (data) => {\n      onTablesLoad == null ? void 0 : onTablesLoad(data.options);\n      if (isFetched) {\n        addSuccessToast((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('List updated'));\n      }\n    },\n    onError: (err) => {\n      (0,src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_12__.getClientErrorObject)(err).then((clientError) => {\n        handleError((0,src_utils_getClientErrorObject__WEBPACK_IMPORTED_MODULE_12__.getClientErrorMessage)((0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('There was an error loading the tables'), clientError));\n      });\n    } });\n\n  const tableOptions = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(() => data ?\n  data.options.map((table) => ({\n    value: table.value,\n    label: (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(TableOption, { table: table }),\n    text: table.value })) :\n\n  [], [data]);\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    // reset selections\n    if (database === undefined) {\n      setCurrentSchema(undefined);\n      setTableSelectValue(undefined);\n    }\n  }, [database, tableSelectMode]);\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    if (tableSelectMode === 'single') {\n      setTableSelectValue(tableOptions.find((option) => option.value === tableValue));\n    } else\n    {\n      setTableSelectValue((tableOptions == null ? void 0 : tableOptions.filter((option) => option && (tableValue == null ? void 0 : _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_1___default()(tableValue).call(tableValue, option.value)))) || []);\n    }\n  }, [tableOptions, tableValue, tableSelectMode]);\n  const internalTableChange = (selectedOptions) => {\n    if (currentSchema) {\n      onTableSelectChange == null ? void 0 : onTableSelectChange(Array.isArray(selectedOptions) ?\n      selectedOptions.map((option) => option == null ? void 0 : option.value) :\n      selectedOptions == null ? void 0 : selectedOptions.value, currentSchema);\n    } else\n    {\n      setTableSelectValue(selectedOptions);\n    }\n  };\n  const internalDbChange = (db) => {\n    if (onDbChange) {\n      onDbChange(db);\n    }\n  };\n  const internalSchemaChange = (schema) => {\n    setCurrentSchema(schema);\n    if (onSchemaChange) {\n      onSchemaChange(schema);\n    }\n    const value = tableSelectMode === 'single' ? undefined : [];\n    internalTableChange(value);\n  };\n  function renderDatabaseSelector() {\n    return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_DatabaseSelector__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { db: database, emptyState: emptyState, formMode: formMode, getDbList: getDbList, handleError: handleError, onDbChange: readOnly ? undefined : internalDbChange, onEmptyResults: onEmptyResults, onSchemaChange: readOnly ? undefined : internalSchemaChange, onSchemasLoad: onSchemasLoad, schema: currentSchema, sqlLabMode: sqlLabMode, isDatabaseSelectEnabled: isDatabaseSelectEnabled && !readOnly, readOnly: readOnly });\n  }\n  const handleFilterOption = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(() => (search, option) => {var _context;\n    const searchValue = search.trim().toLowerCase();\n    const { text } = option;\n    return _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_1___default()(_context = text.toLowerCase()).call(_context, searchValue);\n  }, []);\n  function renderTableSelect() {\n    const disabled = currentSchema && !formMode && readOnly || !currentSchema;\n    const header = sqlLabMode ? (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_4__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('See table schema')) : (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_Form__WEBPACK_IMPORTED_MODULE_4__.FormLabel, null, (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Table'));\n    const select = (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components__WEBPACK_IMPORTED_MODULE_3__.Select, { ariaLabel: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Select table or type table name'), disabled: disabled, filterOption: handleFilterOption, header: header, labelInValue: true, loading: loadingTables, name: \"select-table\", onChange: (options) => internalTableChange(options), options: tableOptions, placeholder: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Select table or type table name'), showSearch: true, mode: tableSelectMode, value: tableSelectValue, allowClear: tableSelectMode === 'multiple' });\n    const refreshLabel = !readOnly && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(src_components_RefreshLabel__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { onClick: () => refetch(), tooltipContent: (0,_superset_ui_core__WEBPACK_IMPORTED_MODULE_15__.t)('Force refresh table list') });\n    return renderSelectRow(select, refreshLabel);\n  }\n  return (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(TableSelectorWrapper, null,\n  renderDatabaseSelector(),\n  sqlLabMode && !formMode && (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(\"div\", { className: \"divider\" }),\n  renderTableSelect());\n\n};__signature__(TableSelector, \"useToasts{{ addSuccessToast }}\\nuseState{[currentSchema, setCurrentSchema](schema)}\\nuseState{[tableSelectValue, setTableSelectValue](undefined)}\\nuseTables{{ data, isFetching: loadingTables, isFetched, refetch, }}\\nuseMemo{tableOptions}\\nuseEffect{}\\nuseEffect{}\\nuseMemo{handleFilterOption}\", () => [src_components_MessageToasts_withToasts__WEBPACK_IMPORTED_MODULE_10__.useToasts, src_hooks_apiResources__WEBPACK_IMPORTED_MODULE_11__.useTables]);\nconst TableSelectorMultiple = (props) => (0,_emotion_react__WEBPACK_IMPORTED_MODULE_14__.jsx)(TableSelector, _babel_runtime_corejs3_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default()({ tableSelectMode: \"multiple\" }, props));const _default =\nTableSelector;/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_default);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(REFRESH_WIDTH, \"REFRESH_WIDTH\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");reactHotLoader.register(TableSelectorWrapper, \"TableSelectorWrapper\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");reactHotLoader.register(TableLabel, \"TableLabel\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");reactHotLoader.register(TableOption, \"TableOption\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");reactHotLoader.register(renderSelectRow, \"renderSelectRow\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");reactHotLoader.register(TableSelector, \"TableSelector\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");reactHotLoader.register(TableSelectorMultiple, \"TableSelectorMultiple\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/TableSelector/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/TableSelector/index.tsx\n");

/***/ }),

/***/ "./src/hooks/apiResources/charts.ts":
/*!******************************************!*\
  !*** ./src/hooks/apiResources/charts.ts ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useChartOwnerNames\": () => (/* binding */ useChartOwnerNames)\n/* harmony export */ });\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rison */ \"./node_modules/rison/js/rison.js\");\n/* harmony import */ var rison__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(rison__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _apiResources__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apiResources */ \"./src/hooks/apiResources/apiResources.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nfunction extractOwnerNames(_ref) {let { owners } = _ref;\n  if (!owners)\n  return null;\n  return owners.map((owner) => `${owner.first_name} ${owner.last_name}`);\n}\nconst ownerNamesQuery = rison__WEBPACK_IMPORTED_MODULE_0___default().encode({\n  columns: ['owners.first_name', 'owners.last_name'],\n  keys: ['none'] });\n\nfunction useChartOwnerNames(chartId) {\n  return (0,_apiResources__WEBPACK_IMPORTED_MODULE_1__.useTransformedResource)((0,_apiResources__WEBPACK_IMPORTED_MODULE_1__.useApiV1Resource)(`/api/v1/chart/${chartId}?q=${ownerNamesQuery}`), extractOwnerNames);\n}__signature__(useChartOwnerNames, \"useTransformedResource{}\\nuseApiV1Resource{}\", () => [_apiResources__WEBPACK_IMPORTED_MODULE_1__.useTransformedResource, _apiResources__WEBPACK_IMPORTED_MODULE_1__.useApiV1Resource]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(extractOwnerNames, \"extractOwnerNames\", \"/app/superset-frontend/src/hooks/apiResources/charts.ts\");reactHotLoader.register(ownerNamesQuery, \"ownerNamesQuery\", \"/app/superset-frontend/src/hooks/apiResources/charts.ts\");reactHotLoader.register(useChartOwnerNames, \"useChartOwnerNames\", \"/app/superset-frontend/src/hooks/apiResources/charts.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaG9va3MvYXBpUmVzb3VyY2VzL2NoYXJ0cy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQTtBQUVBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBSUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3NyYy9ob29rcy9hcGlSZXNvdXJjZXMvY2hhcnRzLnRzPzlkYzAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcclxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXHJcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXHJcbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcclxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxyXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcclxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXHJcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXHJcbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXHJcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxyXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXHJcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuXHJcbmltcG9ydCByaXNvbiBmcm9tICdyaXNvbic7XHJcbmltcG9ydCBDaGFydCBmcm9tICdzcmMvdHlwZXMvQ2hhcnQnO1xyXG5pbXBvcnQgeyB1c2VBcGlWMVJlc291cmNlLCB1c2VUcmFuc2Zvcm1lZFJlc291cmNlIH0gZnJvbSAnLi9hcGlSZXNvdXJjZXMnO1xyXG5cclxuZnVuY3Rpb24gZXh0cmFjdE93bmVyTmFtZXMoeyBvd25lcnMgfTogQ2hhcnQpIHtcclxuICBpZiAoIW93bmVycykgcmV0dXJuIG51bGw7XHJcbiAgcmV0dXJuIG93bmVycy5tYXAob3duZXIgPT4gYCR7b3duZXIuZmlyc3RfbmFtZX0gJHtvd25lci5sYXN0X25hbWV9YCk7XHJcbn1cclxuXHJcbmNvbnN0IG93bmVyTmFtZXNRdWVyeSA9IHJpc29uLmVuY29kZSh7XHJcbiAgY29sdW1uczogWydvd25lcnMuZmlyc3RfbmFtZScsICdvd25lcnMubGFzdF9uYW1lJ10sXHJcbiAga2V5czogWydub25lJ10sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZUNoYXJ0T3duZXJOYW1lcyhjaGFydElkOiBzdHJpbmcpIHtcclxuICByZXR1cm4gdXNlVHJhbnNmb3JtZWRSZXNvdXJjZShcclxuICAgIHVzZUFwaVYxUmVzb3VyY2U8Q2hhcnQ+KGAvYXBpL3YxL2NoYXJ0LyR7Y2hhcnRJZH0/cT0ke293bmVyTmFtZXNRdWVyeX1gKSxcclxuICAgIGV4dHJhY3RPd25lck5hbWVzLFxyXG4gICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/hooks/apiResources/charts.ts\n");

/***/ }),

/***/ "./src/hooks/apiResources/dashboards.ts":
/*!**********************************************!*\
  !*** ./src/hooks/apiResources/dashboards.ts ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useDashboard\": () => (/* binding */ useDashboard),\n/* harmony export */   \"useDashboardCharts\": () => (/* binding */ useDashboardCharts),\n/* harmony export */   \"useDashboardDatasets\": () => (/* binding */ useDashboardDatasets)\n/* harmony export */ });\n/* unused harmony export useEmbeddedDashboard */\n/* harmony import */ var _apiResources__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apiResources */ \"./src/hooks/apiResources/apiResources.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst useDashboard = (idOrSlug) => (0,_apiResources__WEBPACK_IMPORTED_MODULE_0__.useTransformedResource)((0,_apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource)(`/api/v1/dashboard/${idOrSlug}`), (dashboard) => ({\n  ...dashboard,\n  // TODO: load these at the API level\n  metadata: dashboard.json_metadata && JSON.parse(dashboard.json_metadata) || {},\n  position_data: dashboard.position_json && JSON.parse(dashboard.position_json) }));\n\n// gets the chart definitions for a dashboard\n__signature__(useDashboard, \"useTransformedResource{}\\nuseApiV1Resource{}\", () => [_apiResources__WEBPACK_IMPORTED_MODULE_0__.useTransformedResource, _apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource]);const useDashboardCharts = (idOrSlug) => (0,_apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource)(`/api/v1/dashboard/${idOrSlug}/charts`);\n// gets the datasets for a dashboard\n// important: this endpoint only returns the fields in the dataset\n// that are necessary for rendering the given dashboard\n__signature__(useDashboardCharts, \"useApiV1Resource{}\", () => [_apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource]);const useDashboardDatasets = (idOrSlug) => (0,_apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource)(`/api/v1/dashboard/${idOrSlug}/datasets`);__signature__(useDashboardDatasets, \"useApiV1Resource{}\", () => [_apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource]);\nconst useEmbeddedDashboard = (idOrSlug) => (0,_apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource)(`/api/v1/dashboard/${idOrSlug}/embedded`);__signature__(useEmbeddedDashboard, \"useApiV1Resource{}\", () => [_apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(useDashboard, \"useDashboard\", \"/app/superset-frontend/src/hooks/apiResources/dashboards.ts\");reactHotLoader.register(useDashboardCharts, \"useDashboardCharts\", \"/app/superset-frontend/src/hooks/apiResources/dashboards.ts\");reactHotLoader.register(useDashboardDatasets, \"useDashboardDatasets\", \"/app/superset-frontend/src/hooks/apiResources/dashboards.ts\");reactHotLoader.register(useEmbeddedDashboard, \"useEmbeddedDashboard\", \"/app/superset-frontend/src/hooks/apiResources/dashboards.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaG9va3MvYXBpUmVzb3VyY2VzL2Rhc2hib2FyZHMudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJBO0FBRUE7QUFJQTtBQUNBO0FBQ0E7QUFFQTs7QUFLQTtBQWJBO0FBaUJBO0FBQ0E7QUFDQTtBQUxBO0FBU0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdXBlcnNldC8uL3NyYy9ob29rcy9hcGlSZXNvdXJjZXMvZGFzaGJvYXJkcy50cz9iYzE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXHJcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxyXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxyXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXHJcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcclxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXHJcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxyXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxyXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxyXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcclxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xyXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcblxyXG5pbXBvcnQgeyBEYXNoYm9hcmQsIERhdGFzb3VyY2UsIEVtYmVkZGVkRGFzaGJvYXJkIH0gZnJvbSAnc3JjL2Rhc2hib2FyZC90eXBlcyc7XHJcbmltcG9ydCB7IENoYXJ0IH0gZnJvbSAnc3JjL3R5cGVzL0NoYXJ0JztcclxuaW1wb3J0IHsgdXNlQXBpVjFSZXNvdXJjZSwgdXNlVHJhbnNmb3JtZWRSZXNvdXJjZSB9IGZyb20gJy4vYXBpUmVzb3VyY2VzJztcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VEYXNoYm9hcmQgPSAoaWRPclNsdWc6IHN0cmluZyB8IG51bWJlcikgPT5cclxuICB1c2VUcmFuc2Zvcm1lZFJlc291cmNlKFxyXG4gICAgdXNlQXBpVjFSZXNvdXJjZTxEYXNoYm9hcmQ+KGAvYXBpL3YxL2Rhc2hib2FyZC8ke2lkT3JTbHVnfWApLFxyXG4gICAgZGFzaGJvYXJkID0+ICh7XHJcbiAgICAgIC4uLmRhc2hib2FyZCxcclxuICAgICAgLy8gVE9ETzogbG9hZCB0aGVzZSBhdCB0aGUgQVBJIGxldmVsXHJcbiAgICAgIG1ldGFkYXRhOlxyXG4gICAgICAgIChkYXNoYm9hcmQuanNvbl9tZXRhZGF0YSAmJiBKU09OLnBhcnNlKGRhc2hib2FyZC5qc29uX21ldGFkYXRhKSkgfHwge30sXHJcbiAgICAgIHBvc2l0aW9uX2RhdGE6XHJcbiAgICAgICAgZGFzaGJvYXJkLnBvc2l0aW9uX2pzb24gJiYgSlNPTi5wYXJzZShkYXNoYm9hcmQucG9zaXRpb25fanNvbiksXHJcbiAgICB9KSxcclxuICApO1xyXG5cclxuLy8gZ2V0cyB0aGUgY2hhcnQgZGVmaW5pdGlvbnMgZm9yIGEgZGFzaGJvYXJkXHJcbmV4cG9ydCBjb25zdCB1c2VEYXNoYm9hcmRDaGFydHMgPSAoaWRPclNsdWc6IHN0cmluZyB8IG51bWJlcikgPT5cclxuICB1c2VBcGlWMVJlc291cmNlPENoYXJ0W10+KGAvYXBpL3YxL2Rhc2hib2FyZC8ke2lkT3JTbHVnfS9jaGFydHNgKTtcclxuXHJcbi8vIGdldHMgdGhlIGRhdGFzZXRzIGZvciBhIGRhc2hib2FyZFxyXG4vLyBpbXBvcnRhbnQ6IHRoaXMgZW5kcG9pbnQgb25seSByZXR1cm5zIHRoZSBmaWVsZHMgaW4gdGhlIGRhdGFzZXRcclxuLy8gdGhhdCBhcmUgbmVjZXNzYXJ5IGZvciByZW5kZXJpbmcgdGhlIGdpdmVuIGRhc2hib2FyZFxyXG5leHBvcnQgY29uc3QgdXNlRGFzaGJvYXJkRGF0YXNldHMgPSAoaWRPclNsdWc6IHN0cmluZyB8IG51bWJlcikgPT5cclxuICB1c2VBcGlWMVJlc291cmNlPERhdGFzb3VyY2VbXT4oYC9hcGkvdjEvZGFzaGJvYXJkLyR7aWRPclNsdWd9L2RhdGFzZXRzYCk7XHJcblxyXG5leHBvcnQgY29uc3QgdXNlRW1iZWRkZWREYXNoYm9hcmQgPSAoaWRPclNsdWc6IHN0cmluZyB8IG51bWJlcikgPT5cclxuICB1c2VBcGlWMVJlc291cmNlPEVtYmVkZGVkRGFzaGJvYXJkPihgL2FwaS92MS9kYXNoYm9hcmQvJHtpZE9yU2x1Z30vZW1iZWRkZWRgKTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/hooks/apiResources/dashboards.ts\n");

/***/ }),

/***/ "./src/hooks/apiResources/index.ts":
/*!*****************************************!*\
  !*** ./src/hooks/apiResources/index.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useApiV1Resource\": () => (/* reexport safe */ _apiResources__WEBPACK_IMPORTED_MODULE_0__.useApiV1Resource),\n/* harmony export */   \"useChartOwnerNames\": () => (/* reexport safe */ _charts__WEBPACK_IMPORTED_MODULE_1__.useChartOwnerNames),\n/* harmony export */   \"useDashboard\": () => (/* reexport safe */ _dashboards__WEBPACK_IMPORTED_MODULE_2__.useDashboard),\n/* harmony export */   \"useDashboardCharts\": () => (/* reexport safe */ _dashboards__WEBPACK_IMPORTED_MODULE_2__.useDashboardCharts),\n/* harmony export */   \"useDashboardDatasets\": () => (/* reexport safe */ _dashboards__WEBPACK_IMPORTED_MODULE_2__.useDashboardDatasets),\n/* harmony export */   \"useTables\": () => (/* reexport safe */ _tables__WEBPACK_IMPORTED_MODULE_3__.useTables)\n/* harmony export */ });\n/* harmony import */ var _apiResources__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apiResources */ \"./src/hooks/apiResources/apiResources.ts\");\n/* harmony import */ var _charts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./charts */ \"./src/hooks/apiResources/charts.ts\");\n/* harmony import */ var _dashboards__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dashboards */ \"./src/hooks/apiResources/dashboards.ts\");\n/* harmony import */ var _tables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tables */ \"./src/hooks/apiResources/tables.ts\");\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// A central catalog of API Resource hooks.\n// Add new API hooks here, organized under\n// different files for different resource types.\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaG9va3MvYXBpUmVzb3VyY2VzL2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3VwZXJzZXQvLi9zcmMvaG9va3MvYXBpUmVzb3VyY2VzL2luZGV4LnRzP2EwZDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcclxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXHJcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXHJcbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcclxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxyXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcclxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXHJcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXHJcbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXHJcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxyXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXHJcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuXHJcbmV4cG9ydCB7XHJcbiAgdXNlQXBpUmVzb3VyY2VGdWxsQm9keSxcclxuICB1c2VBcGlWMVJlc291cmNlLFxyXG4gIHVzZVRyYW5zZm9ybWVkUmVzb3VyY2UsXHJcbn0gZnJvbSAnLi9hcGlSZXNvdXJjZXMnO1xyXG5cclxuLy8gQSBjZW50cmFsIGNhdGFsb2cgb2YgQVBJIFJlc291cmNlIGhvb2tzLlxyXG4vLyBBZGQgbmV3IEFQSSBob29rcyBoZXJlLCBvcmdhbml6ZWQgdW5kZXJcclxuLy8gZGlmZmVyZW50IGZpbGVzIGZvciBkaWZmZXJlbnQgcmVzb3VyY2UgdHlwZXMuXHJcbmV4cG9ydCAqIGZyb20gJy4vY2hhcnRzJztcclxuZXhwb3J0ICogZnJvbSAnLi9kYXNoYm9hcmRzJztcclxuZXhwb3J0ICogZnJvbSAnLi90YWJsZXMnO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/hooks/apiResources/index.ts\n");

/***/ }),

/***/ "./src/hooks/apiResources/tables.ts":
/*!******************************************!*\
  !*** ./src/hooks/apiResources/tables.ts ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useTables\": () => (/* binding */ useTables)\n/* harmony export */ });\n/* unused harmony export fetchTables */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-query */ \"./node_modules/react-query/es/index.js\");\n/* harmony import */ var _superset_ui_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @superset-ui/core */ \"./packages/superset-ui-core/src/connection/SupersetClient.ts\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n\nfunction fetchTables(_ref) {let { dbId, schema, forceRefresh } = _ref;\n  const encodedSchema = schema ? encodeURIComponent(schema) : '';\n  // TODO: Would be nice to add pagination in a follow-up. Needs endpoint changes.\n  const endpoint = `/superset/tables/${dbId != null ? dbId : 'undefined'}/${encodedSchema}/${forceRefresh}/`;\n  return _superset_ui_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get({ endpoint });\n}\nfunction useTables(options) {\n  const { dbId, schema, onSuccess, onError } = options || {};\n  const forceRefreshRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  const params = { dbId, schema };\n  const result = (0,react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)(['tables', { dbId, schema }], () => fetchTables({ ...params, forceRefresh: forceRefreshRef.current }), {\n    select: (_ref2) => {let { json } = _ref2;return {\n        ...json,\n        hasMore: json.tableLength > json.options.length };},\n\n    enabled: Boolean(dbId && schema),\n    onSuccess,\n    onError,\n    onSettled: () => {\n      forceRefreshRef.current = false;\n    } });\n\n  return {\n    ...result,\n    refetch: () => {\n      forceRefreshRef.current = true;\n      return result.refetch();\n    } };\n\n}__signature__(useTables, \"useRef{forceRefreshRef}\\nuseQuery{result}\", () => [react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(fetchTables, \"fetchTables\", \"/app/superset-frontend/src/hooks/apiResources/tables.ts\");reactHotLoader.register(useTables, \"useTables\", \"/app/superset-frontend/src/hooks/apiResources/tables.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaG9va3MvYXBpUmVzb3VyY2VzL3RhYmxlcy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQkE7QUFDQTtBQUNBO0FBNkJBO0FBS0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N1cGVyc2V0Ly4vc3JjL2hvb2tzL2FwaVJlc291cmNlcy90YWJsZXMudHM/ZDcxOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxyXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcclxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cclxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxyXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXHJcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxyXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcclxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cclxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcclxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXHJcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcclxuICogdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgeyB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IHVzZVF1ZXJ5LCBVc2VRdWVyeU9wdGlvbnMgfSBmcm9tICdyZWFjdC1xdWVyeSc7XHJcbmltcG9ydCB7IFN1cGVyc2V0Q2xpZW50IH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xyXG5cclxuZXhwb3J0IHR5cGUgRmV0Y2hUYWJsZXNRdWVyeVBhcmFtcyA9IHtcclxuICBkYklkPzogc3RyaW5nIHwgbnVtYmVyO1xyXG4gIHNjaGVtYT86IHN0cmluZztcclxuICBmb3JjZVJlZnJlc2g/OiBib29sZWFuO1xyXG59O1xyXG5leHBvcnQgaW50ZXJmYWNlIFRhYmxlIHtcclxuICBsYWJlbDogc3RyaW5nO1xyXG4gIHZhbHVlOiBzdHJpbmc7XHJcbiAgdHlwZTogc3RyaW5nO1xyXG4gIGV4dHJhPzoge1xyXG4gICAgY2VydGlmaWNhdGlvbj86IHtcclxuICAgICAgY2VydGlmaWVkX2J5OiBzdHJpbmc7XHJcbiAgICAgIGRldGFpbHM6IHN0cmluZztcclxuICAgIH07XHJcbiAgICB3YXJuaW5nX21hcmtkb3duPzogc3RyaW5nO1xyXG4gIH07XHJcbn1cclxuXHJcbnR5cGUgUXVlcnlEYXRhID0ge1xyXG4gIGpzb246IHsgb3B0aW9uczogVGFibGVbXTsgdGFibGVMZW5ndGg6IG51bWJlciB9O1xyXG4gIHJlc3BvbnNlOiBSZXNwb25zZTtcclxufTtcclxuXHJcbmV4cG9ydCB0eXBlIERhdGEgPSBRdWVyeURhdGFbJ2pzb24nXSAmIHtcclxuICBoYXNNb3JlOiBib29sZWFuO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGZldGNoVGFibGVzKHtcclxuICBkYklkLFxyXG4gIHNjaGVtYSxcclxuICBmb3JjZVJlZnJlc2gsXHJcbn06IEZldGNoVGFibGVzUXVlcnlQYXJhbXMpIHtcclxuICBjb25zdCBlbmNvZGVkU2NoZW1hID0gc2NoZW1hID8gZW5jb2RlVVJJQ29tcG9uZW50KHNjaGVtYSkgOiAnJztcclxuICAvLyBUT0RPOiBXb3VsZCBiZSBuaWNlIHRvIGFkZCBwYWdpbmF0aW9uIGluIGEgZm9sbG93LXVwLiBOZWVkcyBlbmRwb2ludCBjaGFuZ2VzLlxyXG4gIGNvbnN0IGVuZHBvaW50ID0gYC9zdXBlcnNldC90YWJsZXMvJHtcclxuICAgIGRiSWQgPz8gJ3VuZGVmaW5lZCdcclxuICB9LyR7ZW5jb2RlZFNjaGVtYX0vJHtmb3JjZVJlZnJlc2h9L2A7XHJcbiAgcmV0dXJuIFN1cGVyc2V0Q2xpZW50LmdldCh7IGVuZHBvaW50IH0pIGFzIFByb21pc2U8UXVlcnlEYXRhPjtcclxufVxyXG5cclxudHlwZSBQYXJhbXMgPSBGZXRjaFRhYmxlc1F1ZXJ5UGFyYW1zICZcclxuICBQaWNrPFVzZVF1ZXJ5T3B0aW9ucywgJ29uU3VjY2VzcycgfCAnb25FcnJvcic+O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZVRhYmxlcyhvcHRpb25zOiBQYXJhbXMpIHtcclxuICBjb25zdCB7IGRiSWQsIHNjaGVtYSwgb25TdWNjZXNzLCBvbkVycm9yIH0gPSBvcHRpb25zIHx8IHt9O1xyXG4gIGNvbnN0IGZvcmNlUmVmcmVzaFJlZiA9IHVzZVJlZihmYWxzZSk7XHJcbiAgY29uc3QgcGFyYW1zID0geyBkYklkLCBzY2hlbWEgfTtcclxuICBjb25zdCByZXN1bHQgPSB1c2VRdWVyeTxRdWVyeURhdGEsIEVycm9yLCBEYXRhPihcclxuICAgIFsndGFibGVzJywgeyBkYklkLCBzY2hlbWEgfV0sXHJcbiAgICAoKSA9PiBmZXRjaFRhYmxlcyh7IC4uLnBhcmFtcywgZm9yY2VSZWZyZXNoOiBmb3JjZVJlZnJlc2hSZWYuY3VycmVudCB9KSxcclxuICAgIHtcclxuICAgICAgc2VsZWN0OiAoeyBqc29uIH0pID0+ICh7XHJcbiAgICAgICAgLi4uanNvbixcclxuICAgICAgICBoYXNNb3JlOiBqc29uLnRhYmxlTGVuZ3RoID4ganNvbi5vcHRpb25zLmxlbmd0aCxcclxuICAgICAgfSksXHJcbiAgICAgIGVuYWJsZWQ6IEJvb2xlYW4oZGJJZCAmJiBzY2hlbWEpLFxyXG4gICAgICBvblN1Y2Nlc3MsXHJcbiAgICAgIG9uRXJyb3IsXHJcbiAgICAgIG9uU2V0dGxlZDogKCkgPT4ge1xyXG4gICAgICAgIGZvcmNlUmVmcmVzaFJlZi5jdXJyZW50ID0gZmFsc2U7XHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICk7XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICAuLi5yZXN1bHQsXHJcbiAgICByZWZldGNoOiAoKSA9PiB7XHJcbiAgICAgIGZvcmNlUmVmcmVzaFJlZi5jdXJyZW50ID0gdHJ1ZTtcclxuICAgICAgcmV0dXJuIHJlc3VsdC5yZWZldGNoKCk7XHJcbiAgICB9LFxyXG4gIH07XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/hooks/apiResources/tables.ts\n");

/***/ })

}]);